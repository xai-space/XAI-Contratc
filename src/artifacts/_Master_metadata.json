{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_bond",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_uniswapV2Router02",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "_Forbidden",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "_InvalidAmountEth",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "_InvalidAmountToken",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "_NoOwner",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "pair",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountETH",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountToken",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "AddLiquidity",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "flag",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "version",
						"type": "string"
					}
				],
				"name": "ContractDeploy",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "addedLiquidityToken",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "amount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bond",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "crocSwapDex",
				"outputs": [
					{
						"internalType": "contract IBeraswap",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountToken",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountEth",
						"type": "uint256"
					}
				],
				"name": "execute",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_amountToken",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amountETH",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "factory",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getToken",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "isAdmin",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "liquidityOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenB",
						"type": "address"
					}
				],
				"name": "pairFor",
				"outputs": [
					{
						"internalType": "address",
						"name": "pair",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "price",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "rescueETH",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_admin",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_status",
						"type": "bool"
					}
				],
				"name": "setAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_bond",
						"type": "address"
					}
				],
				"name": "setBond",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_liquidityOwner",
						"type": "address"
					}
				],
				"name": "setLiquidityOwner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_uniswapV2Router02",
						"type": "address"
					}
				],
				"name": "setUniswapV2Router02",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "swapBERA",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "uniswapV2Router02",
				"outputs": [
					{
						"internalType": "contract IUniswapV2Router02",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "versions",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "wbera",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdrawtoken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"title": "_Master",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "This contract may be replaced by other strategies in the future.A  protocol graduation strategy for bootstrapping liquidity on uni-v2 AMMs.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"src/_Master.sol": "_Master"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
			"keccak256": "0x27c59ec88f0350d3d28d222a078e11bda664b955e012fe9a74962bf10c936209",
			"license": "MIT",
			"urls": [
				"bzz-raw://c3a300244e864b1362aea21080840ba1e4bc8dba7bcf21fe2dc4348b60d6b0d5",
				"dweb:/ipfs/QmV1L6ium91zyYCuxisumGnMVsQcNPQryaVp7t8aKgYGor"
			]
		},
		"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
			"keccak256": "0xdef64bb44aa222a632814704c59a6a5ceb4ea8ef5216749b17c73c3aa1cde00c",
			"license": "MIT",
			"urls": [
				"bzz-raw://f27ae1402a37e955103e938d769d76339a6968acb482e0e80d455767e533edd6",
				"dweb:/ipfs/QmTWPEMKMP7MujrfsZTFBm2voSzxJ6zkV32S4GJM4iwvKi"
			]
		},
		"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0xf758f03f984e2e493fa46454a553acd2f2f19e23beb7aeb77423a16548c7a127",
			"license": "MIT",
			"urls": [
				"bzz-raw://354e6443e672cd37292756a5007c881f94d94c2436ef863c0678759b0488d2c1",
				"dweb:/ipfs/QmQuDQAePWXF3WCzZoXLMVoVPubuskc2fG3DbARs6dGJRn"
			]
		},
		"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x2a67691f431a6e5eeae9012a19c82ceef113b43cd68435911dec83da57b9d407",
			"license": "MIT",
			"urls": [
				"bzz-raw://29aae0becfbae61a9dd9452f989f58ce843060af89ef5aeb01e7122c4e8b7475",
				"dweb:/ipfs/QmPaGNM5zCMkJKGm2dKrivwEegwfN7kQw9E7RvMgKbxrqj"
			]
		},
		"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0x7ec16fe73a675b22572684bfa0f108050eb259cec3110f556f0ae9edb69d7cd6",
			"license": "MIT",
			"urls": [
				"bzz-raw://810c3948142e0049c7a67b22220c976e266c782de2d2d4ca0a36d9041aaa15a4",
				"dweb:/ipfs/QmTLmHzCQhgdKrTyABwiLRHkKaAZMBi6oMzpAuxkqFnq2G"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
			"keccak256": "0x3aa312348f02eb2c6f71dd936583ec09761a5d25e5f7448217e2cd7739f595df",
			"license": "MIT",
			"urls": [
				"bzz-raw://ff75375a8b4207936052eb480b280004619ea67e9b6d64c5dcc8b7adc0d67687",
				"dweb:/ipfs/QmeJiGKLGYeS1Yyr8KqySNow3ykHfvwJc9wx5J44s33J1A"
			]
		},
		"lib/solady-main/src/utils/SafeTransferLib.sol": {
			"keccak256": "0xf972ba1ca050015699337f0d83e004ee09634d40a0d2f176bf45e09b3171cca2",
			"license": "AGPL-3.0-only",
			"urls": [
				"bzz-raw://d1e0e5790b9d376636a66cb8f3119d72e86cbb04e20131bcfdb9967d2a1f9295",
				"dweb:/ipfs/QmfZfoGsfBoTfwCXX6NwFUoXc2EiPf1HiNKGKH783L55oS"
			]
		},
		"src/_Master.sol": {
			"keccak256": "0x55d72bfc2b45ace91367205ec37ff1ed6a6e68db2304c8f34ddf2f3ad05a75b8",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://bcbe44e24f72d5b207854c1f4c11687ae9ee1ff9837c04a06ef6543a1123b5c4",
				"dweb:/ipfs/QmUXvotXhANywsRDQtTeGRmdRRVTCZYZzjirubJzLjCz43"
			]
		},
		"src/interfaces/IBeraswap.sol": {
			"keccak256": "0x598ab51da3e1ba96f6e2f860c8e1503a136f9d9c44256731db199ebfb18fc938",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://d7cf45d2770a0eae1d0ba3848b4bc4d22bf16065bbdb3fb4b3a7218e36fff23e",
				"dweb:/ipfs/Qmc2h1Cuh23wpcZ2o9ehD1LLacJ9DPRcjRxGSS4fygCwKf"
			]
		},
		"src/interfaces/IERC20.sol": {
			"keccak256": "0x29b810492e893b40c64064490d4ef39a66649c6b968df34a5295ebba074ee700",
			"license": "MIT",
			"urls": [
				"bzz-raw://71b1217236e95b850930abc4651ddeb98327943ff962db444a11ea5531bd6417",
				"dweb:/ipfs/QmfLgaM9tRFkJYCNoefQd7YDbx7sdEdUmphgtw6nEg8VRs"
			]
		},
		"src/interfaces/IUniswapV2Factory.sol": {
			"keccak256": "0x29010337f1ed91b89e67aaf48a9e8774489db3c5154aca6103520d8bd0260135",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://bfe7e7c8403a2b388df874afd336bbf16275c0f1792d28f4c5e7e93502a6ea40",
				"dweb:/ipfs/QmXfJodUBVbqR6c7WE2qCrn6UVjQPQPKRWVk1jSabttjUX"
			]
		},
		"src/interfaces/IUniswapV2Router02.sol": {
			"keccak256": "0x50e42c777f5d970c4919bb416e941b1a9fc7b080ec39d4686b38ee297951caa7",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://4dccf8ff6d8efe4860ea55ded552cf079123b5db2540b12cb76b1e0e425fbc1f",
				"dweb:/ipfs/QmePEiVjKjUS3f24rEdsDLfDeFu8HELsxwz2XaMqpUv82h"
			]
		},
		"src/interfaces/I_Token.sol": {
			"keccak256": "0xdb194c22c2b21ce8d4b66d443332205f154eebd48d267ce99031710fd8f23105",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://7c24b9a128fa9e644dbfcf70ec7f4519952ae208368a98d9d32662ce214282cf",
				"dweb:/ipfs/Qme1gRnQxFTLMmpzvvE3UcytuF3e5P6FkqNeeaqMmyVRXH"
			]
		}
	},
	"version": 1
}