{
	"id": "786df82a477cb31e01437ad605e8f1c1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/_Recommend.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\r\n\r\npragma solidity 0.8.19;\r\n\r\nimport { Ownable } from \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\";\r\nimport { SafeTransferLib } from \"lib/solady-main/src/utils/SafeTransferLib.sol\";\r\nimport { ReentrancyGuard } from \"lib/solady-main/src/utils/ReentrancyGuard.sol\";\r\n\r\n/**\r\n * @title _Recommend.\r\n * @dev A contract that recommends relevant features.\r\n */\r\ncontract _Recommend is Ownable, ReentrancyGuard {\r\n    error _NoTokensToClaim();\r\n    error _NotSufficientFund();\r\n    error _CallerNotEOA();\r\n    error _IllegalValue();\r\n\r\n    mapping(address => uint256) public claimableTokens;\r\n    mapping(address => uint256) public alreadyClaimed;\r\n    mapping(address => uint256) public obtainedAmount;\r\n    uint256 public recommendAmount = 2;\r\n\r\n    event TokensSet(address indexed user, uint256 amount);\r\n    event TokensClaimed(address indexed user, uint256 amount);\r\n\r\n    constructor() Ownable(msg.sender) {}\r\n\r\n    receive() external payable {}\r\n\r\n    function rescueETH(address to, uint256 value) external onlyOwner {\r\n        SafeTransferLib.safeTransferETH(to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev The referrer's algebra.\r\n     * @param _recommendAmount The reward is returned to the superior algebra.\r\n     */\r\n    function setRecommendAmount(uint256 _recommendAmount) public onlyOwner {\r\n        recommendAmount = _recommendAmount;\r\n    }\r\n\r\n    /**\r\n     * @dev Only bond contracts can set a record of tokens that can be claimed.\r\n     * @param referrer The referrer.\r\n     * @param amount The quantity that can be claimed.\r\n     */\r\n    function setClaimableTokens(address referrer, uint256 amount) external payable {\r\n        if (msg.value != amount && amount != 0) revert _IllegalValue();\r\n        claimableTokens[referrer] += amount;\r\n        obtainedAmount[referrer] += amount;\r\n\r\n        emit TokensSet(referrer, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Has been recorded can claim the corresponding referral reward.\r\n     */\r\n    function claimTokens() external nonReentrant {\r\n        if (tx.origin != msg.sender) revert _CallerNotEOA();\r\n        uint256 amount = claimableTokens[msg.sender];\r\n        if (amount <= 0) revert _NoTokensToClaim();\r\n        if (address(this).balance < amount) revert _NotSufficientFund();\r\n\r\n        claimableTokens[msg.sender] = 0;\r\n        SafeTransferLib.safeTransferETH(msg.sender, amount);\r\n        alreadyClaimed[msg.sender] += amount;\r\n\r\n        emit TokensClaimed(msg.sender, amount);\r\n    }\r\n}"
			},
			"lib/solady-main/src/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/// @notice Reentrancy guard mixin.\n/// @author Solady (https://github.com/vectorized/solady/blob/main/src/utils/ReentrancyGuard.sol)\nabstract contract ReentrancyGuard {\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       CUSTOM ERRORS                        */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Unauthorized reentrant call.\n    error Reentrancy();\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                          STORAGE                           */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Equivalent to: `uint72(bytes9(keccak256(\"_REENTRANCY_GUARD_SLOT\")))`.\n    /// 9 bytes is large enough to avoid collisions with lower slots,\n    /// but not too large to result in excessive bytecode bloat.\n    uint256 private constant _REENTRANCY_GUARD_SLOT = 0x929eee149b4bd21268;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                      REENTRANCY GUARD                      */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Guards a function from reentrancy.\n    modifier nonReentrant() virtual {\n        /// @solidity memory-safe-assembly\n        assembly {\n            if eq(sload(_REENTRANCY_GUARD_SLOT), address()) {\n                mstore(0x00, 0xab143c06) // `Reentrancy()`.\n                revert(0x1c, 0x04)\n            }\n            sstore(_REENTRANCY_GUARD_SLOT, address())\n        }\n        _;\n        /// @solidity memory-safe-assembly\n        assembly {\n            sstore(_REENTRANCY_GUARD_SLOT, codesize())\n        }\n    }\n\n    /// @dev Guards a view function from read-only reentrancy.\n    modifier nonReadReentrant() virtual {\n        /// @solidity memory-safe-assembly\n        assembly {\n            if eq(sload(_REENTRANCY_GUARD_SLOT), address()) {\n                mstore(0x00, 0xab143c06) // `Reentrancy()`.\n                revert(0x1c, 0x04)\n            }\n        }\n        _;\n    }\n}\n"
			},
			"lib/solady-main/src/utils/SafeTransferLib.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/// @notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\n/// @author Solady (https://github.com/vectorized/solady/blob/main/src/utils/SafeTransferLib.sol)\n/// @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)\n/// @author Permit2 operations from (https://github.com/Uniswap/permit2/blob/main/src/libraries/Permit2Lib.sol)\n///\n/// @dev Note:\n/// - For ETH transfers, please use `forceSafeTransferETH` for DoS protection.\nlibrary SafeTransferLib {\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       CUSTOM ERRORS                        */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The ETH transfer has failed.\n    error ETHTransferFailed();\n\n    /// @dev The ERC20 `transferFrom` has failed.\n    error TransferFromFailed();\n\n    /// @dev The ERC20 `transfer` has failed.\n    error TransferFailed();\n\n    /// @dev The ERC20 `approve` has failed.\n    error ApproveFailed();\n\n    /// @dev The Permit2 operation has failed.\n    error Permit2Failed();\n\n    /// @dev The Permit2 amount must be less than `2**160 - 1`.\n    error Permit2AmountOverflow();\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                         CONSTANTS                          */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Suggested gas stipend for contract receiving ETH that disallows any storage writes.\n    uint256 internal constant GAS_STIPEND_NO_STORAGE_WRITES = 2300;\n\n    /// @dev Suggested gas stipend for contract receiving ETH to perform a few\n    /// storage reads and writes, but low enough to prevent griefing.\n    uint256 internal constant GAS_STIPEND_NO_GRIEF = 100000;\n\n    /// @dev The unique EIP-712 domain domain separator for the DAI token contract.\n    bytes32 internal constant DAI_DOMAIN_SEPARATOR =\n        0xdbb8cf42e1ecb028be3f3dbc922e1d878b963f411dc388ced501601c60f7c6f7;\n\n    /// @dev The address for the WETH9 contract on Ethereum mainnet.\n    address internal constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n\n    /// @dev The canonical Permit2 address.\n    /// [Github](https://github.com/Uniswap/permit2)\n    /// [Etherscan](https://etherscan.io/address/0x000000000022D473030F116dDEE9F6B43aC78BA3)\n    address internal constant PERMIT2 = 0x000000000022D473030F116dDEE9F6B43aC78BA3;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       ETH OPERATIONS                       */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    // If the ETH transfer MUST succeed with a reasonable gas budget, use the force variants.\n    //\n    // The regular variants:\n    // - Forwards all remaining gas to the target.\n    // - Reverts if the target reverts.\n    // - Reverts if the current contract has insufficient balance.\n    //\n    // The force variants:\n    // - Forwards with an optional gas stipend\n    //   (defaults to `GAS_STIPEND_NO_GRIEF`, which is sufficient for most cases).\n    // - If the target reverts, or if the gas stipend is exhausted,\n    //   creates a temporary contract to force send the ETH via `SELFDESTRUCT`.\n    //   Future compatible with `SENDALL`: https://eips.ethereum.org/EIPS/eip-4758.\n    // - Reverts if the current contract has insufficient balance.\n    //\n    // The try variants:\n    // - Forwards with a mandatory gas stipend.\n    // - Instead of reverting, returns whether the transfer succeeded.\n\n    /// @dev Sends `amount` (in wei) ETH to `to`.\n    function safeTransferETH(address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            if iszero(call(gas(), to, amount, codesize(), 0x00, codesize(), 0x00)) {\n                mstore(0x00, 0xb12d13eb) // `ETHTransferFailed()`.\n                revert(0x1c, 0x04)\n            }\n        }\n    }\n\n    /// @dev Sends all the ETH in the current contract to `to`.\n    function safeTransferAllETH(address to) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Transfer all the ETH and check if it succeeded or not.\n            if iszero(call(gas(), to, selfbalance(), codesize(), 0x00, codesize(), 0x00)) {\n                mstore(0x00, 0xb12d13eb) // `ETHTransferFailed()`.\n                revert(0x1c, 0x04)\n            }\n        }\n    }\n\n    /// @dev Force sends `amount` (in wei) ETH to `to`, with a `gasStipend`.\n    function forceSafeTransferETH(address to, uint256 amount, uint256 gasStipend) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            if lt(selfbalance(), amount) {\n                mstore(0x00, 0xb12d13eb) // `ETHTransferFailed()`.\n                revert(0x1c, 0x04)\n            }\n            if iszero(call(gasStipend, to, amount, codesize(), 0x00, codesize(), 0x00)) {\n                mstore(0x00, to) // Store the address in scratch space.\n                mstore8(0x0b, 0x73) // Opcode `PUSH20`.\n                mstore8(0x20, 0xff) // Opcode `SELFDESTRUCT`.\n                if iszero(create(amount, 0x0b, 0x16)) { revert(codesize(), codesize()) } // For gas estimation.\n            }\n        }\n    }\n\n    /// @dev Force sends all the ETH in the current contract to `to`, with a `gasStipend`.\n    function forceSafeTransferAllETH(address to, uint256 gasStipend) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            if iszero(call(gasStipend, to, selfbalance(), codesize(), 0x00, codesize(), 0x00)) {\n                mstore(0x00, to) // Store the address in scratch space.\n                mstore8(0x0b, 0x73) // Opcode `PUSH20`.\n                mstore8(0x20, 0xff) // Opcode `SELFDESTRUCT`.\n                if iszero(create(selfbalance(), 0x0b, 0x16)) { revert(codesize(), codesize()) } // For gas estimation.\n            }\n        }\n    }\n\n    /// @dev Force sends `amount` (in wei) ETH to `to`, with `GAS_STIPEND_NO_GRIEF`.\n    function forceSafeTransferETH(address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            if lt(selfbalance(), amount) {\n                mstore(0x00, 0xb12d13eb) // `ETHTransferFailed()`.\n                revert(0x1c, 0x04)\n            }\n            if iszero(call(GAS_STIPEND_NO_GRIEF, to, amount, codesize(), 0x00, codesize(), 0x00)) {\n                mstore(0x00, to) // Store the address in scratch space.\n                mstore8(0x0b, 0x73) // Opcode `PUSH20`.\n                mstore8(0x20, 0xff) // Opcode `SELFDESTRUCT`.\n                if iszero(create(amount, 0x0b, 0x16)) { revert(codesize(), codesize()) } // For gas estimation.\n            }\n        }\n    }\n\n    /// @dev Force sends all the ETH in the current contract to `to`, with `GAS_STIPEND_NO_GRIEF`.\n    function forceSafeTransferAllETH(address to) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // forgefmt: disable-next-item\n            if iszero(call(GAS_STIPEND_NO_GRIEF, to, selfbalance(), codesize(), 0x00, codesize(), 0x00)) {\n                mstore(0x00, to) // Store the address in scratch space.\n                mstore8(0x0b, 0x73) // Opcode `PUSH20`.\n                mstore8(0x20, 0xff) // Opcode `SELFDESTRUCT`.\n                if iszero(create(selfbalance(), 0x0b, 0x16)) { revert(codesize(), codesize()) } // For gas estimation.\n            }\n        }\n    }\n\n    /// @dev Sends `amount` (in wei) ETH to `to`, with a `gasStipend`.\n    function trySafeTransferETH(address to, uint256 amount, uint256 gasStipend)\n        internal\n        returns (bool success)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            success := call(gasStipend, to, amount, codesize(), 0x00, codesize(), 0x00)\n        }\n    }\n\n    /// @dev Sends all the ETH in the current contract to `to`, with a `gasStipend`.\n    function trySafeTransferAllETH(address to, uint256 gasStipend)\n        internal\n        returns (bool success)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            success := call(gasStipend, to, selfbalance(), codesize(), 0x00, codesize(), 0x00)\n        }\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                      ERC20 OPERATIONS                      */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Sends `amount` of ERC20 `token` from `from` to `to`.\n    /// Reverts upon failure.\n    ///\n    /// The `from` account must have at least `amount` approved for\n    /// the current contract to manage.\n    function safeTransferFrom(address token, address from, address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Cache the free memory pointer.\n            mstore(0x60, amount) // Store the `amount` argument.\n            mstore(0x40, to) // Store the `to` argument.\n            mstore(0x2c, shl(96, from)) // Store the `from` argument.\n            mstore(0x0c, 0x23b872dd000000000000000000000000) // `transferFrom(address,address,uint256)`.\n            let success := call(gas(), token, 0, 0x1c, 0x64, 0x00, 0x20)\n            if iszero(and(eq(mload(0x00), 1), success)) {\n                if iszero(lt(or(iszero(extcodesize(token)), returndatasize()), success)) {\n                    mstore(0x00, 0x7939f424) // `TransferFromFailed()`.\n                    revert(0x1c, 0x04)\n                }\n            }\n            mstore(0x60, 0) // Restore the zero slot to zero.\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /// @dev Sends `amount` of ERC20 `token` from `from` to `to`.\n    ///\n    /// The `from` account must have at least `amount` approved for the current contract to manage.\n    function trySafeTransferFrom(address token, address from, address to, uint256 amount)\n        internal\n        returns (bool success)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Cache the free memory pointer.\n            mstore(0x60, amount) // Store the `amount` argument.\n            mstore(0x40, to) // Store the `to` argument.\n            mstore(0x2c, shl(96, from)) // Store the `from` argument.\n            mstore(0x0c, 0x23b872dd000000000000000000000000) // `transferFrom(address,address,uint256)`.\n            success := call(gas(), token, 0, 0x1c, 0x64, 0x00, 0x20)\n            if iszero(and(eq(mload(0x00), 1), success)) {\n                success := lt(or(iszero(extcodesize(token)), returndatasize()), success)\n            }\n            mstore(0x60, 0) // Restore the zero slot to zero.\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /// @dev Sends all of ERC20 `token` from `from` to `to`.\n    /// Reverts upon failure.\n    ///\n    /// The `from` account must have their entire balance approved for the current contract to manage.\n    function safeTransferAllFrom(address token, address from, address to)\n        internal\n        returns (uint256 amount)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Cache the free memory pointer.\n            mstore(0x40, to) // Store the `to` argument.\n            mstore(0x2c, shl(96, from)) // Store the `from` argument.\n            mstore(0x0c, 0x70a08231000000000000000000000000) // `balanceOf(address)`.\n            // Read the balance, reverting upon failure.\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    gt(returndatasize(), 0x1f), // At least 32 bytes returned.\n                    staticcall(gas(), token, 0x1c, 0x24, 0x60, 0x20)\n                )\n            ) {\n                mstore(0x00, 0x7939f424) // `TransferFromFailed()`.\n                revert(0x1c, 0x04)\n            }\n            mstore(0x00, 0x23b872dd) // `transferFrom(address,address,uint256)`.\n            amount := mload(0x60) // The `amount` is already at 0x60. We'll need to return it.\n            // Perform the transfer, reverting upon failure.\n            let success := call(gas(), token, 0, 0x1c, 0x64, 0x00, 0x20)\n            if iszero(and(eq(mload(0x00), 1), success)) {\n                if iszero(lt(or(iszero(extcodesize(token)), returndatasize()), success)) {\n                    mstore(0x00, 0x7939f424) // `TransferFromFailed()`.\n                    revert(0x1c, 0x04)\n                }\n            }\n            mstore(0x60, 0) // Restore the zero slot to zero.\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /// @dev Sends `amount` of ERC20 `token` from the current contract to `to`.\n    /// Reverts upon failure.\n    function safeTransfer(address token, address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x14, to) // Store the `to` argument.\n            mstore(0x34, amount) // Store the `amount` argument.\n            mstore(0x00, 0xa9059cbb000000000000000000000000) // `transfer(address,uint256)`.\n            // Perform the transfer, reverting upon failure.\n            let success := call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n            if iszero(and(eq(mload(0x00), 1), success)) {\n                if iszero(lt(or(iszero(extcodesize(token)), returndatasize()), success)) {\n                    mstore(0x00, 0x90b8ec18) // `TransferFailed()`.\n                    revert(0x1c, 0x04)\n                }\n            }\n            mstore(0x34, 0) // Restore the part of the free memory pointer that was overwritten.\n        }\n    }\n\n    /// @dev Sends all of ERC20 `token` from the current contract to `to`.\n    /// Reverts upon failure.\n    function safeTransferAll(address token, address to) internal returns (uint256 amount) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, 0x70a08231) // Store the function selector of `balanceOf(address)`.\n            mstore(0x20, address()) // Store the address of the current contract.\n            // Read the balance, reverting upon failure.\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    gt(returndatasize(), 0x1f), // At least 32 bytes returned.\n                    staticcall(gas(), token, 0x1c, 0x24, 0x34, 0x20)\n                )\n            ) {\n                mstore(0x00, 0x90b8ec18) // `TransferFailed()`.\n                revert(0x1c, 0x04)\n            }\n            mstore(0x14, to) // Store the `to` argument.\n            amount := mload(0x34) // The `amount` is already at 0x34. We'll need to return it.\n            mstore(0x00, 0xa9059cbb000000000000000000000000) // `transfer(address,uint256)`.\n            // Perform the transfer, reverting upon failure.\n            let success := call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n            if iszero(and(eq(mload(0x00), 1), success)) {\n                if iszero(lt(or(iszero(extcodesize(token)), returndatasize()), success)) {\n                    mstore(0x00, 0x90b8ec18) // `TransferFailed()`.\n                    revert(0x1c, 0x04)\n                }\n            }\n            mstore(0x34, 0) // Restore the part of the free memory pointer that was overwritten.\n        }\n    }\n\n    /// @dev Sets `amount` of ERC20 `token` for `to` to manage on behalf of the current contract.\n    /// Reverts upon failure.\n    function safeApprove(address token, address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x14, to) // Store the `to` argument.\n            mstore(0x34, amount) // Store the `amount` argument.\n            mstore(0x00, 0x095ea7b3000000000000000000000000) // `approve(address,uint256)`.\n            let success := call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n            if iszero(and(eq(mload(0x00), 1), success)) {\n                if iszero(lt(or(iszero(extcodesize(token)), returndatasize()), success)) {\n                    mstore(0x00, 0x3e3f8f73) // `ApproveFailed()`.\n                    revert(0x1c, 0x04)\n                }\n            }\n            mstore(0x34, 0) // Restore the part of the free memory pointer that was overwritten.\n        }\n    }\n\n    /// @dev Sets `amount` of ERC20 `token` for `to` to manage on behalf of the current contract.\n    /// If the initial attempt to approve fails, attempts to reset the approved amount to zero,\n    /// then retries the approval again (some tokens, e.g. USDT, requires this).\n    /// Reverts upon failure.\n    function safeApproveWithRetry(address token, address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x14, to) // Store the `to` argument.\n            mstore(0x34, amount) // Store the `amount` argument.\n            mstore(0x00, 0x095ea7b3000000000000000000000000) // `approve(address,uint256)`.\n            // Perform the approval, retrying upon failure.\n            let success := call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n            if iszero(and(eq(mload(0x00), 1), success)) {\n                if iszero(lt(or(iszero(extcodesize(token)), returndatasize()), success)) {\n                    mstore(0x34, 0) // Store 0 for the `amount`.\n                    mstore(0x00, 0x095ea7b3000000000000000000000000) // `approve(address,uint256)`.\n                    pop(call(gas(), token, 0, 0x10, 0x44, codesize(), 0x00)) // Reset the approval.\n                    mstore(0x34, amount) // Store back the original `amount`.\n                    // Retry the approval, reverting upon failure.\n                    success := call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n                    if iszero(and(eq(mload(0x00), 1), success)) {\n                        // Check the `extcodesize` again just in case the token selfdestructs lol.\n                        if iszero(lt(or(iszero(extcodesize(token)), returndatasize()), success)) {\n                            mstore(0x00, 0x3e3f8f73) // `ApproveFailed()`.\n                            revert(0x1c, 0x04)\n                        }\n                    }\n                }\n            }\n            mstore(0x34, 0) // Restore the part of the free memory pointer that was overwritten.\n        }\n    }\n\n    /// @dev Returns the amount of ERC20 `token` owned by `account`.\n    /// Returns zero if the `token` does not exist.\n    function balanceOf(address token, address account) internal view returns (uint256 amount) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x14, account) // Store the `account` argument.\n            mstore(0x00, 0x70a08231000000000000000000000000) // `balanceOf(address)`.\n            amount :=\n                mul( // The arguments of `mul` are evaluated from right to left.\n                    mload(0x20),\n                    and( // The arguments of `and` are evaluated from right to left.\n                        gt(returndatasize(), 0x1f), // At least 32 bytes returned.\n                        staticcall(gas(), token, 0x10, 0x24, 0x20, 0x20)\n                    )\n                )\n        }\n    }\n\n    /// @dev Sends `amount` of ERC20 `token` from `from` to `to`.\n    /// If the initial attempt fails, try to use Permit2 to transfer the token.\n    /// Reverts upon failure.\n    ///\n    /// The `from` account must have at least `amount` approved for the current contract to manage.\n    function safeTransferFrom2(address token, address from, address to, uint256 amount) internal {\n        if (!trySafeTransferFrom(token, from, to, amount)) {\n            permit2TransferFrom(token, from, to, amount);\n        }\n    }\n\n    /// @dev Sends `amount` of ERC20 `token` from `from` to `to` via Permit2.\n    /// Reverts upon failure.\n    function permit2TransferFrom(address token, address from, address to, uint256 amount)\n        internal\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40)\n            mstore(add(m, 0x74), shr(96, shl(96, token)))\n            mstore(add(m, 0x54), amount)\n            mstore(add(m, 0x34), to)\n            mstore(add(m, 0x20), shl(96, from))\n            // `transferFrom(address,address,uint160,address)`.\n            mstore(m, 0x36c78516000000000000000000000000)\n            let p := PERMIT2\n            let exists := eq(chainid(), 1)\n            if iszero(exists) { exists := iszero(iszero(extcodesize(p))) }\n            if iszero(\n                and(\n                    call(gas(), p, 0, add(m, 0x10), 0x84, codesize(), 0x00),\n                    lt(iszero(extcodesize(token)), exists) // Token has code and Permit2 exists.\n                )\n            ) {\n                mstore(0x00, 0x7939f4248757f0fd) // `TransferFromFailed()` or `Permit2AmountOverflow()`.\n                revert(add(0x18, shl(2, iszero(iszero(shr(160, amount))))), 0x04)\n            }\n        }\n    }\n\n    /// @dev Permit a user to spend a given amount of\n    /// another user's tokens via native EIP-2612 permit if possible, falling\n    /// back to Permit2 if native permit fails or is not implemented on the token.\n    function permit2(\n        address token,\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        bool success;\n        /// @solidity memory-safe-assembly\n        assembly {\n            for {} shl(96, xor(token, WETH9)) {} {\n                mstore(0x00, 0x3644e515) // `DOMAIN_SEPARATOR()`.\n                if iszero(\n                    and( // The arguments of `and` are evaluated from right to left.\n                        lt(iszero(mload(0x00)), eq(returndatasize(), 0x20)), // Returns 1 non-zero word.\n                        // Gas stipend to limit gas burn for tokens that don't refund gas when\n                        // an non-existing function is called. 5K should be enough for a SLOAD.\n                        staticcall(5000, token, 0x1c, 0x04, 0x00, 0x20)\n                    )\n                ) { break }\n                // After here, we can be sure that token is a contract.\n                let m := mload(0x40)\n                mstore(add(m, 0x34), spender)\n                mstore(add(m, 0x20), shl(96, owner))\n                mstore(add(m, 0x74), deadline)\n                if eq(mload(0x00), DAI_DOMAIN_SEPARATOR) {\n                    mstore(0x14, owner)\n                    mstore(0x00, 0x7ecebe00000000000000000000000000) // `nonces(address)`.\n                    mstore(add(m, 0x94), staticcall(gas(), token, 0x10, 0x24, add(m, 0x54), 0x20))\n                    mstore(m, 0x8fcbaf0c000000000000000000000000) // `IDAIPermit.permit`.\n                    // `nonces` is already at `add(m, 0x54)`.\n                    // `1` is already stored at `add(m, 0x94)`.\n                    mstore(add(m, 0xb4), and(0xff, v))\n                    mstore(add(m, 0xd4), r)\n                    mstore(add(m, 0xf4), s)\n                    success := call(gas(), token, 0, add(m, 0x10), 0x104, codesize(), 0x00)\n                    break\n                }\n                mstore(m, 0xd505accf000000000000000000000000) // `IERC20Permit.permit`.\n                mstore(add(m, 0x54), amount)\n                mstore(add(m, 0x94), and(0xff, v))\n                mstore(add(m, 0xb4), r)\n                mstore(add(m, 0xd4), s)\n                success := call(gas(), token, 0, add(m, 0x10), 0xe4, codesize(), 0x00)\n                break\n            }\n        }\n        if (!success) simplePermit2(token, owner, spender, amount, deadline, v, r, s);\n    }\n\n    /// @dev Simple permit on the Permit2 contract.\n    function simplePermit2(\n        address token,\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40)\n            mstore(m, 0x927da105) // `allowance(address,address,address)`.\n            {\n                let addressMask := shr(96, not(0))\n                mstore(add(m, 0x20), and(addressMask, owner))\n                mstore(add(m, 0x40), and(addressMask, token))\n                mstore(add(m, 0x60), and(addressMask, spender))\n                mstore(add(m, 0xc0), and(addressMask, spender))\n            }\n            let p := mul(PERMIT2, iszero(shr(160, amount)))\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    gt(returndatasize(), 0x5f), // Returns 3 words: `amount`, `expiration`, `nonce`.\n                    staticcall(gas(), p, add(m, 0x1c), 0x64, add(m, 0x60), 0x60)\n                )\n            ) {\n                mstore(0x00, 0x6b836e6b8757f0fd) // `Permit2Failed()` or `Permit2AmountOverflow()`.\n                revert(add(0x18, shl(2, iszero(p))), 0x04)\n            }\n            mstore(m, 0x2b67b570) // `Permit2.permit` (PermitSingle variant).\n            // `owner` is already `add(m, 0x20)`.\n            // `token` is already at `add(m, 0x40)`.\n            mstore(add(m, 0x60), amount)\n            mstore(add(m, 0x80), 0xffffffffffff) // `expiration = type(uint48).max`.\n            // `nonce` is already at `add(m, 0xa0)`.\n            // `spender` is already at `add(m, 0xc0)`.\n            mstore(add(m, 0xe0), deadline)\n            mstore(add(m, 0x100), 0x100) // `signature` offset.\n            mstore(add(m, 0x120), 0x41) // `signature` length.\n            mstore(add(m, 0x140), r)\n            mstore(add(m, 0x160), s)\n            mstore(add(m, 0x180), shl(248, v))\n            if iszero( // Revert if token does not have code, or if the call fails.\n            mul(extcodesize(token), call(gas(), p, 0, add(m, 0x1c), 0x184, codesize(), 0x00))) {\n                mstore(0x00, 0x6b836e6b) // `Permit2Failed()`.\n                revert(0x1c, 0x04)\n            }\n        }\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity 0.8.19;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity 0.8.19;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x27c59ec88f0350d3d28d222a078e11bda664b955e012fe9a74962bf10c936209\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3a300244e864b1362aea21080840ba1e4bc8dba7bcf21fe2dc4348b60d6b0d5\",\"dweb:/ipfs/QmV1L6ium91zyYCuxisumGnMVsQcNPQryaVp7t8aKgYGor\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3aa312348f02eb2c6f71dd936583ec09761a5d25e5f7448217e2cd7739f595df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff75375a8b4207936052eb480b280004619ea67e9b6d64c5dcc8b7adc0d67687\",\"dweb:/ipfs/QmeJiGKLGYeS1Yyr8KqySNow3ykHfvwJc9wx5J44s33J1A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "lib/openzeppelin-contracts/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3aa312348f02eb2c6f71dd936583ec09761a5d25e5f7448217e2cd7739f595df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff75375a8b4207936052eb480b280004619ea67e9b6d64c5dcc8b7adc0d67687\",\"dweb:/ipfs/QmeJiGKLGYeS1Yyr8KqySNow3ykHfvwJc9wx5J44s33J1A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/solady-main/src/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "Reentrancy",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "Solady (https://github.com/vectorized/solady/blob/main/src/utils/ReentrancyGuard.sol)",
						"errors": {
							"Reentrancy()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_REENTRANCY_GUARD_SLOT": {
								"details": "Equivalent to: `uint72(bytes9(keccak256(\"_REENTRANCY_GUARD_SLOT\")))`. 9 bytes is large enough to avoid collisions with lower slots, but not too large to result in excessive bytecode bloat."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Reentrancy\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"Solady (https://github.com/vectorized/solady/blob/main/src/utils/ReentrancyGuard.sol)\",\"errors\":{\"Reentrancy()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_REENTRANCY_GUARD_SLOT\":{\"details\":\"Equivalent to: `uint72(bytes9(keccak256(\\\"_REENTRANCY_GUARD_SLOT\\\")))`. 9 bytes is large enough to avoid collisions with lower slots, but not too large to result in excessive bytecode bloat.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Reentrancy guard mixin.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/solady-main/src/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/solady-main/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xdb28f318ec45197a6c7cc2abebed67d7cb8b965838ef962e3844423256a9ddb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://873cd46b77a2aeb781e7a0d131e7299151323ed884c330101a51d0727e218d98\",\"dweb:/ipfs/QmddadCjyedztvdSgLZEyKWoRes2SqtpviSjhEbSNrkUoi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Reentrancy guard mixin.",
						"version": 1
					}
				}
			},
			"lib/solady-main/src/utils/SafeTransferLib.sol": {
				"SafeTransferLib": {
					"abi": [
						{
							"inputs": [],
							"name": "ApproveFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ETHTransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Permit2AmountOverflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Permit2Failed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromFailed",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "Solady (https://github.com/vectorized/solady/blob/main/src/utils/SafeTransferLib.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)Permit2 operations from (https://github.com/Uniswap/permit2/blob/main/src/libraries/Permit2Lib.sol)",
						"details": "Note: - For ETH transfers, please use `forceSafeTransferETH` for DoS protection.",
						"errors": {
							"ApproveFailed()": [
								{
									"details": "The ERC20 `approve` has failed."
								}
							],
							"ETHTransferFailed()": [
								{
									"details": "The ETH transfer has failed."
								}
							],
							"Permit2AmountOverflow()": [
								{
									"details": "The Permit2 amount must be less than `2**160 - 1`."
								}
							],
							"Permit2Failed()": [
								{
									"details": "The Permit2 operation has failed."
								}
							],
							"TransferFailed()": [
								{
									"details": "The ERC20 `transfer` has failed."
								}
							],
							"TransferFromFailed()": [
								{
									"details": "The ERC20 `transferFrom` has failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"DAI_DOMAIN_SEPARATOR": {
								"details": "The unique EIP-712 domain domain separator for the DAI token contract."
							},
							"GAS_STIPEND_NO_GRIEF": {
								"details": "Suggested gas stipend for contract receiving ETH to perform a few storage reads and writes, but low enough to prevent griefing."
							},
							"GAS_STIPEND_NO_STORAGE_WRITES": {
								"details": "Suggested gas stipend for contract receiving ETH that disallows any storage writes."
							},
							"PERMIT2": {
								"details": "The canonical Permit2 address. [Github](https://github.com/Uniswap/permit2) [Etherscan](https://etherscan.io/address/0x000000000022D473030F116dDEE9F6B43aC78BA3)"
							},
							"WETH9": {
								"details": "The address for the WETH9 contract on Ethereum mainnet."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":579:26316  library SafeTransferLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":579:26316  library SafeTransferLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201c01e78f3079e65a33d8c20c9a3c52c1c62af8f84ae8c2e889978b4f0f5a227164736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c01e78f3079e65a33d8c20c9a3c52c1c62af8f84ae8c2e889978b4f0f5a227164736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR ADD 0xE7 DUP16 ADDRESS PUSH26 0xE65A33D8C20C9A3C52C1C62AF8F84AE8C2E889978B4F0F5A2271 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "579:25737:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c01e78f3079e65a33d8c20c9a3c52c1c62af8f84ae8c2e889978b4f0f5a227164736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR ADD 0xE7 DUP16 ADDRESS PUSH26 0xE65A33D8C20C9A3C52C1C62AF8F84AE8C2E889978B4F0F5A2271 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "579:25737:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"balanceOf(address,address)": "infinite",
								"forceSafeTransferAllETH(address)": "infinite",
								"forceSafeTransferAllETH(address,uint256)": "infinite",
								"forceSafeTransferETH(address,uint256)": "infinite",
								"forceSafeTransferETH(address,uint256,uint256)": "infinite",
								"permit2(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"permit2TransferFrom(address,address,address,uint256)": "infinite",
								"safeApprove(address,address,uint256)": "infinite",
								"safeApproveWithRetry(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferAll(address,address)": "infinite",
								"safeTransferAllETH(address)": "infinite",
								"safeTransferAllFrom(address,address,address)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite",
								"safeTransferFrom2(address,address,address,uint256)": "infinite",
								"simplePermit2(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"trySafeTransferAllETH(address,uint256)": "infinite",
								"trySafeTransferETH(address,uint256,uint256)": "infinite",
								"trySafeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 579,
									"end": 26316,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 579,
									"end": 26316,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c01e78f3079e65a33d8c20c9a3c52c1c62af8f84ae8c2e889978b4f0f5a227164736f6c63430008130033",
									".code": [
										{
											"begin": 579,
											"end": 26316,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 579,
											"end": 26316,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 579,
											"end": 26316,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 579,
											"end": 26316,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 579,
											"end": 26316,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 26316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 579,
											"end": 26316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 26316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 579,
											"end": 26316,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/Ownable.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/solady-main/src/utils/ReentrancyGuard.sol",
								"lib/solady-main/src/utils/SafeTransferLib.sol",
								"src/_Recommend.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApproveFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Permit2AmountOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Permit2Failed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromFailed\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"Solady (https://github.com/vectorized/solady/blob/main/src/utils/SafeTransferLib.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)Permit2 operations from (https://github.com/Uniswap/permit2/blob/main/src/libraries/Permit2Lib.sol)\",\"details\":\"Note: - For ETH transfers, please use `forceSafeTransferETH` for DoS protection.\",\"errors\":{\"ApproveFailed()\":[{\"details\":\"The ERC20 `approve` has failed.\"}],\"ETHTransferFailed()\":[{\"details\":\"The ETH transfer has failed.\"}],\"Permit2AmountOverflow()\":[{\"details\":\"The Permit2 amount must be less than `2**160 - 1`.\"}],\"Permit2Failed()\":[{\"details\":\"The Permit2 operation has failed.\"}],\"TransferFailed()\":[{\"details\":\"The ERC20 `transfer` has failed.\"}],\"TransferFromFailed()\":[{\"details\":\"The ERC20 `transferFrom` has failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"DAI_DOMAIN_SEPARATOR\":{\"details\":\"The unique EIP-712 domain domain separator for the DAI token contract.\"},\"GAS_STIPEND_NO_GRIEF\":{\"details\":\"Suggested gas stipend for contract receiving ETH to perform a few storage reads and writes, but low enough to prevent griefing.\"},\"GAS_STIPEND_NO_STORAGE_WRITES\":{\"details\":\"Suggested gas stipend for contract receiving ETH that disallows any storage writes.\"},\"PERMIT2\":{\"details\":\"The canonical Permit2 address. [Github](https://github.com/Uniswap/permit2) [Etherscan](https://etherscan.io/address/0x000000000022D473030F116dDEE9F6B43aC78BA3)\"},\"WETH9\":{\"details\":\"The address for the WETH9 contract on Ethereum mainnet.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Safe ETH and ERC20 transfer library that gracefully handles missing return values.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/solady-main/src/utils/SafeTransferLib.sol\":\"SafeTransferLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/solady-main/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x7d0de1ff3be5dc32635283280b000d4794015a1b61d7dae7f3ff7b0721b07210\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e307c9eece677565e7d584ee77c56134b5db38a70f557f9d2b1b308219276c0c\",\"dweb:/ipfs/QmTEtqaTFgRBFGpJyb5o4v2w8yrSpcNThov4bNpcLr2tTR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Safe ETH and ERC20 transfer library that gracefully handles missing return values.",
						"version": 1
					}
				}
			},
			"src/_Recommend.sol": {
				"_Recommend": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Reentrancy",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "_CallerNotEOA",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "_IllegalValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "_NoTokensToClaim",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "_NotSufficientFund",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensSet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "alreadyClaimed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimableTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "obtainedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "recommendAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "rescueETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setClaimableTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_recommendAmount",
									"type": "uint256"
								}
							],
							"name": "setRecommendAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "A contract that recommends relevant features.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"Reentrancy()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"claimTokens()": {
								"details": "Has been recorded can claim the corresponding referral reward."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setClaimableTokens(address,uint256)": {
								"details": "Only bond contracts can set a record of tokens that can be claimed.",
								"params": {
									"amount": "The quantity that can be claimed.",
									"referrer": "The referrer."
								}
							},
							"setRecommendAmount(uint256)": {
								"details": "The referrer's algebra.",
								"params": {
									"_recommendAmount": "The reward is returned to the superior algebra."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "_Recommend.",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/_Recommend.sol\":405:2497  contract _Recommend is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"src/_Recommend.sol\":784:785  2 */\n  0x02\n    /* \"src/_Recommend.sol\":751:785  uint256 public recommendAmount = 2 */\n  0x04\n  sstore\n    /* \"src/_Recommend.sol\":920:956  constructor() Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/_Recommend.sol\":942:952  msg.sender */\n  caller\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1296:1297  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1272:1298  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1272:1284  initialOwner */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1272:1298  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1268:1363  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1349:1350  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1321:1352  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1268:1363  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1372:1404  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1391:1403  initialOwner */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1372:1390  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1372:1404  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1224:1411  constructor(address initialOwner) {... */\n  pop\n    /* \"src/_Recommend.sol\":405:2497  contract _Recommend is Ownable, ReentrancyGuard {... */\n  jump(tag_11)\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2911:3098  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2984:3000  address oldOwner */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3003:3009  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2984:3009  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3028:3036  newOwner */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3019:3025  _owner */\n  0x00\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3019:3036  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3082:3090  newOwner */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3051:3091  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3072:3080  oldOwner */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3051:3091  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2974:3098  {... */\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2911:3098  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_13:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_14:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_19\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_13\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_15:\n    /* \"#utility.yul\":328:352   */\n  tag_21\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_23\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/_Recommend.sol\":405:2497  contract _Recommend is Ownable, ReentrancyGuard {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/_Recommend.sol\":405:2497  contract _Recommend is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb43e6a53\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdf0f0951\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe44cec7c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf54b893b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x099a04e5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x30710d04\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x48c54b9d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x84d24226\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/_Recommend.sol\":1001:1127  function rescueETH(address to, uint256 value) external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"src/_Recommend.sol\":1270:1394  function setRecommendAmount(uint256 _recommendAmount) public onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"src/_Recommend.sol\":1993:2494  function claimTokens() external nonReentrant {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2292:2393  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"src/_Recommend.sol\":582:632  mapping(address => uint256) public claimableTokens */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1637:1722  function owner() public view virtual returns (address) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/_Recommend.sol\":1595:1891  function setClaimableTokens(address referrer, uint256 amount) external payable {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"src/_Recommend.sol\":695:744  mapping(address => uint256) public obtainedAmount */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/_Recommend.sol\":751:785  uint256 public recommendAmount = 2 */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2542:2757  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"src/_Recommend.sol\":639:688  mapping(address => uint256) public alreadyClaimed */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/_Recommend.sol\":1001:1127  function rescueETH(address to, uint256 value) external onlyOwner {... */\n    tag_21:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      tag_67\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1530:1541  _checkOwner */\n      tag_68\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      jump\t// in\n    tag_67:\n        /* \"src/_Recommend.sol\":1077:1119  SafeTransferLib.safeTransferETH(to, value) */\n      tag_70\n        /* \"src/_Recommend.sol\":1109:1111  to */\n      dup3\n        /* \"src/_Recommend.sol\":1113:1118  value */\n      dup3\n        /* \"src/_Recommend.sol\":1077:1108  SafeTransferLib.safeTransferETH */\n      tag_71\n        /* \"src/_Recommend.sol\":1077:1119  SafeTransferLib.safeTransferETH(to, value) */\n      jump\t// in\n    tag_70:\n        /* \"src/_Recommend.sol\":1001:1127  function rescueETH(address to, uint256 value) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/_Recommend.sol\":1270:1394  function setRecommendAmount(uint256 _recommendAmount) public onlyOwner {... */\n    tag_26:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      tag_73\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1530:1541  _checkOwner */\n      tag_68\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      jump\t// in\n    tag_73:\n        /* \"src/_Recommend.sol\":1370:1386  _recommendAmount */\n      dup1\n        /* \"src/_Recommend.sol\":1352:1367  recommendAmount */\n      0x04\n        /* \"src/_Recommend.sol\":1352:1386  recommendAmount = _recommendAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/_Recommend.sol\":1270:1394  function setRecommendAmount(uint256 _recommendAmount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/_Recommend.sol\":1993:2494  function claimTokens() external nonReentrant {... */\n    tag_29:\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1635:1644  address() */\n      address\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1610:1632  _REENTRANCY_GUARD_SLOT */\n      0x929eee149b4bd21268\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1604:1633  sload(_REENTRANCY_GUARD_SLOT) */\n      sload\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1601:1645  eq(sload(_REENTRANCY_GUARD_SLOT), address()) */\n      sub\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1598:1756  if eq(sload(_REENTRANCY_GUARD_SLOT), address()) {... */\n      tag_76\n      jumpi\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1677:1687  0xab143c06 */\n      0xab143c06\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1671:1675  0x00 */\n      0x00\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1664:1688  mstore(0x00, 0xab143c06) */\n      mstore\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1737:1741  0x04 */\n      0x04\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1731:1735  0x1c */\n      0x1c\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1724:1742  revert(0x1c, 0x04) */\n      revert\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1598:1756  if eq(sload(_REENTRANCY_GUARD_SLOT), address()) {... */\n    tag_76:\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1800:1809  address() */\n      address\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1776:1798  _REENTRANCY_GUARD_SLOT */\n      0x929eee149b4bd21268\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1769:1810  sstore(_REENTRANCY_GUARD_SLOT, address()) */\n      sstore\n        /* \"src/_Recommend.sol\":2066:2076  msg.sender */\n      caller\n        /* \"src/_Recommend.sol\":2053:2076  tx.origin != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/_Recommend.sol\":2053:2062  tx.origin */\n      origin\n        /* \"src/_Recommend.sol\":2053:2076  tx.origin != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/_Recommend.sol\":2049:2100  if (tx.origin != msg.sender) revert _CallerNotEOA() */\n      tag_78\n      jumpi\n        /* \"src/_Recommend.sol\":2085:2100  _CallerNotEOA() */\n      mload(0x40)\n      0x3691d20a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/_Recommend.sol\":2049:2100  if (tx.origin != msg.sender) revert _CallerNotEOA() */\n    tag_78:\n        /* \"src/_Recommend.sol\":2111:2125  uint256 amount */\n      0x00\n        /* \"src/_Recommend.sol\":2128:2143  claimableTokens */\n      0x01\n        /* \"src/_Recommend.sol\":2128:2155  claimableTokens[msg.sender] */\n      0x00\n        /* \"src/_Recommend.sol\":2144:2154  msg.sender */\n      caller\n        /* \"src/_Recommend.sol\":2128:2155  claimableTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/_Recommend.sol\":2111:2155  uint256 amount = claimableTokens[msg.sender] */\n      swap1\n      pop\n        /* \"src/_Recommend.sol\":2180:2181  0 */\n      0x00\n        /* \"src/_Recommend.sol\":2170:2176  amount */\n      dup2\n        /* \"src/_Recommend.sol\":2170:2181  amount <= 0 */\n      gt\n        /* \"src/_Recommend.sol\":2166:2208  if (amount <= 0) revert _NoTokensToClaim() */\n      tag_79\n      jumpi\n        /* \"src/_Recommend.sol\":2190:2208  _NoTokensToClaim() */\n      mload(0x40)\n      0x6f9c7fcf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/_Recommend.sol\":2166:2208  if (amount <= 0) revert _NoTokensToClaim() */\n    tag_79:\n        /* \"src/_Recommend.sol\":2247:2253  amount */\n      dup1\n        /* \"src/_Recommend.sol\":2223:2244  address(this).balance */\n      selfbalance\n        /* \"src/_Recommend.sol\":2223:2253  address(this).balance < amount */\n      lt\n        /* \"src/_Recommend.sol\":2219:2282  if (address(this).balance < amount) revert _NotSufficientFund() */\n      iszero\n      tag_80\n      jumpi\n        /* \"src/_Recommend.sol\":2262:2282  _NotSufficientFund() */\n      mload(0x40)\n      0xabf01a0800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/_Recommend.sol\":2219:2282  if (address(this).balance < amount) revert _NotSufficientFund() */\n    tag_80:\n        /* \"src/_Recommend.sol\":2325:2326  0 */\n      0x00\n        /* \"src/_Recommend.sol\":2295:2310  claimableTokens */\n      0x01\n        /* \"src/_Recommend.sol\":2295:2322  claimableTokens[msg.sender] */\n      0x00\n        /* \"src/_Recommend.sol\":2311:2321  msg.sender */\n      caller\n        /* \"src/_Recommend.sol\":2295:2322  claimableTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/_Recommend.sol\":2295:2326  claimableTokens[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/_Recommend.sol\":2337:2388  SafeTransferLib.safeTransferETH(msg.sender, amount) */\n      tag_81\n        /* \"src/_Recommend.sol\":2369:2379  msg.sender */\n      caller\n        /* \"src/_Recommend.sol\":2381:2387  amount */\n      dup3\n        /* \"src/_Recommend.sol\":2337:2368  SafeTransferLib.safeTransferETH */\n      tag_71\n        /* \"src/_Recommend.sol\":2337:2388  SafeTransferLib.safeTransferETH(msg.sender, amount) */\n      jump\t// in\n    tag_81:\n        /* \"src/_Recommend.sol\":2429:2435  amount */\n      dup1\n        /* \"src/_Recommend.sol\":2399:2413  alreadyClaimed */\n      0x02\n        /* \"src/_Recommend.sol\":2399:2425  alreadyClaimed[msg.sender] */\n      0x00\n        /* \"src/_Recommend.sol\":2414:2424  msg.sender */\n      caller\n        /* \"src/_Recommend.sol\":2399:2425  alreadyClaimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/_Recommend.sol\":2399:2435  alreadyClaimed[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/_Recommend.sol\":2467:2477  msg.sender */\n      caller\n        /* \"src/_Recommend.sol\":2453:2486  TokensClaimed(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430\n        /* \"src/_Recommend.sol\":2479:2485  amount */\n      dup3\n        /* \"src/_Recommend.sol\":2453:2486  TokensClaimed(msg.sender, amount) */\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/_Recommend.sol\":2038:2494  {... */\n      pop\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1937:1947  codesize() */\n      codesize\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1913:1935  _REENTRANCY_GUARD_SLOT */\n      0x929eee149b4bd21268\n        /* \"lib/solady-main/src/utils/ReentrancyGuard.sol\":1906:1948  sstore(_REENTRANCY_GUARD_SLOT, codesize()) */\n      sstore\n        /* \"src/_Recommend.sol\":1993:2494  function claimTokens() external nonReentrant {... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2292:2393  function renounceOwnership() public virtual onlyOwner {... */\n    tag_32:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      tag_86\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1530:1541  _checkOwner */\n      tag_68\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      jump\t// in\n    tag_86:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2356:2386  _transferOwnership(address(0)) */\n      tag_88\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2383:2384  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2356:2374  _transferOwnership */\n      tag_89\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2356:2386  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_88:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2292:2393  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"src/_Recommend.sol\":582:632  mapping(address => uint256) public claimableTokens */\n    tag_37:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1637:1722  function owner() public view virtual returns (address) {... */\n    tag_42:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1683:1690  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1709:1715  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1702:1715  return _owner */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1637:1722  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/_Recommend.sol\":1595:1891  function setClaimableTokens(address referrer, uint256 amount) external payable {... */\n    tag_47:\n        /* \"src/_Recommend.sol\":1702:1708  amount */\n      dup1\n        /* \"src/_Recommend.sol\":1689:1698  msg.value */\n      callvalue\n        /* \"src/_Recommend.sol\":1689:1708  msg.value != amount */\n      eq\n      iszero\n        /* \"src/_Recommend.sol\":1689:1723  msg.value != amount && amount != 0 */\n      dup1\n      iszero\n      tag_92\n      jumpi\n      pop\n        /* \"src/_Recommend.sol\":1722:1723  0 */\n      0x00\n        /* \"src/_Recommend.sol\":1712:1718  amount */\n      dup2\n        /* \"src/_Recommend.sol\":1712:1723  amount != 0 */\n      eq\n      iszero\n        /* \"src/_Recommend.sol\":1689:1723  msg.value != amount && amount != 0 */\n    tag_92:\n        /* \"src/_Recommend.sol\":1685:1747  if (msg.value != amount && amount != 0) revert _IllegalValue() */\n      iszero\n      tag_93\n      jumpi\n        /* \"src/_Recommend.sol\":1732:1747  _IllegalValue() */\n      mload(0x40)\n      0x2a2bb09200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/_Recommend.sol\":1685:1747  if (msg.value != amount && amount != 0) revert _IllegalValue() */\n    tag_93:\n        /* \"src/_Recommend.sol\":1787:1793  amount */\n      dup1\n        /* \"src/_Recommend.sol\":1758:1773  claimableTokens */\n      0x01\n        /* \"src/_Recommend.sol\":1758:1783  claimableTokens[referrer] */\n      0x00\n        /* \"src/_Recommend.sol\":1774:1782  referrer */\n      dup5\n        /* \"src/_Recommend.sol\":1758:1783  claimableTokens[referrer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/_Recommend.sol\":1758:1793  claimableTokens[referrer] += amount */\n      dup3\n      dup3\n      sload\n      tag_94\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_94:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/_Recommend.sol\":1832:1838  amount */\n      dup1\n        /* \"src/_Recommend.sol\":1804:1818  obtainedAmount */\n      0x03\n        /* \"src/_Recommend.sol\":1804:1828  obtainedAmount[referrer] */\n      0x00\n        /* \"src/_Recommend.sol\":1819:1827  referrer */\n      dup5\n        /* \"src/_Recommend.sol\":1804:1828  obtainedAmount[referrer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/_Recommend.sol\":1804:1838  obtainedAmount[referrer] += amount */\n      dup3\n      dup3\n      sload\n      tag_95\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_95:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/_Recommend.sol\":1866:1874  referrer */\n      dup2\n        /* \"src/_Recommend.sol\":1856:1883  TokensSet(referrer, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf3cbbad58a635fe73557a2824874af183b5ac83978ae25d57ea4a2011c4df859\n        /* \"src/_Recommend.sol\":1876:1882  amount */\n      dup3\n        /* \"src/_Recommend.sol\":1856:1883  TokensSet(referrer, amount) */\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/_Recommend.sol\":1595:1891  function setClaimableTokens(address referrer, uint256 amount) external payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/_Recommend.sol\":695:744  mapping(address => uint256) public obtainedAmount */\n    tag_51:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"src/_Recommend.sol\":751:785  uint256 public recommendAmount = 2 */\n    tag_55:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2542:2757  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_60:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      tag_98\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1530:1541  _checkOwner */\n      tag_68\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      jump\t// in\n    tag_98:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2646:2647  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2626:2648  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2626:2634  newOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2626:2648  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2622:2713  if (newOwner == address(0)) {... */\n      tag_100\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2699:2700  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2671:2702  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2622:2713  if (newOwner == address(0)) {... */\n    tag_100:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2722:2750  _transferOwnership(newOwner) */\n      tag_102\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2741:2749  newOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2722:2740  _transferOwnership */\n      tag_89\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2722:2750  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_102:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2542:2757  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/_Recommend.sol\":639:688  mapping(address => uint256) public alreadyClaimed */\n    tag_64:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1795:1957  function _checkOwner() internal view virtual {... */\n    tag_68:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1865:1877  _msgSender() */\n      tag_104\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1865:1875  _msgSender */\n      tag_105\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1865:1877  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1854:1877  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1854:1861  owner() */\n      tag_106\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1854:1859  owner */\n      tag_42\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1854:1861  owner() */\n      jump\t// in\n    tag_106:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1854:1877  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1850:1951  if (owner() != _msgSender()) {... */\n      tag_107\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1927:1939  _msgSender() */\n      tag_108\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1927:1937  _msgSender */\n      tag_105\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1927:1939  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1900:1940  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1850:1951  if (owner() != _msgSender()) {... */\n    tag_107:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1795:1957  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":3909:4251  function safeTransferETH(address to, uint256 amount) internal {... */\n    tag_71:\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":4111:4115  0x00 */\n      0x00\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":4099:4109  codesize() */\n      codesize\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":4093:4097  0x00 */\n      0x00\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":4081:4091  codesize() */\n      codesize\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":4073:4079  amount */\n      dup5\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":4069:4071  to */\n      dup7\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":4062:4067  gas() */\n      gas\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":4057:4116  call(gas(), to, amount, codesize(), 0x00, codesize(), 0x00) */\n      call\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":4047:4235  if iszero(call(gas(), to, amount, codesize(), 0x00, codesize(), 0x00)) {... */\n      tag_111\n      jumpi\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":4149:4159  0xb12d13eb */\n      0xb12d13eb\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":4143:4147  0x00 */\n      0x00\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":4136:4160  mstore(0x00, 0xb12d13eb) */\n      mstore\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":4216:4220  0x04 */\n      0x04\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":4210:4214  0x1c */\n      0x1c\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":4203:4221  revert(0x1c, 0x04) */\n      revert\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":4047:4235  if iszero(call(gas(), to, amount, codesize(), 0x00, codesize(), 0x00)) {... */\n    tag_111:\n        /* \"lib/solady-main/src/utils/SafeTransferLib.sol\":3909:4251  function safeTransferETH(address to, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2911:3098  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_89:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2984:3000  address oldOwner */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3003:3009  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2984:3009  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3028:3036  newOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3019:3025  _owner */\n      0x00\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3019:3036  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3082:3090  newOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3051:3091  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3072:3080  oldOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":3051:3091  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2974:3098  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2911:3098  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":655:751  function _msgSender() internal view virtual returns (address) {... */\n    tag_105:\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":708:715  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":727:744  return msg.sender */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":655:751  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_115:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_117:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_118:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_133\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_117\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_119:\n        /* \"#utility.yul\":641:665   */\n      tag_135\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_118\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_136\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_136:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_120:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_138\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_119\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_121:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_122:\n        /* \"#utility.yul\":997:1021   */\n      tag_141\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_121\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_142:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_123:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_144\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_122\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_20:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_147\n      tag_115\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":1290:1409   */\n    tag_146:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_148\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_120\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_149\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_123\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:2006   */\n    tag_25:\n        /* \"#utility.yul\":1736:1742   */\n      0x00\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1773:1782   */\n      dup3\n        /* \"#utility.yul\":1764:1771   */\n      dup5\n        /* \"#utility.yul\":1760:1783   */\n      sub\n        /* \"#utility.yul\":1756:1788   */\n      slt\n        /* \"#utility.yul\":1753:1872   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1791:1870   */\n      tag_152\n      tag_115\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1753:1872   */\n    tag_151:\n        /* \"#utility.yul\":1911:1912   */\n      0x00\n        /* \"#utility.yul\":1936:1989   */\n      tag_153\n        /* \"#utility.yul\":1981:1988   */\n      dup5\n        /* \"#utility.yul\":1972:1978   */\n      dup3\n        /* \"#utility.yul\":1961:1970   */\n      dup6\n        /* \"#utility.yul\":1957:1979   */\n      add\n        /* \"#utility.yul\":1936:1989   */\n      tag_123\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1926:1989   */\n      swap2\n      pop\n        /* \"#utility.yul\":1882:1999   */\n      pop\n        /* \"#utility.yul\":1677:2006   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2012:2341   */\n    tag_36:\n        /* \"#utility.yul\":2071:2077   */\n      0x00\n        /* \"#utility.yul\":2120:2122   */\n      0x20\n        /* \"#utility.yul\":2108:2117   */\n      dup3\n        /* \"#utility.yul\":2099:2106   */\n      dup5\n        /* \"#utility.yul\":2095:2118   */\n      sub\n        /* \"#utility.yul\":2091:2123   */\n      slt\n        /* \"#utility.yul\":2088:2207   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":2126:2205   */\n      tag_156\n      tag_115\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2088:2207   */\n    tag_155:\n        /* \"#utility.yul\":2246:2247   */\n      0x00\n        /* \"#utility.yul\":2271:2324   */\n      tag_157\n        /* \"#utility.yul\":2316:2323   */\n      dup5\n        /* \"#utility.yul\":2307:2313   */\n      dup3\n        /* \"#utility.yul\":2296:2305   */\n      dup6\n        /* \"#utility.yul\":2292:2314   */\n      add\n        /* \"#utility.yul\":2271:2324   */\n      tag_120\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2261:2324   */\n      swap2\n      pop\n        /* \"#utility.yul\":2217:2334   */\n      pop\n        /* \"#utility.yul\":2012:2341   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2347:2465   */\n    tag_124:\n        /* \"#utility.yul\":2434:2458   */\n      tag_159\n        /* \"#utility.yul\":2452:2457   */\n      dup2\n        /* \"#utility.yul\":2434:2458   */\n      tag_121\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2429:2432   */\n      dup3\n        /* \"#utility.yul\":2422:2459   */\n      mstore\n        /* \"#utility.yul\":2347:2465   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2471:2693   */\n    tag_39:\n        /* \"#utility.yul\":2564:2568   */\n      0x00\n        /* \"#utility.yul\":2602:2604   */\n      0x20\n        /* \"#utility.yul\":2591:2600   */\n      dup3\n        /* \"#utility.yul\":2587:2605   */\n      add\n        /* \"#utility.yul\":2579:2605   */\n      swap1\n      pop\n        /* \"#utility.yul\":2615:2686   */\n      tag_161\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2672:2681   */\n      dup4\n        /* \"#utility.yul\":2668:2685   */\n      add\n        /* \"#utility.yul\":2659:2665   */\n      dup5\n        /* \"#utility.yul\":2615:2686   */\n      tag_124\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2471:2693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2817   */\n    tag_125:\n        /* \"#utility.yul\":2786:2810   */\n      tag_163\n        /* \"#utility.yul\":2804:2809   */\n      dup2\n        /* \"#utility.yul\":2786:2810   */\n      tag_118\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2781:2784   */\n      dup3\n        /* \"#utility.yul\":2774:2811   */\n      mstore\n        /* \"#utility.yul\":2699:2817   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2823:3045   */\n    tag_44:\n        /* \"#utility.yul\":2916:2920   */\n      0x00\n        /* \"#utility.yul\":2954:2956   */\n      0x20\n        /* \"#utility.yul\":2943:2952   */\n      dup3\n        /* \"#utility.yul\":2939:2957   */\n      add\n        /* \"#utility.yul\":2931:2957   */\n      swap1\n      pop\n        /* \"#utility.yul\":2967:3038   */\n      tag_165\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3024:3033   */\n      dup4\n        /* \"#utility.yul\":3020:3037   */\n      add\n        /* \"#utility.yul\":3011:3017   */\n      dup5\n        /* \"#utility.yul\":2967:3038   */\n      tag_125\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2823:3045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3231   */\n    tag_126:\n        /* \"#utility.yul\":3099:3176   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3096:3097   */\n      0x00\n        /* \"#utility.yul\":3089:3177   */\n      mstore\n        /* \"#utility.yul\":3196:3200   */\n      0x11\n        /* \"#utility.yul\":3193:3194   */\n      0x04\n        /* \"#utility.yul\":3186:3201   */\n      mstore\n        /* \"#utility.yul\":3220:3224   */\n      0x24\n        /* \"#utility.yul\":3217:3218   */\n      0x00\n        /* \"#utility.yul\":3210:3225   */\n      revert\n        /* \"#utility.yul\":3237:3428   */\n    tag_83:\n        /* \"#utility.yul\":3277:3280   */\n      0x00\n        /* \"#utility.yul\":3296:3316   */\n      tag_168\n        /* \"#utility.yul\":3314:3315   */\n      dup3\n        /* \"#utility.yul\":3296:3316   */\n      tag_121\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":3291:3316   */\n      swap2\n      pop\n        /* \"#utility.yul\":3330:3350   */\n      tag_169\n        /* \"#utility.yul\":3348:3349   */\n      dup4\n        /* \"#utility.yul\":3330:3350   */\n      tag_121\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":3325:3350   */\n      swap3\n      pop\n        /* \"#utility.yul\":3373:3374   */\n      dup3\n        /* \"#utility.yul\":3370:3371   */\n      dup3\n        /* \"#utility.yul\":3366:3375   */\n      add\n        /* \"#utility.yul\":3359:3375   */\n      swap1\n      pop\n        /* \"#utility.yul\":3394:3397   */\n      dup1\n        /* \"#utility.yul\":3391:3392   */\n      dup3\n        /* \"#utility.yul\":3388:3398   */\n      gt\n        /* \"#utility.yul\":3385:3421   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":3401:3419   */\n      tag_171\n      tag_126\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":3385:3421   */\n    tag_170:\n        /* \"#utility.yul\":3237:3428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122061ab82707d41c64fe221b752e6488ebde116702d0acf4ac9f896bd9f29b254c864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_591": {
									"entryPoint": null,
									"id": 591,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 158,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:590:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:5",
														"type": ""
													}
												],
												"src": "139:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:5",
														"type": ""
													}
												],
												"src": "241:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:5",
														"type": ""
													}
												],
												"src": "365:222:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600260045534801561001557600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100895760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161008091906101a3565b60405180910390fd5b6100988161009e60201b60201c565b506101be565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061018d82610162565b9050919050565b61019d81610182565b82525050565b60006020820190506101b86000830184610194565b92915050565b610ada806101cd6000396000f3fe6080604052600436106100a05760003560e01c80638da5cb5b116100645780638da5cb5b14610169578063b43e6a5314610194578063df0f0951146101b0578063e44cec7c146101ed578063f2fde38b14610218578063f54b893b14610241576100a7565b8063099a04e5146100ac57806330710d04146100d557806348c54b9d146100fe578063715018a61461011557806384d242261461012c576100a7565b366100a757005b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610953565b61027e565b005b3480156100e157600080fd5b506100fc60048036038101906100f79190610993565b610294565b005b34801561010a57600080fd5b506101136102a6565b005b34801561012157600080fd5b5061012a6104f0565b005b34801561013857600080fd5b50610153600480360381019061014e91906109c0565b610504565b60405161016091906109fc565b60405180910390f35b34801561017557600080fd5b5061017e61051c565b60405161018b9190610a26565b60405180910390f35b6101ae60048036038101906101a99190610953565b610545565b005b3480156101bc57600080fd5b506101d760048036038101906101d291906109c0565b61068b565b6040516101e491906109fc565b60405180910390f35b3480156101f957600080fd5b506102026106a3565b60405161020f91906109fc565b60405180910390f35b34801561022457600080fd5b5061023f600480360381019061023a91906109c0565b6106a9565b005b34801561024d57600080fd5b50610268600480360381019061026391906109c0565b61072f565b60405161027591906109fc565b60405180910390f35b610286610747565b61029082826107ce565b5050565b61029c610747565b8060048190555050565b3068929eee149b4bd2126854036102c55763ab143c066000526004601cfd5b3068929eee149b4bd21268553373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610336576040517f3691d20a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116103b4576040517f6f9c7fcf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b804710156103ee576040517fabf01a0800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061043d33826107ce565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461048c9190610a70565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430826040516104d991906109fc565b60405180910390a2503868929eee149b4bd2126855565b6104f8610747565b61050260006107ee565b565b60016020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b803414158015610556575060008114155b1561058d576040517f2a2bb09200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105dc9190610a70565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106329190610a70565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167ff3cbbad58a635fe73557a2824874af183b5ac83978ae25d57ea4a2011c4df8598260405161067f91906109fc565b60405180910390a25050565b60036020528060005260406000206000915090505481565b60045481565b6106b1610747565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107235760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161071a9190610a26565b60405180910390fd5b61072c816107ee565b50565b60026020528060005260406000206000915090505481565b61074f6108b2565b73ffffffffffffffffffffffffffffffffffffffff1661076d61051c565b73ffffffffffffffffffffffffffffffffffffffff16146107cc576107906108b2565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107c39190610a26565b60405180910390fd5b565b60003860003884865af16107ea5763b12d13eb6000526004601cfd5b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108ea826108bf565b9050919050565b6108fa816108df565b811461090557600080fd5b50565b600081359050610917816108f1565b92915050565b6000819050919050565b6109308161091d565b811461093b57600080fd5b50565b60008135905061094d81610927565b92915050565b6000806040838503121561096a576109696108ba565b5b600061097885828601610908565b92505060206109898582860161093e565b9150509250929050565b6000602082840312156109a9576109a86108ba565b5b60006109b78482850161093e565b91505092915050565b6000602082840312156109d6576109d56108ba565b5b60006109e484828501610908565b91505092915050565b6109f68161091d565b82525050565b6000602082019050610a1160008301846109ed565b92915050565b610a20816108df565b82525050565b6000602082019050610a3b6000830184610a17565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a7b8261091d565b9150610a868361091d565b9250828201905080821115610a9e57610a9d610a41565b5b9291505056fea264697066735822122061ab82707d41c64fe221b752e6488ebde116702d0acf4ac9f896bd9f29b254c864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x98 DUP2 PUSH2 0x9E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1BE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D DUP3 PUSH2 0x162 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19D DUP2 PUSH2 0x182 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x194 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xADA DUP1 PUSH2 0x1CD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xB43E6A53 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xDF0F0951 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xE44CEC7C EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xF54B893B EQ PUSH2 0x241 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x99A04E5 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x30710D04 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x84D24226 EQ PUSH2 0x12C JUMPI PUSH2 0xA7 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA7 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x953 JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x2A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x4F0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x953 JUMP JUMPDEST PUSH2 0x545 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x202 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x6A9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x290 DUP3 DUP3 PUSH2 0x7CE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x29C PUSH2 0x747 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST ADDRESS PUSH9 0x929EEE149B4BD21268 SLOAD SUB PUSH2 0x2C5 JUMPI PUSH4 0xAB143C06 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST ADDRESS PUSH9 0x929EEE149B4BD21268 SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3691D20A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x3B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6F9C7FCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH32 0xABF01A0800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x43D CALLER DUP3 PUSH2 0x7CE JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4D9 SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP CODESIZE PUSH9 0x929EEE149B4BD21268 SSTORE JUMP JUMPDEST PUSH2 0x4F8 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x502 PUSH1 0x0 PUSH2 0x7EE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 CALLVALUE EQ ISZERO DUP1 ISZERO PUSH2 0x556 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x58D JUMPI PUSH1 0x40 MLOAD PUSH32 0x2A2BB09200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x632 SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF3CBBAD58A635FE73557A2824874AF183B5AC83978AE25D57EA4A2011C4DF859 DUP3 PUSH1 0x40 MLOAD PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6B1 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x723 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71A SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72C DUP2 PUSH2 0x7EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x74F PUSH2 0x8B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x76D PUSH2 0x51C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7CC JUMPI PUSH2 0x790 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C3 SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 CODESIZE PUSH1 0x0 CODESIZE DUP5 DUP7 GAS CALL PUSH2 0x7EA JUMPI PUSH4 0xB12D13EB PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EA DUP3 PUSH2 0x8BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FA DUP2 PUSH2 0x8DF JUMP JUMPDEST DUP2 EQ PUSH2 0x905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x917 DUP2 PUSH2 0x8F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x930 DUP2 PUSH2 0x91D JUMP JUMPDEST DUP2 EQ PUSH2 0x93B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x94D DUP2 PUSH2 0x927 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x96A JUMPI PUSH2 0x969 PUSH2 0x8BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x978 DUP6 DUP3 DUP7 ADD PUSH2 0x908 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x989 DUP6 DUP3 DUP7 ADD PUSH2 0x93E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A9 JUMPI PUSH2 0x9A8 PUSH2 0x8BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9B7 DUP5 DUP3 DUP6 ADD PUSH2 0x93E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D6 JUMPI PUSH2 0x9D5 PUSH2 0x8BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9E4 DUP5 DUP3 DUP6 ADD PUSH2 0x908 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9F6 DUP2 PUSH2 0x91D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA11 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA20 DUP2 PUSH2 0x8DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA3B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA7B DUP3 PUSH2 0x91D JUMP JUMPDEST SWAP2 POP PUSH2 0xA86 DUP4 PUSH2 0x91D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA9E JUMPI PUSH2 0xA9D PUSH2 0xA41 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xAB82 PUSH17 0x7D41C64FE221B752E6488EBDE116702D0A 0xCF 0x4A 0xC9 0xF8 SWAP7 0xBD SWAP16 0x29 0xB2 SLOAD 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "405:2092:4:-:0;;;784:1;751:34;;920:36;;;;;;;;;;942:10;1296:1:0;1272:26;;:12;:26;;;1268:95;;1349:1;1321:31;;;;;;;;;;;:::i;:::-;;;;;;;;1268:95;1372:32;1391:12;1372:18;;;:32;;:::i;:::-;1224:187;405:2092:4;;2911:187:0;2984:16;3003:6;;;;;;;;;;;2984:25;;3028:8;3019:6;;:17;;;;;;;;;;;;;;;;;;3082:8;3051:40;;3072:8;3051:40;;;;;;;;;;;;2974:124;2911:187;:::o;7:126:5:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;405:2092:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_595": {
									"entryPoint": null,
									"id": 595,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1863,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 2226,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2030,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@alreadyClaimed_564": {
									"entryPoint": 1839,
									"id": 564,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimTokens_732": {
									"entryPoint": 678,
									"id": 732,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimableTokens_560": {
									"entryPoint": 1284,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@obtainedAmount_568": {
									"entryPoint": 1675,
									"id": 568,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1308,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recommendAmount_571": {
									"entryPoint": 1699,
									"id": 571,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1264,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rescueETH_612": {
									"entryPoint": 638,
									"id": 612,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferETH_252": {
									"entryPoint": 1998,
									"id": 252,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setClaimableTokens_663": {
									"entryPoint": 1349,
									"id": 663,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setRecommendAmount_625": {
									"entryPoint": 660,
									"id": 625,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1705,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2625,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2234,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3431:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:5",
														"type": ""
													}
												],
												"src": "841:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:5"
															},
															"nodeType": "YulIf",
															"src": "977:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:5",
														"type": ""
													}
												],
												"src": "924:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:5",
														"type": ""
													}
												],
												"src": "1052:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:5"
															},
															"nodeType": "YulIf",
															"src": "1290:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:5",
														"type": ""
													}
												],
												"src": "1197:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1743:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1789:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1791:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1791:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1791:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1764:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1773:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1760:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1760:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1785:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1756:32:5"
															},
															"nodeType": "YulIf",
															"src": "1753:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1882:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1897:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1911:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1901:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1926:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1961:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1972:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1957:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1957:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1981:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1936:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1936:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1926:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1713:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1724:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1736:6:5",
														"type": ""
													}
												],
												"src": "1677:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2078:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2124:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2126:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2126:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2126:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2099:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2108:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2095:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2095:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2120:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2091:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2091:32:5"
															},
															"nodeType": "YulIf",
															"src": "2088:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2217:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2232:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2246:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2236:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2261:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2296:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2307:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2292:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2292:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2316:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2271:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2271:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2261:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2048:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2059:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2071:6:5",
														"type": ""
													}
												],
												"src": "2012:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2412:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2429:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2452:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2434:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2434:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2422:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2422:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2400:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2407:3:5",
														"type": ""
													}
												],
												"src": "2347:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2569:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2579:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2591:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2602:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2587:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2579:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2659:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2672:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2683:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2668:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2668:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2615:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2615:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2541:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2553:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2564:4:5",
														"type": ""
													}
												],
												"src": "2471:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2764:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2781:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2804:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2786:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2786:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2774:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2774:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2774:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2752:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2759:3:5",
														"type": ""
													}
												],
												"src": "2699:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2921:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2931:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2943:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2939:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2939:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2931:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3011:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3024:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3035:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3020:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3020:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2967:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2967:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2967:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2893:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2905:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2916:4:5",
														"type": ""
													}
												],
												"src": "2823:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3079:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3096:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3099:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3089:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3089:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3089:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3193:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3196:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3186:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3186:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3217:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3220:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3210:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3210:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3051:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3281:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3291:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3314:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3296:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3296:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3291:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3325:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3348:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3330:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3325:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3359:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3370:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3373:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3366:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3359:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3399:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3401:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3401:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3401:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3391:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3394:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3388:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3388:10:5"
															},
															"nodeType": "YulIf",
															"src": "3385:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3268:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3271:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3277:3:5",
														"type": ""
													}
												],
												"src": "3237:191:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a05760003560e01c80638da5cb5b116100645780638da5cb5b14610169578063b43e6a5314610194578063df0f0951146101b0578063e44cec7c146101ed578063f2fde38b14610218578063f54b893b14610241576100a7565b8063099a04e5146100ac57806330710d04146100d557806348c54b9d146100fe578063715018a61461011557806384d242261461012c576100a7565b366100a757005b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610953565b61027e565b005b3480156100e157600080fd5b506100fc60048036038101906100f79190610993565b610294565b005b34801561010a57600080fd5b506101136102a6565b005b34801561012157600080fd5b5061012a6104f0565b005b34801561013857600080fd5b50610153600480360381019061014e91906109c0565b610504565b60405161016091906109fc565b60405180910390f35b34801561017557600080fd5b5061017e61051c565b60405161018b9190610a26565b60405180910390f35b6101ae60048036038101906101a99190610953565b610545565b005b3480156101bc57600080fd5b506101d760048036038101906101d291906109c0565b61068b565b6040516101e491906109fc565b60405180910390f35b3480156101f957600080fd5b506102026106a3565b60405161020f91906109fc565b60405180910390f35b34801561022457600080fd5b5061023f600480360381019061023a91906109c0565b6106a9565b005b34801561024d57600080fd5b50610268600480360381019061026391906109c0565b61072f565b60405161027591906109fc565b60405180910390f35b610286610747565b61029082826107ce565b5050565b61029c610747565b8060048190555050565b3068929eee149b4bd2126854036102c55763ab143c066000526004601cfd5b3068929eee149b4bd21268553373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610336576040517f3691d20a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116103b4576040517f6f9c7fcf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b804710156103ee576040517fabf01a0800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061043d33826107ce565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461048c9190610a70565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430826040516104d991906109fc565b60405180910390a2503868929eee149b4bd2126855565b6104f8610747565b61050260006107ee565b565b60016020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b803414158015610556575060008114155b1561058d576040517f2a2bb09200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105dc9190610a70565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106329190610a70565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167ff3cbbad58a635fe73557a2824874af183b5ac83978ae25d57ea4a2011c4df8598260405161067f91906109fc565b60405180910390a25050565b60036020528060005260406000206000915090505481565b60045481565b6106b1610747565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107235760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161071a9190610a26565b60405180910390fd5b61072c816107ee565b50565b60026020528060005260406000206000915090505481565b61074f6108b2565b73ffffffffffffffffffffffffffffffffffffffff1661076d61051c565b73ffffffffffffffffffffffffffffffffffffffff16146107cc576107906108b2565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107c39190610a26565b60405180910390fd5b565b60003860003884865af16107ea5763b12d13eb6000526004601cfd5b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108ea826108bf565b9050919050565b6108fa816108df565b811461090557600080fd5b50565b600081359050610917816108f1565b92915050565b6000819050919050565b6109308161091d565b811461093b57600080fd5b50565b60008135905061094d81610927565b92915050565b6000806040838503121561096a576109696108ba565b5b600061097885828601610908565b92505060206109898582860161093e565b9150509250929050565b6000602082840312156109a9576109a86108ba565b5b60006109b78482850161093e565b91505092915050565b6000602082840312156109d6576109d56108ba565b5b60006109e484828501610908565b91505092915050565b6109f68161091d565b82525050565b6000602082019050610a1160008301846109ed565b92915050565b610a20816108df565b82525050565b6000602082019050610a3b6000830184610a17565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a7b8261091d565b9150610a868361091d565b9250828201905080821115610a9e57610a9d610a41565b5b9291505056fea264697066735822122061ab82707d41c64fe221b752e6488ebde116702d0acf4ac9f896bd9f29b254c864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xB43E6A53 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xDF0F0951 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xE44CEC7C EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xF54B893B EQ PUSH2 0x241 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x99A04E5 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x30710D04 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x84D24226 EQ PUSH2 0x12C JUMPI PUSH2 0xA7 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA7 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x953 JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x2A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x4F0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x953 JUMP JUMPDEST PUSH2 0x545 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x202 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x6A9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x290 DUP3 DUP3 PUSH2 0x7CE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x29C PUSH2 0x747 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST ADDRESS PUSH9 0x929EEE149B4BD21268 SLOAD SUB PUSH2 0x2C5 JUMPI PUSH4 0xAB143C06 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST ADDRESS PUSH9 0x929EEE149B4BD21268 SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3691D20A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x3B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6F9C7FCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH32 0xABF01A0800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x43D CALLER DUP3 PUSH2 0x7CE JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4D9 SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP CODESIZE PUSH9 0x929EEE149B4BD21268 SSTORE JUMP JUMPDEST PUSH2 0x4F8 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x502 PUSH1 0x0 PUSH2 0x7EE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 CALLVALUE EQ ISZERO DUP1 ISZERO PUSH2 0x556 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x58D JUMPI PUSH1 0x40 MLOAD PUSH32 0x2A2BB09200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x632 SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF3CBBAD58A635FE73557A2824874AF183B5AC83978AE25D57EA4A2011C4DF859 DUP3 PUSH1 0x40 MLOAD PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6B1 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x723 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71A SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72C DUP2 PUSH2 0x7EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x74F PUSH2 0x8B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x76D PUSH2 0x51C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7CC JUMPI PUSH2 0x790 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C3 SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 CODESIZE PUSH1 0x0 CODESIZE DUP5 DUP7 GAS CALL PUSH2 0x7EA JUMPI PUSH4 0xB12D13EB PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EA DUP3 PUSH2 0x8BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FA DUP2 PUSH2 0x8DF JUMP JUMPDEST DUP2 EQ PUSH2 0x905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x917 DUP2 PUSH2 0x8F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x930 DUP2 PUSH2 0x91D JUMP JUMPDEST DUP2 EQ PUSH2 0x93B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x94D DUP2 PUSH2 0x927 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x96A JUMPI PUSH2 0x969 PUSH2 0x8BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x978 DUP6 DUP3 DUP7 ADD PUSH2 0x908 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x989 DUP6 DUP3 DUP7 ADD PUSH2 0x93E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A9 JUMPI PUSH2 0x9A8 PUSH2 0x8BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9B7 DUP5 DUP3 DUP6 ADD PUSH2 0x93E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D6 JUMPI PUSH2 0x9D5 PUSH2 0x8BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9E4 DUP5 DUP3 DUP6 ADD PUSH2 0x908 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9F6 DUP2 PUSH2 0x91D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA11 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA20 DUP2 PUSH2 0x8DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA3B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA7B DUP3 PUSH2 0x91D JUMP JUMPDEST SWAP2 POP PUSH2 0xA86 DUP4 PUSH2 0x91D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA9E JUMPI PUSH2 0xA9D PUSH2 0xA41 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xAB82 PUSH17 0x7D41C64FE221B752E6488EBDE116702D0A 0xCF 0x4A 0xC9 0xF8 SWAP7 0xBD SWAP16 0x29 0xB2 SLOAD 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "405:2092:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:126;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1270:124;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1993:501;;;;;;;;;;;;;:::i;:::-;;2292:101:0;;;;;;;;;;;;;:::i;:::-;;582:50:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1637:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1595:296:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;695:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;751:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2542:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;639:49:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1001:126;1530:13:0;:11;:13::i;:::-;1077:42:4::1;1109:2;1113:5;1077:31;:42::i;:::-;1001:126:::0;;:::o;1270:124::-;1530:13:0;:11;:13::i;:::-;1370:16:4::1;1352:15;:34;;;;1270:124:::0;:::o;1993:501::-;1635:9:2;1610:22;1604:29;1601:44;1598:158;;1677:10;1671:4;1664:24;1737:4;1731;1724:18;1598:158;1800:9;1776:22;1769:41;2066:10:4::1;2053:23;;:9;:23;;;2049:51;;2085:15;;;;;;;;;;;;;;2049:51;2111:14;2128:15;:27;2144:10;2128:27;;;;;;;;;;;;;;;;2111:44;;2180:1;2170:6;:11;2166:42;;2190:18;;;;;;;;;;;;;;2166:42;2247:6;2223:21;:30;2219:63;;;2262:20;;;;;;;;;;;;;;2219:63;2325:1;2295:15;:27;2311:10;2295:27;;;;;;;;;;;;;;;:31;;;;2337:51;2369:10;2381:6;2337:31;:51::i;:::-;2429:6;2399:14;:26;2414:10;2399:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;2467:10;2453:33;;;2479:6;2453:33;;;;;;:::i;:::-;;;;;;;;2038:456;1937:10:2::0;1913:22;1906:42;1993:501:4:o;2292:101:0:-;1530:13;:11;:13::i;:::-;2356:30:::1;2383:1;2356:18;:30::i;:::-;2292:101::o:0;582:50:4:-;;;;;;;;;;;;;;;;;:::o;1637:85:0:-;1683:7;1709:6;;;;;;;;;;;1702:13;;1637:85;:::o;1595:296:4:-;1702:6;1689:9;:19;;:34;;;;;1722:1;1712:6;:11;;1689:34;1685:62;;;1732:15;;;;;;;;;;;;;;1685:62;1787:6;1758:15;:25;1774:8;1758:25;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;1832:6;1804:14;:24;1819:8;1804:24;;;;;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;;;;;1866:8;1856:27;;;1876:6;1856:27;;;;;;:::i;:::-;;;;;;;;1595:296;;:::o;695:49::-;;;;;;;;;;;;;;;;;:::o;751:34::-;;;;:::o;2542:215:0:-;1530:13;:11;:13::i;:::-;2646:1:::1;2626:22;;:8;:22;;::::0;2622:91:::1;;2699:1;2671:31;;;;;;;;;;;:::i;:::-;;;;;;;;2622:91;2722:28;2741:8;2722:18;:28::i;:::-;2542:215:::0;:::o;639:49:4:-;;;;;;;;;;;;;;;;;:::o;1795:162:0:-;1865:12;:10;:12::i;:::-;1854:23;;:7;:5;:7::i;:::-;:23;;;1850:101;;1927:12;:10;:12::i;:::-;1900:40;;;;;;;;;;;:::i;:::-;;;;;;;;1850:101;1795:162::o;3909:342:3:-;4111:4;4099:10;4093:4;4081:10;4073:6;4069:2;4062:5;4057:59;4047:188;;4149:10;4143:4;4136:24;4216:4;4210;4203:18;4047:188;3909:342;;:::o;2911:187:0:-;2984:16;3003:6;;;;;;;;;;;2984:25;;3028:8;3019:6;;:17;;;;;;;;;;;;;;;;;;3082:8;3051:40;;3072:8;3051:40;;;;;;;;;;;;2974:124;2911:187;:::o;655:96:1:-;708:7;734:10;727:17;;655:96;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:329::-;1736:6;1785:2;1773:9;1764:7;1760:23;1756:32;1753:119;;;1791:79;;:::i;:::-;1753:119;1911:1;1936:53;1981:7;1972:6;1961:9;1957:22;1936:53;:::i;:::-;1926:63;;1882:117;1677:329;;;;:::o;2012:::-;2071:6;2120:2;2108:9;2099:7;2095:23;2091:32;2088:119;;;2126:79;;:::i;:::-;2088:119;2246:1;2271:53;2316:7;2307:6;2296:9;2292:22;2271:53;:::i;:::-;2261:63;;2217:117;2012:329;;;;:::o;2347:118::-;2434:24;2452:5;2434:24;:::i;:::-;2429:3;2422:37;2347:118;;:::o;2471:222::-;2564:4;2602:2;2591:9;2587:18;2579:26;;2615:71;2683:1;2672:9;2668:17;2659:6;2615:71;:::i;:::-;2471:222;;;;:::o;2699:118::-;2786:24;2804:5;2786:24;:::i;:::-;2781:3;2774:37;2699:118;;:::o;2823:222::-;2916:4;2954:2;2943:9;2939:18;2931:26;;2967:71;3035:1;3024:9;3020:17;3011:6;2967:71;:::i;:::-;2823:222;;;;:::o;3051:180::-;3099:77;3096:1;3089:88;3196:4;3193:1;3186:15;3220:4;3217:1;3210:15;3237:191;3277:3;3296:20;3314:1;3296:20;:::i;:::-;3291:25;;3330:20;3348:1;3330:20;:::i;:::-;3325:25;;3373:1;3370;3366:9;3359:16;;3394:3;3391:1;3388:10;3385:36;;;3401:18;;:::i;:::-;3385:36;3237:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "555600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"alreadyClaimed(address)": "2924",
								"claimTokens()": "infinite",
								"claimableTokens(address)": "2903",
								"obtainedAmount(address)": "2858",
								"owner()": "2522",
								"recommendAmount()": "2495",
								"renounceOwnership()": "infinite",
								"rescueETH(address,uint256)": "infinite",
								"setClaimableTokens(address,uint256)": "infinite",
								"setRecommendAmount(uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 405,
									"end": 2497,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 405,
									"end": 2497,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 405,
									"end": 2497,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 784,
									"end": 785,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 751,
									"end": 785,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 785,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 920,
									"end": 956,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 920,
									"end": 956,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 920,
									"end": 956,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 920,
									"end": 956,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 920,
									"end": 956,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 920,
									"end": 956,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 956,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 920,
									"end": 956,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 920,
									"end": 956,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 920,
									"end": 956,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 920,
									"end": 956,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 942,
									"end": 952,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1272,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1272,
									"end": 1298,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1272,
									"end": 1284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1272,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1272,
									"end": 1298,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1272,
									"end": 1298,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1268,
									"end": 1363,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1268,
									"end": 1363,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1350,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1321,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1268,
									"end": 1363,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1268,
									"end": 1363,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1372,
									"end": 1404,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1391,
									"end": 1403,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1372,
									"end": 1390,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1372,
									"end": 1390,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1372,
									"end": 1390,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1372,
									"end": 1404,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1372,
									"end": 1404,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1372,
									"end": 1404,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1372,
									"end": 1404,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1372,
									"end": 1404,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1224,
									"end": 1411,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 405,
									"end": 2497,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 405,
									"end": 2497,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2911,
									"end": 3098,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2911,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2984,
									"end": 3000,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2984,
									"end": 3009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2984,
									"end": 3009,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3028,
									"end": 3036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3025,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3019,
									"end": 3025,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3082,
									"end": 3090,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3072,
									"end": 3080,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2974,
									"end": 3098,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2911,
									"end": 3098,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2911,
									"end": 3098,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 405,
									"end": 2497,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 405,
									"end": 2497,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 405,
									"end": 2497,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 405,
									"end": 2497,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 405,
									"end": 2497,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 405,
									"end": 2497,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 2497,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 405,
									"end": 2497,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 2497,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061ab82707d41c64fe221b752e6488ebde116702d0acf4ac9f896bd9f29b254c864736f6c63430008130033",
									".code": [
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "B43E6A53"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "DF0F0951"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "E44CEC7C"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "F54B893B"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "99A04E5"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "30710D04"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "48C54B9D"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "84D24226"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 405,
											"end": 2497,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1001,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1270,
											"end": 1394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1270,
											"end": 1394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1993,
											"end": 2494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2292,
											"end": 2393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 582,
											"end": 632,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 582,
											"end": 632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 582,
											"end": 632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 582,
											"end": 632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1637,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1637,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1595,
											"end": 1891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 695,
											"end": 744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 695,
											"end": 744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 695,
											"end": 744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 751,
											"end": 785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 751,
											"end": 785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2542,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2542,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 639,
											"end": 688,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 639,
											"end": 688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 639,
											"end": 688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 639,
											"end": 688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1530,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1530,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1109,
											"end": 1111,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1118,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1077,
											"end": 1108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1077,
											"end": 1119,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1077,
											"end": 1119,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1077,
											"end": 1119,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1530,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1530,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1386,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1352,
											"end": 1386,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1386,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1386,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1386,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1993,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1632,
											"name": "PUSH",
											"source": 2,
											"value": "929EEE149B4BD21268"
										},
										{
											"begin": 1604,
											"end": 1633,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1645,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1598,
											"end": 1756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "AB143C06"
										},
										{
											"begin": 1671,
											"end": 1675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1664,
											"end": 1688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1741,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1731,
											"end": 1735,
											"name": "PUSH",
											"source": 2,
											"value": "1C"
										},
										{
											"begin": 1724,
											"end": 1742,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1756,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1598,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1800,
											"end": 1809,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1798,
											"name": "PUSH",
											"source": 2,
											"value": "929EEE149B4BD21268"
										},
										{
											"begin": 1769,
											"end": 1810,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2076,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2053,
											"end": 2076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2062,
											"modifierDepth": 1,
											"name": "ORIGIN",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2053,
											"end": 2076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2076,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2049,
											"end": 2100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2049,
											"end": 2100,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2085,
											"end": 2100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2100,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2085,
											"end": 2100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3691D20A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2085,
											"end": 2100,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2085,
											"end": 2100,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2085,
											"end": 2100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2085,
											"end": 2100,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2085,
											"end": 2100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2100,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2085,
											"end": 2100,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2085,
											"end": 2100,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2085,
											"end": 2100,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2085,
											"end": 2100,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2085,
											"end": 2100,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2049,
											"end": 2100,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2049,
											"end": 2100,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2128,
											"end": 2155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2154,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2128,
											"end": 2155,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2128,
											"end": 2155,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2155,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2155,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2128,
											"end": 2155,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2155,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2155,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2155,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2128,
											"end": 2155,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2155,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2155,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2155,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2155,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2170,
											"end": 2181,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2166,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2208,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6F9C7FCF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2190,
											"end": 2208,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2208,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2190,
											"end": 2208,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2208,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2208,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2208,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2208,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2208,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2208,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2166,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2253,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2223,
											"end": 2244,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 2223,
											"end": 2253,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2282,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2219,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2282,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "ABF01A0800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2262,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2282,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2262,
											"end": 2282,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2282,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2282,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2219,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2295,
											"end": 2322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2321,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2295,
											"end": 2322,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2295,
											"end": 2322,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2322,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2295,
											"end": 2322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2322,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2322,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2295,
											"end": 2322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2322,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2326,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2326,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2369,
											"end": 2379,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2387,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2337,
											"end": 2388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2337,
											"end": 2388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2435,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2399,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2424,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2399,
											"end": 2425,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2399,
											"end": 2425,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2425,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2425,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2399,
											"end": 2425,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2425,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2425,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2399,
											"end": 2425,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2425,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2435,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2435,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2435,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2399,
											"end": 2435,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2435,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2399,
											"end": 2435,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2435,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2399,
											"end": 2435,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2435,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2435,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2435,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2435,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2435,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2435,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2435,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2467,
											"end": 2477,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430"
										},
										{
											"begin": 2479,
											"end": 2485,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2453,
											"end": 2486,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2486,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2494,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1937,
											"end": 1947,
											"name": "CODESIZE",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "929EEE149B4BD21268"
										},
										{
											"begin": 1906,
											"end": 1948,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1530,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1530,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2383,
											"end": 2384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2356,
											"end": 2386,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2386,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2356,
											"end": 2386,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 582,
											"end": 632,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 632,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 582,
											"end": 632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1698,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1708,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1708,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1723,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1723,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1689,
											"end": 1723,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1722,
											"end": 1723,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1723,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1723,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1723,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1689,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "PUSH",
											"source": 4,
											"value": "2A2BB09200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1793,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1773,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1758,
											"end": 1783,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1782,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1783,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1758,
											"end": 1783,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1783,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1758,
											"end": 1783,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1783,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1783,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1783,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1783,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1783,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1783,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1783,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1783,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1783,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1783,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1783,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1793,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1793,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1793,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1758,
											"end": 1793,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1758,
											"end": 1793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1793,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1758,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1793,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1793,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1832,
											"end": 1838,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1818,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1804,
											"end": 1828,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1827,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1828,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1804,
											"end": 1828,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1828,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1804,
											"end": 1828,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1828,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1828,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1828,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1828,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1828,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1828,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1828,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1828,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1828,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1828,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1804,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "PUSH",
											"source": 4,
											"value": "F3CBBAD58A635FE73557A2824874AF183B5AC83978AE25D57EA4A2011C4DF859"
										},
										{
											"begin": 1876,
											"end": 1882,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1856,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 695,
											"end": 744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1530,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1530,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2646,
											"end": 2647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2648,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2634,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2648,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2648,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2622,
											"end": 2713,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2671,
											"end": 2702,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2713,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2622,
											"end": 2713,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2741,
											"end": 2749,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2722,
											"end": 2750,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2750,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2722,
											"end": 2750,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 639,
											"end": 688,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 639,
											"end": 688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1795,
											"end": 1957,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1795,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1865,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1865,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1877,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1865,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1854,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1854,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1861,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1854,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1850,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1850,
											"end": 1951,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1927,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1927,
											"end": 1939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1939,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1927,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1850,
											"end": 1951,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1850,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 4251,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3909,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4111,
											"end": 4115,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4099,
											"end": 4109,
											"name": "CODESIZE",
											"source": 3
										},
										{
											"begin": 4093,
											"end": 4097,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4081,
											"end": 4091,
											"name": "CODESIZE",
											"source": 3
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4071,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4062,
											"end": 4067,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 4057,
											"end": 4116,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4047,
											"end": 4235,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4159,
											"name": "PUSH",
											"source": 3,
											"value": "B12D13EB"
										},
										{
											"begin": 4143,
											"end": 4147,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4136,
											"end": 4160,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4216,
											"end": 4220,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4210,
											"end": 4214,
											"name": "PUSH",
											"source": 3,
											"value": "1C"
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4235,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4047,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3909,
											"end": 4251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3909,
											"end": 4251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3909,
											"end": 4251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 3098,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2911,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 3098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 3098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 751,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 655,
											"end": 751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 708,
											"end": 715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 727,
											"end": 744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 727,
											"end": 744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 655,
											"end": 751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 655,
											"end": 751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1742,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1783,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1756,
											"end": 1788,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1791,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1911,
											"end": 1912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1981,
											"end": 1988,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1978,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1961,
											"end": 1970,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 1979,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1936,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 1999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2012,
											"end": 2341,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2012,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2106,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2118,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2123,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2088,
											"end": 2207,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2088,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2088,
											"end": 2207,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2126,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2126,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2205,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2126,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2088,
											"end": 2207,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2088,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2246,
											"end": 2247,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2316,
											"end": 2323,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2314,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2271,
											"end": 2324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2334,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2012,
											"end": 2341,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2012,
											"end": 2341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2012,
											"end": 2341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2012,
											"end": 2341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2012,
											"end": 2341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2347,
											"end": 2465,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2347,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2452,
											"end": 2457,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2434,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2458,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2434,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2429,
											"end": 2432,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2459,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2347,
											"end": 2465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2347,
											"end": 2465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2347,
											"end": 2465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2471,
											"end": 2693,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2471,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2564,
											"end": 2568,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2591,
											"end": 2600,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2587,
											"end": 2605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2579,
											"end": 2605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2579,
											"end": 2605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2681,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2685,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2615,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2686,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2615,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2471,
											"end": 2693,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2471,
											"end": 2693,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2471,
											"end": 2693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2471,
											"end": 2693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2471,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2804,
											"end": 2809,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2786,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2916,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2956,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2939,
											"end": 2957,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2967,
											"end": 3038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3231,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3051,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3099,
											"end": 3176,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3177,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3200,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3193,
											"end": 3194,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3186,
											"end": 3201,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3217,
											"end": 3218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3428,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3237,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3314,
											"end": 3315,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3296,
											"end": 3316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3316,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3330,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3348,
											"end": 3349,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3330,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3330,
											"end": 3350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3330,
											"end": 3350,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3330,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3350,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3374,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3375,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3397,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3391,
											"end": 3392,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3388,
											"end": 3398,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3421,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3385,
											"end": 3421,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3401,
											"end": 3419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3421,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3385,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3428,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3428,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/Ownable.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/solady-main/src/utils/ReentrancyGuard.sol",
								"lib/solady-main/src/utils/SafeTransferLib.sol",
								"src/_Recommend.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"alreadyClaimed(address)": "f54b893b",
							"claimTokens()": "48c54b9d",
							"claimableTokens(address)": "84d24226",
							"obtainedAmount(address)": "df0f0951",
							"owner()": "8da5cb5b",
							"recommendAmount()": "e44cec7c",
							"renounceOwnership()": "715018a6",
							"rescueETH(address,uint256)": "099a04e5",
							"setClaimableTokens(address,uint256)": "b43e6a53",
							"setRecommendAmount(uint256)": "30710d04",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Reentrancy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"_CallerNotEOA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"_IllegalValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"_NoTokensToClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"_NotSufficientFund\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"alreadyClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimableTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"obtainedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recommendAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"rescueETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setClaimableTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_recommendAmount\",\"type\":\"uint256\"}],\"name\":\"setRecommendAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"A contract that recommends relevant features.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"Reentrancy()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"claimTokens()\":{\"details\":\"Has been recorded can claim the corresponding referral reward.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setClaimableTokens(address,uint256)\":{\"details\":\"Only bond contracts can set a record of tokens that can be claimed.\",\"params\":{\"amount\":\"The quantity that can be claimed.\",\"referrer\":\"The referrer.\"}},\"setRecommendAmount(uint256)\":{\"details\":\"The referrer's algebra.\",\"params\":{\"_recommendAmount\":\"The reward is returned to the superior algebra.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"_Recommend.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/_Recommend.sol\":\"_Recommend\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x27c59ec88f0350d3d28d222a078e11bda664b955e012fe9a74962bf10c936209\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3a300244e864b1362aea21080840ba1e4bc8dba7bcf21fe2dc4348b60d6b0d5\",\"dweb:/ipfs/QmV1L6ium91zyYCuxisumGnMVsQcNPQryaVp7t8aKgYGor\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3aa312348f02eb2c6f71dd936583ec09761a5d25e5f7448217e2cd7739f595df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff75375a8b4207936052eb480b280004619ea67e9b6d64c5dcc8b7adc0d67687\",\"dweb:/ipfs/QmeJiGKLGYeS1Yyr8KqySNow3ykHfvwJc9wx5J44s33J1A\"]},\"lib/solady-main/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xdb28f318ec45197a6c7cc2abebed67d7cb8b965838ef962e3844423256a9ddb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://873cd46b77a2aeb781e7a0d131e7299151323ed884c330101a51d0727e218d98\",\"dweb:/ipfs/QmddadCjyedztvdSgLZEyKWoRes2SqtpviSjhEbSNrkUoi\"]},\"lib/solady-main/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x7d0de1ff3be5dc32635283280b000d4794015a1b61d7dae7f3ff7b0721b07210\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e307c9eece677565e7d584ee77c56134b5db38a70f557f9d2b1b308219276c0c\",\"dweb:/ipfs/QmTEtqaTFgRBFGpJyb5o4v2w8yrSpcNThov4bNpcLr2tTR\"]},\"src/_Recommend.sol\":{\"keccak256\":\"0x7eb8edd45f9c2135d7ef1b37b535ac2081c9e7d1a214778de4d52befe7450059\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bb67f2ef29d6fbea5074d964e9ba2c69f666c82bfed98e9db2333c21e3fc1aaf\",\"dweb:/ipfs/QmSVMbA8LX7udWYHKokxeGXPMDRe2t1HS3Po8aL4VwXafh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "src/_Recommend.sol:_Recommend",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 560,
								"contract": "src/_Recommend.sol:_Recommend",
								"label": "claimableTokens",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 564,
								"contract": "src/_Recommend.sol:_Recommend",
								"label": "alreadyClaimed",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 568,
								"contract": "src/_Recommend.sol:_Recommend",
								"label": "obtainedAmount",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 571,
								"contract": "src/_Recommend.sol:_Recommend",
								"label": "recommendAmount",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "127:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "135:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"691:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "691:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "691:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "174:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "680:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "721:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "705:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "705:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "734:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "830:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "865:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "857:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:17:0"
									},
									"src": "824:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "880:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "973:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1001:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "993:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:15:0"
									},
									"src": "967:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1020:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1057:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1041:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1088:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1072:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1040:57:0"
									},
									"src": "1014:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1258:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1272:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1296:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1288:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1288:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1288:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1272:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1268:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1300:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1349:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1341:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1341:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1341:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1321:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1321:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1314:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1391:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1372:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1372:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1372:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1104:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1244:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1236:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1235:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1258:0:0"
									},
									"scope": 147,
									"src": "1224:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1520:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1530:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1530:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1530:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1553:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1417:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1508:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1517:2:0"
									},
									"src": "1499:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1692:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1709:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1702:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1567:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1646:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1651:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1683:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:9:0"
									},
									"scope": 147,
									"src": "1637:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1840:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1854:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1854:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1865:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1865:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1854:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1850:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1879:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1900:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1893:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1728:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1804:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1815:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1840:0:0"
									},
									"scope": 147,
									"src": "1795:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2346:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2383:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2375:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2375:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2375:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2356:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2356:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1963:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2336:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2336:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2336:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2301:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2318:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2346:0:0"
									},
									"scope": 147,
									"src": "2292:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2612:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2626:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2646:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2638:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2638:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2638:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2626:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2622:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2650:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2699:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2691:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2691:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2691:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2671:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2671:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2664:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2741:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2722:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2722:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2722:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2399:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2602:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2602:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2602:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2551:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2577:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2569:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2569:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2568:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2612:0:0"
									},
									"scope": 147,
									"src": "2542:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2974:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2992:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2984:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2984:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3003:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2984:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3019:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3028:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3019:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3019:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3072:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3082:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3051:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3051:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3046:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2763:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2920:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2947:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2939:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2938:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2974:0:0"
									},
									"scope": 147,
									"src": "2911:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "662:2438:0",
							"usedErrors": [
								13,
								18
							]
						}
					],
					"src": "102:2999:0"
				},
				"id": 0
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "126:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "641:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "717:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "734:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "738:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "734:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "727:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "664:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:9:1"
									},
									"scope": 177,
									"src": "655:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "824:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "841:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "845:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "841:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "834:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "766:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "774:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "808:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "808:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:16:1"
									},
									"scope": 177,
									"src": "757:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "934:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "951:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "944:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "871:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "891:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "925:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:9:1"
									},
									"scope": 177,
									"src": "862:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "623:338:1",
							"usedErrors": []
						}
					],
					"src": "101:861:1"
				},
				"id": 1
			},
			"lib/solady-main/src/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "lib/solady-main/src/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							201
						]
					},
					"id": 202,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 180,
								"nodeType": "StructuredDocumentation",
								"src": "57:134:2",
								"text": "@notice Reentrancy guard mixin.\n @author Solady (https://github.com/vectorized/solady/blob/main/src/utils/ReentrancyGuard.sol)"
							},
							"fullyImplemented": true,
							"id": 201,
							"linearizedBaseContracts": [
								201
							],
							"name": "ReentrancyGuard",
							"nameLocation": "209:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "514:37:2",
										"text": "@dev Unauthorized reentrant call."
									},
									"errorSelector": "ab143c06",
									"id": 183,
									"name": "Reentrancy",
									"nameLocation": "562:10:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "572:2:2"
									},
									"src": "556:19:2"
								},
								{
									"constant": true,
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "864:213:2",
										"text": "@dev Equivalent to: `uint72(bytes9(keccak256(\"_REENTRANCY_GUARD_SLOT\")))`.\n 9 bytes is large enough to avoid collisions with lower slots,\n but not too large to result in excessive bytecode bloat."
									},
									"id": 187,
									"mutability": "constant",
									"name": "_REENTRANCY_GUARD_SLOT",
									"nameLocation": "1107:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 201,
									"src": "1082:70:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 185,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1082:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078393239656565313439623462643231323638",
										"id": 186,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1132:20:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2704676748321268830824_by_1",
											"typeString": "int_const 2704676748321268830824"
										},
										"value": "0x929eee149b4bd21268"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "1522:442:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1584:236:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1646:110:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1671:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1677:10:2",
																					"type": "",
																					"value": "0xab143c06"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1664:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1664:24:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1664:24:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1731:4:2",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:4:2",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1724:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1724:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1724:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_REENTRANCY_GUARD_SLOT",
																				"nodeType": "YulIdentifier",
																				"src": "1610:22:2"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "1604:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1604:29:2"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nodeType": "YulIdentifier",
																			"src": "1635:7:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1635:9:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1601:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:44:2"
															},
															"nodeType": "YulIf",
															"src": "1598:158:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_REENTRANCY_GUARD_SLOT",
																		"nodeType": "YulIdentifier",
																		"src": "1776:22:2"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nodeType": "YulIdentifier",
																			"src": "1800:7:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1800:9:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "1769:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1769:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1769:41:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 187,
														"isOffset": false,
														"isSlot": false,
														"src": "1610:22:2",
														"valueSize": 1
													},
													{
														"declaration": 187,
														"isOffset": false,
														"isSlot": false,
														"src": "1776:22:2",
														"valueSize": 1
													}
												],
												"id": 190,
												"nodeType": "InlineAssembly",
												"src": "1575:245:2"
											},
											{
												"id": 191,
												"nodeType": "PlaceholderStatement",
												"src": "1829:1:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1892:66:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_REENTRANCY_GUARD_SLOT",
																		"nodeType": "YulIdentifier",
																		"src": "1913:22:2"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "codesize",
																			"nodeType": "YulIdentifier",
																			"src": "1937:8:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1937:10:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "1906:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1906:42:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1906:42:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 187,
														"isOffset": false,
														"isSlot": false,
														"src": "1913:22:2",
														"valueSize": 1
													}
												],
												"id": 192,
												"nodeType": "InlineAssembly",
												"src": "1883:75:2"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "1442:43:2",
										"text": "@dev Guards a function from reentrancy."
									},
									"id": 194,
									"name": "nonReentrant",
									"nameLocation": "1499:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1511:2:2"
									},
									"src": "1490:474:2",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2069:261:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2131:182:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2193:110:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2218:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2224:10:2",
																					"type": "",
																					"value": "0xab143c06"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2211:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2211:24:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2211:24:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2278:4:2",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2284:4:2",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2271:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2271:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2271:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_REENTRANCY_GUARD_SLOT",
																				"nodeType": "YulIdentifier",
																				"src": "2157:22:2"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "2151:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2151:29:2"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nodeType": "YulIdentifier",
																			"src": "2182:7:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2182:9:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2148:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2148:44:2"
															},
															"nodeType": "YulIf",
															"src": "2145:158:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 187,
														"isOffset": false,
														"isSlot": false,
														"src": "2157:22:2",
														"valueSize": 1
													}
												],
												"id": 197,
												"nodeType": "InlineAssembly",
												"src": "2122:191:2"
											},
											{
												"id": 198,
												"nodeType": "PlaceholderStatement",
												"src": "2322:1:2"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "1970:58:2",
										"text": "@dev Guards a view function from read-only reentrancy."
									},
									"id": 200,
									"name": "nonReadReentrant",
									"nameLocation": "2042:16:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2058:2:2"
									},
									"src": "2033:297:2",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 202,
							"src": "191:2141:2",
							"usedErrors": [
								183
							]
						}
					],
					"src": "32:2301:2"
				},
				"id": 2
			},
			"lib/solady-main/src/utils/SafeTransferLib.sol": {
				"ast": {
					"absolutePath": "lib/solady-main/src/utils/SafeTransferLib.sol",
					"exportedSymbols": {
						"SafeTransferLib": [
							535
						]
					},
					"id": 536,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 203,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeTransferLib",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 204,
								"nodeType": "StructuredDocumentation",
								"src": "57:522:3",
								"text": "@notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\n @author Solady (https://github.com/vectorized/solady/blob/main/src/utils/SafeTransferLib.sol)\n @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)\n @author Permit2 operations from (https://github.com/Uniswap/permit2/blob/main/src/libraries/Permit2Lib.sol)\n @dev Note:\n - For ETH transfers, please use `forceSafeTransferETH` for DoS protection."
							},
							"fullyImplemented": true,
							"id": 535,
							"linearizedBaseContracts": [
								535
							],
							"name": "SafeTransferLib",
							"nameLocation": "587:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "892:37:3",
										"text": "@dev The ETH transfer has failed."
									},
									"errorSelector": "b12d13eb",
									"id": 207,
									"name": "ETHTransferFailed",
									"nameLocation": "940:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "957:2:3"
									},
									"src": "934:26:3"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "966:45:3",
										"text": "@dev The ERC20 `transferFrom` has failed."
									},
									"errorSelector": "7939f424",
									"id": 210,
									"name": "TransferFromFailed",
									"nameLocation": "1022:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:2:3"
									},
									"src": "1016:27:3"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "1049:41:3",
										"text": "@dev The ERC20 `transfer` has failed."
									},
									"errorSelector": "90b8ec18",
									"id": 213,
									"name": "TransferFailed",
									"nameLocation": "1101:14:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1115:2:3"
									},
									"src": "1095:23:3"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "1124:40:3",
										"text": "@dev The ERC20 `approve` has failed."
									},
									"errorSelector": "3e3f8f73",
									"id": 216,
									"name": "ApproveFailed",
									"nameLocation": "1175:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1188:2:3"
									},
									"src": "1169:22:3"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "1197:42:3",
										"text": "@dev The Permit2 operation has failed."
									},
									"errorSelector": "6b836e6b",
									"id": 219,
									"name": "Permit2Failed",
									"nameLocation": "1250:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1263:2:3"
									},
									"src": "1244:22:3"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "1272:59:3",
										"text": "@dev The Permit2 amount must be less than `2**160 - 1`."
									},
									"errorSelector": "8757f0fd",
									"id": 222,
									"name": "Permit2AmountOverflow",
									"nameLocation": "1342:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1363:2:3"
									},
									"src": "1336:30:3"
								},
								{
									"constant": true,
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "1655:92:3",
										"text": "@dev Suggested gas stipend for contract receiving ETH that disallows any storage writes."
									},
									"id": 226,
									"mutability": "constant",
									"name": "GAS_STIPEND_NO_STORAGE_WRITES",
									"nameLocation": "1778:29:3",
									"nodeType": "VariableDeclaration",
									"scope": 535,
									"src": "1752:62:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 224,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32333030",
										"id": 225,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1810:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2300_by_1",
											"typeString": "int_const 2300"
										},
										"value": "2300"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "1821:144:3",
										"text": "@dev Suggested gas stipend for contract receiving ETH to perform a few\n storage reads and writes, but low enough to prevent griefing."
									},
									"id": 230,
									"mutability": "constant",
									"name": "GAS_STIPEND_NO_GRIEF",
									"nameLocation": "1996:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 535,
									"src": "1970:55:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 228,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1970:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030",
										"id": 229,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2019:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000_by_1",
											"typeString": "int_const 100000"
										},
										"value": "100000"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "2032:79:3",
										"text": "@dev The unique EIP-712 domain domain separator for the DAI token contract."
									},
									"id": 234,
									"mutability": "constant",
									"name": "DAI_DOMAIN_SEPARATOR",
									"nameLocation": "2142:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 535,
									"src": "2116:123:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 232,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2116:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864626238636634326531656362303238626533663364626339323265316438373862393633663431316463333838636564353031363031633630663763366637",
										"id": 233,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2173:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_99383044164297460920199564169379472118763403594000230800569066591923778078455_by_1",
											"typeString": "int_const 9938...(69 digits omitted)...8455"
										},
										"value": "0xdbb8cf42e1ecb028be3f3dbc922e1d878b963f411dc388ced501601c60f7c6f7"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "2246:64:3",
										"text": "@dev The address for the WETH9 contract on Ethereum mainnet."
									},
									"id": 238,
									"mutability": "constant",
									"name": "WETH9",
									"nameLocation": "2341:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 535,
									"src": "2315:76:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 236,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2315:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
										"id": 237,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2349:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2398:185:3",
										"text": "@dev The canonical Permit2 address.\n [Github](https://github.com/Uniswap/permit2)\n [Etherscan](https://etherscan.io/address/0x000000000022D473030F116dDEE9F6B43aC78BA3)"
									},
									"id": 242,
									"mutability": "constant",
									"name": "PERMIT2",
									"nameLocation": "2614:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 535,
									"src": "2588:78:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 240,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2588:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030323244343733303330463131366444454539463642343361433738424133",
										"id": 241,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2624:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000022D473030F116dDEE9F6B43aC78BA3"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "3971:280:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4033:212:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4118:117:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4143:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4149:10:3",
																					"type": "",
																					"value": "0xb12d13eb"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4136:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4136:24:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4136:24:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4210:4:3",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4216:4:3",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4203:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4203:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4203:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "4062:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4062:5:3"
																			},
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "4069:2:3"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "4073:6:3"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "codesize",
																					"nodeType": "YulIdentifier",
																					"src": "4081:8:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4081:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4093:4:3",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "codesize",
																					"nodeType": "YulIdentifier",
																					"src": "4099:8:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4099:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4111:4:3",
																				"type": "",
																				"value": "0x00"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nodeType": "YulIdentifier",
																			"src": "4057:4:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4057:59:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4050:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4050:67:3"
															},
															"nodeType": "YulIf",
															"src": "4047:188:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 247,
														"isOffset": false,
														"isSlot": false,
														"src": "4073:6:3",
														"valueSize": 1
													},
													{
														"declaration": 245,
														"isOffset": false,
														"isSlot": false,
														"src": "4069:2:3",
														"valueSize": 1
													}
												],
												"id": 250,
												"nodeType": "InlineAssembly",
												"src": "4024:221:3"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "3859:45:3",
										"text": "@dev Sends `amount` (in wei) ETH to `to`."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "3918:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3942:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3934:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3934:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3954:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3946:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3933:28:3"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3971:0:3"
									},
									"scope": 535,
									"src": "3909:342:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "4370:357:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4432:289:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4594:117:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4619:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4625:10:3",
																					"type": "",
																					"value": "0xb12d13eb"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4612:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4612:24:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4612:24:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4686:4:3",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4692:4:3",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4679:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4679:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4679:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "4531:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4531:5:3"
																			},
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "4538:2:3"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "selfbalance",
																					"nodeType": "YulIdentifier",
																					"src": "4542:11:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4542:13:3"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "codesize",
																					"nodeType": "YulIdentifier",
																					"src": "4557:8:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4557:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4569:4:3",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "codesize",
																					"nodeType": "YulIdentifier",
																					"src": "4575:8:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4575:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4587:4:3",
																				"type": "",
																				"value": "0x00"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nodeType": "YulIdentifier",
																			"src": "4526:4:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4526:66:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4519:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4519:74:3"
															},
															"nodeType": "YulIf",
															"src": "4516:195:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 255,
														"isOffset": false,
														"isSlot": false,
														"src": "4538:2:3",
														"valueSize": 1
													}
												],
												"id": 258,
												"nodeType": "InlineAssembly",
												"src": "4423:298:3"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "4257:59:3",
										"text": "@dev Sends all the ETH in the current contract to `to`."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferAllETH",
									"nameLocation": "4330:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4357:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4349:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4348:12:3"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4370:0:3"
									},
									"scope": 535,
									"src": "4321:406:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "4897:644:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4959:576:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5002:117:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5033:10:3",
																					"type": "",
																					"value": "0xb12d13eb"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5020:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5020:24:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5020:24:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5094:4:3",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5100:4:3",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5087:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5087:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5087:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "selfbalance",
																			"nodeType": "YulIdentifier",
																			"src": "4979:11:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4979:13:3"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "4994:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4976:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4976:25:3"
															},
															"nodeType": "YulIf",
															"src": "4973:146:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5208:317:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5233:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"name": "to",
																					"nodeType": "YulIdentifier",
																					"src": "5239:2:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5226:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5226:16:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5226:16:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5306:4:3",
																					"type": "",
																					"value": "0x0b"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5312:4:3",
																					"type": "",
																					"value": "0x73"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "5298:7:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5298:19:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5298:19:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5362:4:3",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5368:4:3",
																					"type": "",
																					"value": "0xff"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "5354:7:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5354:19:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5354:19:3"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5454:34:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "codesize",
																									"nodeType": "YulIdentifier",
																									"src": "5463:8:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5463:10:3"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "codesize",
																									"nodeType": "YulIdentifier",
																									"src": "5475:8:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5475:10:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "5456:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5456:30:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5456:30:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "amount",
																							"nodeType": "YulIdentifier",
																							"src": "5433:6:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5441:4:3",
																							"type": "",
																							"value": "0x0b"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5447:4:3",
																							"type": "",
																							"value": "0x16"
																						}
																					],
																					"functionName": {
																						"name": "create",
																						"nodeType": "YulIdentifier",
																						"src": "5426:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5426:26:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "5419:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5419:34:3"
																		},
																		"nodeType": "YulIf",
																		"src": "5416:72:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "gasStipend",
																				"nodeType": "YulIdentifier",
																				"src": "5147:10:3"
																			},
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "5159:2:3"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "5163:6:3"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "codesize",
																					"nodeType": "YulIdentifier",
																					"src": "5171:8:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5171:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5183:4:3",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "codesize",
																					"nodeType": "YulIdentifier",
																					"src": "5189:8:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5189:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5201:4:3",
																				"type": "",
																				"value": "0x00"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nodeType": "YulIdentifier",
																			"src": "5142:4:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5142:64:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5135:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5135:72:3"
															},
															"nodeType": "YulIf",
															"src": "5132:393:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 265,
														"isOffset": false,
														"isSlot": false,
														"src": "4994:6:3",
														"valueSize": 1
													},
													{
														"declaration": 265,
														"isOffset": false,
														"isSlot": false,
														"src": "5163:6:3",
														"valueSize": 1
													},
													{
														"declaration": 265,
														"isOffset": false,
														"isSlot": false,
														"src": "5433:6:3",
														"valueSize": 1
													},
													{
														"declaration": 267,
														"isOffset": false,
														"isSlot": false,
														"src": "5147:10:3",
														"valueSize": 1
													},
													{
														"declaration": 263,
														"isOffset": false,
														"isSlot": false,
														"src": "5159:2:3",
														"valueSize": 1
													},
													{
														"declaration": 263,
														"isOffset": false,
														"isSlot": false,
														"src": "5239:2:3",
														"valueSize": 1
													}
												],
												"id": 270,
												"nodeType": "InlineAssembly",
												"src": "4950:585:3"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "4733:72:3",
										"text": "@dev Force sends `amount` (in wei) ETH to `to`, with a `gasStipend`."
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceSafeTransferETH",
									"nameLocation": "4819:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4848:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "4840:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4840:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4860:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "4852:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4852:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "gasStipend",
												"nameLocation": "4876:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "4868:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4868:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4839:48:3"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4897:0:3"
									},
									"scope": 535,
									"src": "4810:731:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "5712:499:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5774:431:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5871:324:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5896:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"name": "to",
																					"nodeType": "YulIdentifier",
																					"src": "5902:2:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5889:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5889:16:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5889:16:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5969:4:3",
																					"type": "",
																					"value": "0x0b"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5975:4:3",
																					"type": "",
																					"value": "0x73"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "5961:7:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5961:19:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5961:19:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6025:4:3",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6031:4:3",
																					"type": "",
																					"value": "0xff"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "6017:7:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6017:19:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6017:19:3"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6124:34:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "codesize",
																									"nodeType": "YulIdentifier",
																									"src": "6133:8:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6133:10:3"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "codesize",
																									"nodeType": "YulIdentifier",
																									"src": "6145:8:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6145:10:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6126:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6126:30:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6126:30:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "selfbalance",
																								"nodeType": "YulIdentifier",
																								"src": "6096:11:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6096:13:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6111:4:3",
																							"type": "",
																							"value": "0x0b"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6117:4:3",
																							"type": "",
																							"value": "0x16"
																						}
																					],
																					"functionName": {
																						"name": "create",
																						"nodeType": "YulIdentifier",
																						"src": "6089:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6089:33:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "6082:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6082:41:3"
																		},
																		"nodeType": "YulIf",
																		"src": "6079:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "gasStipend",
																				"nodeType": "YulIdentifier",
																				"src": "5803:10:3"
																			},
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "5815:2:3"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "selfbalance",
																					"nodeType": "YulIdentifier",
																					"src": "5819:11:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5819:13:3"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "codesize",
																					"nodeType": "YulIdentifier",
																					"src": "5834:8:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5834:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5846:4:3",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "codesize",
																					"nodeType": "YulIdentifier",
																					"src": "5852:8:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5852:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5864:4:3",
																				"type": "",
																				"value": "0x00"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nodeType": "YulIdentifier",
																			"src": "5798:4:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5798:71:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5791:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5791:79:3"
															},
															"nodeType": "YulIf",
															"src": "5788:407:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 277,
														"isOffset": false,
														"isSlot": false,
														"src": "5803:10:3",
														"valueSize": 1
													},
													{
														"declaration": 275,
														"isOffset": false,
														"isSlot": false,
														"src": "5815:2:3",
														"valueSize": 1
													},
													{
														"declaration": 275,
														"isOffset": false,
														"isSlot": false,
														"src": "5902:2:3",
														"valueSize": 1
													}
												],
												"id": 280,
												"nodeType": "InlineAssembly",
												"src": "5765:440:3"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "5547:86:3",
										"text": "@dev Force sends all the ETH in the current contract to `to`, with a `gasStipend`."
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceSafeTransferAllETH",
									"nameLocation": "5647:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5679:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "5671:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5671:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "gasStipend",
												"nameLocation": "5691:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "5683:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5670:32:3"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5712:0:3"
									},
									"scope": 535,
									"src": "5638:573:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "6369:654:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6431:586:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6474:117:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6499:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6505:10:3",
																					"type": "",
																					"value": "0xb12d13eb"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6492:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6492:24:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6492:24:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6566:4:3",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6572:4:3",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6559:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6559:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6559:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "selfbalance",
																			"nodeType": "YulIdentifier",
																			"src": "6451:11:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6451:13:3"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "6466:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6448:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6448:25:3"
															},
															"nodeType": "YulIf",
															"src": "6445:146:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6690:317:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6715:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"name": "to",
																					"nodeType": "YulIdentifier",
																					"src": "6721:2:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6708:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6708:16:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6708:16:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6788:4:3",
																					"type": "",
																					"value": "0x0b"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6794:4:3",
																					"type": "",
																					"value": "0x73"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "6780:7:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6780:19:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6780:19:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6844:4:3",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6850:4:3",
																					"type": "",
																					"value": "0xff"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "6836:7:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6836:19:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6836:19:3"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6936:34:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "codesize",
																									"nodeType": "YulIdentifier",
																									"src": "6945:8:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6945:10:3"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "codesize",
																									"nodeType": "YulIdentifier",
																									"src": "6957:8:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6957:10:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6938:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6938:30:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6938:30:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "amount",
																							"nodeType": "YulIdentifier",
																							"src": "6915:6:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6923:4:3",
																							"type": "",
																							"value": "0x0b"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6929:4:3",
																							"type": "",
																							"value": "0x16"
																						}
																					],
																					"functionName": {
																						"name": "create",
																						"nodeType": "YulIdentifier",
																						"src": "6908:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6908:26:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "6901:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6901:34:3"
																		},
																		"nodeType": "YulIf",
																		"src": "6898:72:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "GAS_STIPEND_NO_GRIEF",
																				"nodeType": "YulIdentifier",
																				"src": "6619:20:3"
																			},
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "6641:2:3"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "6645:6:3"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "codesize",
																					"nodeType": "YulIdentifier",
																					"src": "6653:8:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6653:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6665:4:3",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "codesize",
																					"nodeType": "YulIdentifier",
																					"src": "6671:8:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6671:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6683:4:3",
																				"type": "",
																				"value": "0x00"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nodeType": "YulIdentifier",
																			"src": "6614:4:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6614:74:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6607:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6607:82:3"
															},
															"nodeType": "YulIf",
															"src": "6604:403:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 230,
														"isOffset": false,
														"isSlot": false,
														"src": "6619:20:3",
														"valueSize": 1
													},
													{
														"declaration": 287,
														"isOffset": false,
														"isSlot": false,
														"src": "6466:6:3",
														"valueSize": 1
													},
													{
														"declaration": 287,
														"isOffset": false,
														"isSlot": false,
														"src": "6645:6:3",
														"valueSize": 1
													},
													{
														"declaration": 287,
														"isOffset": false,
														"isSlot": false,
														"src": "6915:6:3",
														"valueSize": 1
													},
													{
														"declaration": 285,
														"isOffset": false,
														"isSlot": false,
														"src": "6641:2:3",
														"valueSize": 1
													},
													{
														"declaration": 285,
														"isOffset": false,
														"isSlot": false,
														"src": "6721:2:3",
														"valueSize": 1
													}
												],
												"id": 290,
												"nodeType": "InlineAssembly",
												"src": "6422:595:3"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "6217:80:3",
										"text": "@dev Force sends `amount` (in wei) ETH to `to`, with `GAS_STIPEND_NO_GRIEF`."
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceSafeTransferETH",
									"nameLocation": "6311:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6340:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "6332:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6332:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6352:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "6344:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6331:28:3"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6369:0:3"
									},
									"scope": 535,
									"src": "6302:721:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "7182:552:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7244:484:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7394:324:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7419:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"name": "to",
																					"nodeType": "YulIdentifier",
																					"src": "7425:2:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7412:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7412:16:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7412:16:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7492:4:3",
																					"type": "",
																					"value": "0x0b"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7498:4:3",
																					"type": "",
																					"value": "0x73"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "7484:7:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7484:19:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7484:19:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7548:4:3",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7554:4:3",
																					"type": "",
																					"value": "0xff"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "7540:7:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7540:19:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7540:19:3"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7647:34:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "codesize",
																									"nodeType": "YulIdentifier",
																									"src": "7656:8:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7656:10:3"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "codesize",
																									"nodeType": "YulIdentifier",
																									"src": "7668:8:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7668:10:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7649:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7649:30:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7649:30:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "selfbalance",
																								"nodeType": "YulIdentifier",
																								"src": "7619:11:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7619:13:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7634:4:3",
																							"type": "",
																							"value": "0x0b"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7640:4:3",
																							"type": "",
																							"value": "0x16"
																						}
																					],
																					"functionName": {
																						"name": "create",
																						"nodeType": "YulIdentifier",
																						"src": "7612:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7612:33:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "7605:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7605:41:3"
																		},
																		"nodeType": "YulIf",
																		"src": "7602:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "GAS_STIPEND_NO_GRIEF",
																				"nodeType": "YulIdentifier",
																				"src": "7316:20:3"
																			},
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "7338:2:3"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "selfbalance",
																					"nodeType": "YulIdentifier",
																					"src": "7342:11:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7342:13:3"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "codesize",
																					"nodeType": "YulIdentifier",
																					"src": "7357:8:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7357:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7369:4:3",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "codesize",
																					"nodeType": "YulIdentifier",
																					"src": "7375:8:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7375:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7387:4:3",
																				"type": "",
																				"value": "0x00"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nodeType": "YulIdentifier",
																			"src": "7311:4:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7311:81:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7304:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7304:89:3"
															},
															"nodeType": "YulIf",
															"src": "7301:417:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 230,
														"isOffset": false,
														"isSlot": false,
														"src": "7316:20:3",
														"valueSize": 1
													},
													{
														"declaration": 295,
														"isOffset": false,
														"isSlot": false,
														"src": "7338:2:3",
														"valueSize": 1
													},
													{
														"declaration": 295,
														"isOffset": false,
														"isSlot": false,
														"src": "7425:2:3",
														"valueSize": 1
													}
												],
												"id": 298,
												"nodeType": "InlineAssembly",
												"src": "7235:493:3"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "7029:94:3",
										"text": "@dev Force sends all the ETH in the current contract to `to`, with `GAS_STIPEND_NO_GRIEF`."
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceSafeTransferAllETH",
									"nameLocation": "7137:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7169:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "7161:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7161:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7160:12:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7182:0:3"
									},
									"scope": 535,
									"src": "7128:606:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "7939:167:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8001:99:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8015:75:3",
															"value": {
																"arguments": [
																	{
																		"name": "gasStipend",
																		"nodeType": "YulIdentifier",
																		"src": "8031:10:3"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "8043:2:3"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "8047:6:3"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "codesize",
																			"nodeType": "YulIdentifier",
																			"src": "8055:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8055:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8067:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "codesize",
																			"nodeType": "YulIdentifier",
																			"src": "8073:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8073:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8085:4:3",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "8026:4:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8026:64:3"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "8015:7:3"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 305,
														"isOffset": false,
														"isSlot": false,
														"src": "8047:6:3",
														"valueSize": 1
													},
													{
														"declaration": 307,
														"isOffset": false,
														"isSlot": false,
														"src": "8031:10:3",
														"valueSize": 1
													},
													{
														"declaration": 310,
														"isOffset": false,
														"isSlot": false,
														"src": "8015:7:3",
														"valueSize": 1
													},
													{
														"declaration": 303,
														"isOffset": false,
														"isSlot": false,
														"src": "8043:2:3",
														"valueSize": 1
													}
												],
												"id": 312,
												"nodeType": "InlineAssembly",
												"src": "7992:108:3"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "7740:66:3",
										"text": "@dev Sends `amount` (in wei) ETH to `to`, with a `gasStipend`."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferETH",
									"nameLocation": "7820:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7847:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7839:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7839:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7859:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7851:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7851:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "gasStipend",
												"nameLocation": "7875:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7867:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7867:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7838:48:3"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7926:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7921:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7921:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7920:14:3"
									},
									"scope": 535,
									"src": "7811:295:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "8312:174:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8374:106:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8388:82:3",
															"value": {
																"arguments": [
																	{
																		"name": "gasStipend",
																		"nodeType": "YulIdentifier",
																		"src": "8404:10:3"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "8416:2:3"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "selfbalance",
																			"nodeType": "YulIdentifier",
																			"src": "8420:11:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8420:13:3"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "codesize",
																			"nodeType": "YulIdentifier",
																			"src": "8435:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8435:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8447:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "codesize",
																			"nodeType": "YulIdentifier",
																			"src": "8453:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8453:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8465:4:3",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "8399:4:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8399:71:3"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "8388:7:3"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 319,
														"isOffset": false,
														"isSlot": false,
														"src": "8404:10:3",
														"valueSize": 1
													},
													{
														"declaration": 322,
														"isOffset": false,
														"isSlot": false,
														"src": "8388:7:3",
														"valueSize": 1
													},
													{
														"declaration": 317,
														"isOffset": false,
														"isSlot": false,
														"src": "8416:2:3",
														"valueSize": 1
													}
												],
												"id": 324,
												"nodeType": "InlineAssembly",
												"src": "8365:115:3"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "8112:80:3",
										"text": "@dev Sends all the ETH in the current contract to `to`, with a `gasStipend`."
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferAllETH",
									"nameLocation": "8206:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8236:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "8228:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8228:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "gasStipend",
												"nameLocation": "8248:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "8240:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8240:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8227:32:3"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "8294:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 321,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8294:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8293:14:3"
									},
									"scope": 535,
									"src": "8197:289:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "9079:934:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9141:866:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9155:20:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9170:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9164:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9164:11:3"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "9159:1:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9229:4:3",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "9235:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9222:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9222:20:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9222:20:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9294:4:3",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "9300:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9287:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9287:16:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9287:16:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9351:4:3",
																		"type": "",
																		"value": "0x2c"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9361:2:3",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "from",
																				"nodeType": "YulIdentifier",
																				"src": "9365:4:3"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9357:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9357:13:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9344:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9344:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9344:27:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9421:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9427:34:3",
																		"type": "",
																		"value": "0x23b872dd000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9414:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9414:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9414:48:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9519:60:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "9539:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9539:5:3"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "9546:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9553:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9556:4:3",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9562:4:3",
																		"type": "",
																		"value": "0x64"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9568:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9574:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "9534:4:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9534:45:3"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "9523:7:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9636:235:3",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9727:130:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9756:4:3",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9762:10:3",
																								"type": "",
																								"value": "0x7939f424"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "9749:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9749:24:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "9749:24:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9828:4:3",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9834:4:3",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "9821:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9821:18:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "9821:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "token",
																													"nodeType": "YulIdentifier",
																													"src": "9689:5:3"
																												}
																											],
																											"functionName": {
																												"name": "extcodesize",
																												"nodeType": "YulIdentifier",
																												"src": "9677:11:3"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "9677:18:3"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "9670:6:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9670:26:3"
																								},
																								{
																									"arguments": [],
																									"functionName": {
																										"name": "returndatasize",
																										"nodeType": "YulIdentifier",
																										"src": "9698:14:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9698:16:3"
																								}
																							],
																							"functionName": {
																								"name": "or",
																								"nodeType": "YulIdentifier",
																								"src": "9667:2:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9667:48:3"
																						},
																						{
																							"name": "success",
																							"nodeType": "YulIdentifier",
																							"src": "9717:7:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "9664:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9664:61:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "9657:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9657:69:3"
																		},
																		"nodeType": "YulIf",
																		"src": "9654:203:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9615:4:3",
																								"type": "",
																								"value": "0x00"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "9609:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9609:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9622:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "9606:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9606:18:3"
																			},
																			{
																				"name": "success",
																				"nodeType": "YulIdentifier",
																				"src": "9626:7:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9602:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9602:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9595:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9595:40:3"
															},
															"nodeType": "YulIf",
															"src": "9592:279:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9891:4:3",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9897:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9884:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9884:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9884:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9953:4:3",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "9959:1:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9946:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9946:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9946:15:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 335,
														"isOffset": false,
														"isSlot": false,
														"src": "9235:6:3",
														"valueSize": 1
													},
													{
														"declaration": 331,
														"isOffset": false,
														"isSlot": false,
														"src": "9365:4:3",
														"valueSize": 1
													},
													{
														"declaration": 333,
														"isOffset": false,
														"isSlot": false,
														"src": "9300:2:3",
														"valueSize": 1
													},
													{
														"declaration": 329,
														"isOffset": false,
														"isSlot": false,
														"src": "9546:5:3",
														"valueSize": 1
													},
													{
														"declaration": 329,
														"isOffset": false,
														"isSlot": false,
														"src": "9689:5:3",
														"valueSize": 1
													}
												],
												"id": 338,
												"nodeType": "InlineAssembly",
												"src": "9132:875:3"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "8775:207:3",
										"text": "@dev Sends `amount` of ERC20 `token` from `from` to `to`.\n Reverts upon failure.\n The `from` account must have at least `amount` approved for\n the current contract to manage."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "8996:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9021:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "9013:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9013:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9036:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "9028:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9028:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9050:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "9042:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9062:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "9054:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9054:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9012:57:3"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9079:0:3"
									},
									"scope": 535,
									"src": "8987:1026:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "10331:799:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10393:731:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10407:20:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10422:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10416:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10416:11:3"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "10411:1:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10481:4:3",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "10487:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10474:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10474:20:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10474:20:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10546:4:3",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "10552:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10539:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10539:16:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10539:16:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10603:4:3",
																		"type": "",
																		"value": "0x2c"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10613:2:3",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "from",
																				"nodeType": "YulIdentifier",
																				"src": "10617:4:3"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10609:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10609:13:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10596:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10596:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10596:27:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10673:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10679:34:3",
																		"type": "",
																		"value": "0x23b872dd000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10666:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10666:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10666:48:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10771:56:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "10787:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10787:5:3"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "10794:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10801:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10804:4:3",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10810:4:3",
																		"type": "",
																		"value": "0x64"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10816:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10822:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "10782:4:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10782:45:3"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "10771:7:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10884:104:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10902:72:3",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "token",
																											"nodeType": "YulIdentifier",
																											"src": "10938:5:3"
																										}
																									],
																									"functionName": {
																										"name": "extcodesize",
																										"nodeType": "YulIdentifier",
																										"src": "10926:11:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "10926:18:3"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nodeType": "YulIdentifier",
																								"src": "10919:6:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10919:26:3"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "10947:14:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10947:16:3"
																						}
																					],
																					"functionName": {
																						"name": "or",
																						"nodeType": "YulIdentifier",
																						"src": "10916:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10916:48:3"
																				},
																				{
																					"name": "success",
																					"nodeType": "YulIdentifier",
																					"src": "10966:7:3"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "10913:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10913:61:3"
																		},
																		"variableNames": [
																			{
																				"name": "success",
																				"nodeType": "YulIdentifier",
																				"src": "10902:7:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10863:4:3",
																								"type": "",
																								"value": "0x00"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "10857:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10857:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10870:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "10854:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10854:18:3"
																			},
																			{
																				"name": "success",
																				"nodeType": "YulIdentifier",
																				"src": "10874:7:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10850:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10850:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10843:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10843:40:3"
															},
															"nodeType": "YulIf",
															"src": "10840:148:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11008:4:3",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11014:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11001:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11001:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11001:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11070:4:3",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "11076:1:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11063:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11063:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11063:15:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 349,
														"isOffset": false,
														"isSlot": false,
														"src": "10487:6:3",
														"valueSize": 1
													},
													{
														"declaration": 345,
														"isOffset": false,
														"isSlot": false,
														"src": "10617:4:3",
														"valueSize": 1
													},
													{
														"declaration": 352,
														"isOffset": false,
														"isSlot": false,
														"src": "10771:7:3",
														"valueSize": 1
													},
													{
														"declaration": 352,
														"isOffset": false,
														"isSlot": false,
														"src": "10874:7:3",
														"valueSize": 1
													},
													{
														"declaration": 352,
														"isOffset": false,
														"isSlot": false,
														"src": "10902:7:3",
														"valueSize": 1
													},
													{
														"declaration": 352,
														"isOffset": false,
														"isSlot": false,
														"src": "10966:7:3",
														"valueSize": 1
													},
													{
														"declaration": 347,
														"isOffset": false,
														"isSlot": false,
														"src": "10552:2:3",
														"valueSize": 1
													},
													{
														"declaration": 343,
														"isOffset": false,
														"isSlot": false,
														"src": "10794:5:3",
														"valueSize": 1
													},
													{
														"declaration": 343,
														"isOffset": false,
														"isSlot": false,
														"src": "10938:5:3",
														"valueSize": 1
													}
												],
												"id": 354,
												"nodeType": "InlineAssembly",
												"src": "10384:740:3"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "10019:169:3",
										"text": "@dev Sends `amount` of ERC20 `token` from `from` to `to`.\n The `from` account must have at least `amount` approved for the current contract to manage."
									},
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "10202:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "10230:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "10222:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10245:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "10237:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10259:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "10251:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10251:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10271:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "10263:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10263:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10221:57:3"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "10318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "10313:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10313:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10312:14:3"
									},
									"scope": 535,
									"src": "10193:937:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "11462:1547:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "11524:1479:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11538:20:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11553:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11547:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11547:11:3"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "11542:1:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11612:4:3",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "11618:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11605:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11605:16:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11605:16:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11669:4:3",
																		"type": "",
																		"value": "0x2c"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11679:2:3",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "from",
																				"nodeType": "YulIdentifier",
																				"src": "11683:4:3"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11675:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11675:13:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11662:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11662:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11662:27:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11739:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11745:34:3",
																		"type": "",
																		"value": "0x70a08231000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11732:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11732:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11732:48:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12147:118:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12172:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12178:10:3",
																					"type": "",
																					"value": "0x7939f424"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12165:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12165:24:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12165:24:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12240:4:3",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12246:4:3",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12233:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12233:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12233:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "11990:14:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11990:16:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12008:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "11987:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11987:26:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nodeType": "YulIdentifier",
																							"src": "12077:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12077:5:3"
																					},
																					{
																						"name": "token",
																						"nodeType": "YulIdentifier",
																						"src": "12084:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12091:4:3",
																						"type": "",
																						"value": "0x1c"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12097:4:3",
																						"type": "",
																						"value": "0x24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12103:4:3",
																						"type": "",
																						"value": "0x60"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12109:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "staticcall",
																					"nodeType": "YulIdentifier",
																					"src": "12066:10:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12066:48:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11902:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11902:230:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11878:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11878:268:3"
															},
															"nodeType": "YulIf",
															"src": "11875:390:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12285:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12291:10:3",
																		"type": "",
																		"value": "0x23b872dd"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12278:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12278:24:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12278:24:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12359:21:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12375:4:3",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12369:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12369:11:3"
															},
															"variableNames": [
																{
																	"name": "amount",
																	"nodeType": "YulIdentifier",
																	"src": "12359:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12515:60:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "12535:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12535:5:3"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "12542:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12549:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12552:4:3",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12558:4:3",
																		"type": "",
																		"value": "0x64"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12564:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12570:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "12530:4:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12530:45:3"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "12519:7:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12632:235:3",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "12723:130:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12752:4:3",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12758:10:3",
																								"type": "",
																								"value": "0x7939f424"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "12745:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12745:24:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "12745:24:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12824:4:3",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12830:4:3",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "12817:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12817:18:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "12817:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "token",
																													"nodeType": "YulIdentifier",
																													"src": "12685:5:3"
																												}
																											],
																											"functionName": {
																												"name": "extcodesize",
																												"nodeType": "YulIdentifier",
																												"src": "12673:11:3"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "12673:18:3"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "12666:6:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12666:26:3"
																								},
																								{
																									"arguments": [],
																									"functionName": {
																										"name": "returndatasize",
																										"nodeType": "YulIdentifier",
																										"src": "12694:14:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12694:16:3"
																								}
																							],
																							"functionName": {
																								"name": "or",
																								"nodeType": "YulIdentifier",
																								"src": "12663:2:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12663:48:3"
																						},
																						{
																							"name": "success",
																							"nodeType": "YulIdentifier",
																							"src": "12713:7:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "12660:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12660:61:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "12653:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12653:69:3"
																		},
																		"nodeType": "YulIf",
																		"src": "12650:203:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12611:4:3",
																								"type": "",
																								"value": "0x00"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "12605:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12605:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12618:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "12602:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12602:18:3"
																			},
																			{
																				"name": "success",
																				"nodeType": "YulIdentifier",
																				"src": "12622:7:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12598:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12598:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12591:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12591:40:3"
															},
															"nodeType": "YulIf",
															"src": "12588:279:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12887:4:3",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12893:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12880:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12880:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12880:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12949:4:3",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "12955:1:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12942:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12942:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12942:15:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 366,
														"isOffset": false,
														"isSlot": false,
														"src": "12359:6:3",
														"valueSize": 1
													},
													{
														"declaration": 361,
														"isOffset": false,
														"isSlot": false,
														"src": "11683:4:3",
														"valueSize": 1
													},
													{
														"declaration": 363,
														"isOffset": false,
														"isSlot": false,
														"src": "11618:2:3",
														"valueSize": 1
													},
													{
														"declaration": 359,
														"isOffset": false,
														"isSlot": false,
														"src": "12084:5:3",
														"valueSize": 1
													},
													{
														"declaration": 359,
														"isOffset": false,
														"isSlot": false,
														"src": "12542:5:3",
														"valueSize": 1
													},
													{
														"declaration": 359,
														"isOffset": false,
														"isSlot": false,
														"src": "12685:5:3",
														"valueSize": 1
													}
												],
												"id": 368,
												"nodeType": "InlineAssembly",
												"src": "11515:1488:3"
											}
										]
									},
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "11136:197:3",
										"text": "@dev Sends all of ERC20 `token` from `from` to `to`.\n Reverts upon failure.\n The `from` account must have their entire balance approved for the current contract to manage."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferAllFrom",
									"nameLocation": "11347:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "11375:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "11367:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11367:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11390:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "11382:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11382:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11404:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "11396:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11396:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11366:41:3"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11450:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "11442:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11442:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11441:16:3"
									},
									"scope": 535,
									"src": "11338:1671:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "13199:813:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "13261:745:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13282:4:3",
																		"type": "",
																		"value": "0x14"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "13288:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13275:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13275:16:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13275:16:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13339:4:3",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "13345:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13332:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13332:20:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13332:20:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13404:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13410:34:3",
																		"type": "",
																		"value": "0xa9059cbb000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13397:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13397:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13397:48:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13551:60:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "13571:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13571:5:3"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "13578:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13585:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13588:4:3",
																		"type": "",
																		"value": "0x10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13594:4:3",
																		"type": "",
																		"value": "0x44"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13600:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13606:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "13566:4:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13566:45:3"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "13555:7:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13668:231:3",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "13759:126:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13788:4:3",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13794:10:3",
																								"type": "",
																								"value": "0x90b8ec18"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "13781:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13781:24:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "13781:24:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13856:4:3",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13862:4:3",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "13849:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13849:18:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "13849:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "token",
																													"nodeType": "YulIdentifier",
																													"src": "13721:5:3"
																												}
																											],
																											"functionName": {
																												"name": "extcodesize",
																												"nodeType": "YulIdentifier",
																												"src": "13709:11:3"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "13709:18:3"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "13702:6:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13702:26:3"
																								},
																								{
																									"arguments": [],
																									"functionName": {
																										"name": "returndatasize",
																										"nodeType": "YulIdentifier",
																										"src": "13730:14:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13730:16:3"
																								}
																							],
																							"functionName": {
																								"name": "or",
																								"nodeType": "YulIdentifier",
																								"src": "13699:2:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13699:48:3"
																						},
																						{
																							"name": "success",
																							"nodeType": "YulIdentifier",
																							"src": "13749:7:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "13696:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13696:61:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "13689:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13689:69:3"
																		},
																		"nodeType": "YulIf",
																		"src": "13686:199:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13647:4:3",
																								"type": "",
																								"value": "0x00"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "13641:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13641:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13654:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "13638:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13638:18:3"
																			},
																			{
																				"name": "success",
																				"nodeType": "YulIdentifier",
																				"src": "13658:7:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13634:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13634:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13627:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13627:40:3"
															},
															"nodeType": "YulIf",
															"src": "13624:275:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13919:4:3",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13925:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13912:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13912:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13912:15:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 377,
														"isOffset": false,
														"isSlot": false,
														"src": "13345:6:3",
														"valueSize": 1
													},
													{
														"declaration": 375,
														"isOffset": false,
														"isSlot": false,
														"src": "13288:2:3",
														"valueSize": 1
													},
													{
														"declaration": 373,
														"isOffset": false,
														"isSlot": false,
														"src": "13578:5:3",
														"valueSize": 1
													},
													{
														"declaration": 373,
														"isOffset": false,
														"isSlot": false,
														"src": "13721:5:3",
														"valueSize": 1
													}
												],
												"id": 380,
												"nodeType": "InlineAssembly",
												"src": "13252:754:3"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "13015:105:3",
										"text": "@dev Sends `amount` of ERC20 `token` from the current contract to `to`.\n Reverts upon failure."
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "13134:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13155:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "13147:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13147:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13170:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "13162:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13162:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13182:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "13174:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13174:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13146:43:3"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13199:0:3"
									},
									"scope": 535,
									"src": "13125:887:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "14209:1474:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14271:1406:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14292:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14298:10:3",
																		"type": "",
																		"value": "0x70a08231"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14285:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14285:24:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14285:24:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14385:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nodeType": "YulIdentifier",
																			"src": "14391:7:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14391:9:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14378:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14378:23:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14378:23:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14789:114:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14814:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14820:10:3",
																					"type": "",
																					"value": "0x90b8ec18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14807:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14807:24:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14807:24:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14878:4:3",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14884:4:3",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14871:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14871:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14871:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "14632:14:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14632:16:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14650:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "14629:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14629:26:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nodeType": "YulIdentifier",
																							"src": "14719:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14719:5:3"
																					},
																					{
																						"name": "token",
																						"nodeType": "YulIdentifier",
																						"src": "14726:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14733:4:3",
																						"type": "",
																						"value": "0x1c"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14739:4:3",
																						"type": "",
																						"value": "0x24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14745:4:3",
																						"type": "",
																						"value": "0x34"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14751:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "staticcall",
																					"nodeType": "YulIdentifier",
																					"src": "14708:10:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14708:48:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14544:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14544:230:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14520:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14520:268:3"
															},
															"nodeType": "YulIf",
															"src": "14517:386:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14923:4:3",
																		"type": "",
																		"value": "0x14"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "14929:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14916:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14916:16:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14916:16:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14973:21:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14989:4:3",
																		"type": "",
																		"value": "0x34"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14983:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14983:11:3"
															},
															"variableNames": [
																{
																	"name": "amount",
																	"nodeType": "YulIdentifier",
																	"src": "14973:6:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15075:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15081:34:3",
																		"type": "",
																		"value": "0xa9059cbb000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15068:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15068:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15068:48:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15222:60:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "15242:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15242:5:3"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "15249:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15256:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15259:4:3",
																		"type": "",
																		"value": "0x10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15265:4:3",
																		"type": "",
																		"value": "0x44"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15271:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15277:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "15237:4:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15237:45:3"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "15226:7:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15339:231:3",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "15430:126:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15459:4:3",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15465:10:3",
																								"type": "",
																								"value": "0x90b8ec18"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "15452:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15452:24:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "15452:24:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15527:4:3",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15533:4:3",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "15520:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15520:18:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "15520:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "token",
																													"nodeType": "YulIdentifier",
																													"src": "15392:5:3"
																												}
																											],
																											"functionName": {
																												"name": "extcodesize",
																												"nodeType": "YulIdentifier",
																												"src": "15380:11:3"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "15380:18:3"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "15373:6:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "15373:26:3"
																								},
																								{
																									"arguments": [],
																									"functionName": {
																										"name": "returndatasize",
																										"nodeType": "YulIdentifier",
																										"src": "15401:14:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "15401:16:3"
																								}
																							],
																							"functionName": {
																								"name": "or",
																								"nodeType": "YulIdentifier",
																								"src": "15370:2:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15370:48:3"
																						},
																						{
																							"name": "success",
																							"nodeType": "YulIdentifier",
																							"src": "15420:7:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "15367:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15367:61:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "15360:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15360:69:3"
																		},
																		"nodeType": "YulIf",
																		"src": "15357:199:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15318:4:3",
																								"type": "",
																								"value": "0x00"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "15312:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15312:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15325:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "15309:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15309:18:3"
																			},
																			{
																				"name": "success",
																				"nodeType": "YulIdentifier",
																				"src": "15329:7:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15305:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15305:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15298:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15298:40:3"
															},
															"nodeType": "YulIf",
															"src": "15295:275:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15590:4:3",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15596:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15583:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15583:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15583:15:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 390,
														"isOffset": false,
														"isSlot": false,
														"src": "14973:6:3",
														"valueSize": 1
													},
													{
														"declaration": 387,
														"isOffset": false,
														"isSlot": false,
														"src": "14929:2:3",
														"valueSize": 1
													},
													{
														"declaration": 385,
														"isOffset": false,
														"isSlot": false,
														"src": "14726:5:3",
														"valueSize": 1
													},
													{
														"declaration": 385,
														"isOffset": false,
														"isSlot": false,
														"src": "15249:5:3",
														"valueSize": 1
													},
													{
														"declaration": 385,
														"isOffset": false,
														"isSlot": false,
														"src": "15392:5:3",
														"valueSize": 1
													}
												],
												"id": 392,
												"nodeType": "InlineAssembly",
												"src": "14262:1415:3"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "14018:100:3",
										"text": "@dev Sends all of ERC20 `token` from the current contract to `to`.\n Reverts upon failure."
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferAll",
									"nameLocation": "14132:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14156:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "14148:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14148:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14171:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "14163:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14163:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14147:27:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14201:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "14193:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14193:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14192:16:3"
									},
									"scope": 535,
									"src": "14123:1560:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "15890:750:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15952:682:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15973:4:3",
																		"type": "",
																		"value": "0x14"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "15979:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15966:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15966:16:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15966:16:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16030:4:3",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "16036:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16023:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16023:20:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16023:20:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16095:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16101:34:3",
																		"type": "",
																		"value": "0x095ea7b3000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16088:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16088:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16088:48:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16180:60:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "16200:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16200:5:3"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "16207:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16214:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16217:4:3",
																		"type": "",
																		"value": "0x10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16223:4:3",
																		"type": "",
																		"value": "0x44"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16229:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16235:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "16195:4:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16195:45:3"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "16184:7:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16297:230:3",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "16388:125:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16417:4:3",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16423:10:3",
																								"type": "",
																								"value": "0x3e3f8f73"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "16410:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16410:24:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "16410:24:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16484:4:3",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16490:4:3",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "16477:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16477:18:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "16477:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "token",
																													"nodeType": "YulIdentifier",
																													"src": "16350:5:3"
																												}
																											],
																											"functionName": {
																												"name": "extcodesize",
																												"nodeType": "YulIdentifier",
																												"src": "16338:11:3"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "16338:18:3"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "16331:6:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "16331:26:3"
																								},
																								{
																									"arguments": [],
																									"functionName": {
																										"name": "returndatasize",
																										"nodeType": "YulIdentifier",
																										"src": "16359:14:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "16359:16:3"
																								}
																							],
																							"functionName": {
																								"name": "or",
																								"nodeType": "YulIdentifier",
																								"src": "16328:2:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16328:48:3"
																						},
																						{
																							"name": "success",
																							"nodeType": "YulIdentifier",
																							"src": "16378:7:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "16325:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16325:61:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "16318:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16318:69:3"
																		},
																		"nodeType": "YulIf",
																		"src": "16315:198:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16276:4:3",
																								"type": "",
																								"value": "0x00"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "16270:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16270:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16283:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "16267:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16267:18:3"
																			},
																			{
																				"name": "success",
																				"nodeType": "YulIdentifier",
																				"src": "16287:7:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16263:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16263:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16256:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16256:40:3"
															},
															"nodeType": "YulIf",
															"src": "16253:274:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16547:4:3",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16553:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16540:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16540:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16540:15:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 401,
														"isOffset": false,
														"isSlot": false,
														"src": "16036:6:3",
														"valueSize": 1
													},
													{
														"declaration": 399,
														"isOffset": false,
														"isSlot": false,
														"src": "15979:2:3",
														"valueSize": 1
													},
													{
														"declaration": 397,
														"isOffset": false,
														"isSlot": false,
														"src": "16207:5:3",
														"valueSize": 1
													},
													{
														"declaration": 397,
														"isOffset": false,
														"isSlot": false,
														"src": "16350:5:3",
														"valueSize": 1
													}
												],
												"id": 404,
												"nodeType": "InlineAssembly",
												"src": "15943:691:3"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "15689:123:3",
										"text": "@dev Sets `amount` of ERC20 `token` for `to` to manage on behalf of the current contract.\n Reverts upon failure."
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "15826:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "15846:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "15838:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15838:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15861:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "15853:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15853:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15873:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "15865:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15865:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15837:43:3"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15890:0:3"
									},
									"scope": 535,
									"src": "15817:823:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "17033:1625:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "17095:1557:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17116:4:3",
																		"type": "",
																		"value": "0x14"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "17122:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17109:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17109:16:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17109:16:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17173:4:3",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "17179:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17166:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17166:20:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17166:20:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17238:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17244:34:3",
																		"type": "",
																		"value": "0x095ea7b3000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17231:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17231:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17231:48:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17383:60:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "17403:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17403:5:3"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "17410:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17417:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17420:4:3",
																		"type": "",
																		"value": "0x10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17426:4:3",
																		"type": "",
																		"value": "0x44"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17432:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17438:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "17398:4:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17398:45:3"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "17387:7:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17500:1045:3",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "17591:940:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17620:4:3",
																								"type": "",
																								"value": "0x34"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17626:1:3",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "17613:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17613:15:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "17613:15:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17685:4:3",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17691:34:3",
																								"type": "",
																								"value": "0x095ea7b3000000000000000000000000"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "17678:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17678:48:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "17678:48:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [],
																										"functionName": {
																											"name": "gas",
																											"nodeType": "YulIdentifier",
																											"src": "17787:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "17787:5:3"
																									},
																									{
																										"name": "token",
																										"nodeType": "YulIdentifier",
																										"src": "17794:5:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "17801:1:3",
																										"type": "",
																										"value": "0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "17804:4:3",
																										"type": "",
																										"value": "0x10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "17810:4:3",
																										"type": "",
																										"value": "0x44"
																									},
																									{
																										"arguments": [],
																										"functionName": {
																											"name": "codesize",
																											"nodeType": "YulIdentifier",
																											"src": "17816:8:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "17816:10:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "17828:4:3",
																										"type": "",
																										"value": "0x00"
																									}
																								],
																								"functionName": {
																									"name": "call",
																									"nodeType": "YulIdentifier",
																									"src": "17782:4:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "17782:51:3"
																							}
																						],
																						"functionName": {
																							"name": "pop",
																							"nodeType": "YulIdentifier",
																							"src": "17778:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17778:56:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "17778:56:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17885:4:3",
																								"type": "",
																								"value": "0x34"
																							},
																							{
																								"name": "amount",
																								"nodeType": "YulIdentifier",
																								"src": "17891:6:3"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "17878:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17878:20:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "17878:20:3"
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "18023:56:3",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "gas",
																									"nodeType": "YulIdentifier",
																									"src": "18039:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18039:5:3"
																							},
																							{
																								"name": "token",
																								"nodeType": "YulIdentifier",
																								"src": "18046:5:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18053:1:3",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18056:4:3",
																								"type": "",
																								"value": "0x10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18062:4:3",
																								"type": "",
																								"value": "0x44"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18068:4:3",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18074:4:3",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "call",
																							"nodeType": "YulIdentifier",
																							"src": "18034:4:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18034:45:3"
																					},
																					"variableNames": [
																						{
																							"name": "success",
																							"nodeType": "YulIdentifier",
																							"src": "18023:7:3"
																						}
																					]
																				},
																				{
																					"body": {
																						"nodeType": "YulBlock",
																						"src": "18144:369:3",
																						"statements": [
																							{
																								"body": {
																									"nodeType": "YulBlock",
																									"src": "18342:149:3",
																									"statements": [
																										{
																											"expression": {
																												"arguments": [
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "18379:4:3",
																														"type": "",
																														"value": "0x00"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "18385:10:3",
																														"type": "",
																														"value": "0x3e3f8f73"
																													}
																												],
																												"functionName": {
																													"name": "mstore",
																													"nodeType": "YulIdentifier",
																													"src": "18372:6:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "18372:24:3"
																											},
																											"nodeType": "YulExpressionStatement",
																											"src": "18372:24:3"
																										},
																										{
																											"expression": {
																												"arguments": [
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "18454:4:3",
																														"type": "",
																														"value": "0x1c"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "18460:4:3",
																														"type": "",
																														"value": "0x04"
																													}
																												],
																												"functionName": {
																													"name": "revert",
																													"nodeType": "YulIdentifier",
																													"src": "18447:6:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "18447:18:3"
																											},
																											"nodeType": "YulExpressionStatement",
																											"src": "18447:18:3"
																										}
																									]
																								},
																								"condition": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"arguments": [
																																{
																																	"arguments": [
																																		{
																																			"name": "token",
																																			"nodeType": "YulIdentifier",
																																			"src": "18304:5:3"
																																		}
																																	],
																																	"functionName": {
																																		"name": "extcodesize",
																																		"nodeType": "YulIdentifier",
																																		"src": "18292:11:3"
																																	},
																																	"nodeType": "YulFunctionCall",
																																	"src": "18292:18:3"
																																}
																															],
																															"functionName": {
																																"name": "iszero",
																																"nodeType": "YulIdentifier",
																																"src": "18285:6:3"
																															},
																															"nodeType": "YulFunctionCall",
																															"src": "18285:26:3"
																														},
																														{
																															"arguments": [],
																															"functionName": {
																																"name": "returndatasize",
																																"nodeType": "YulIdentifier",
																																"src": "18313:14:3"
																															},
																															"nodeType": "YulFunctionCall",
																															"src": "18313:16:3"
																														}
																													],
																													"functionName": {
																														"name": "or",
																														"nodeType": "YulIdentifier",
																														"src": "18282:2:3"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "18282:48:3"
																												},
																												{
																													"name": "success",
																													"nodeType": "YulIdentifier",
																													"src": "18332:7:3"
																												}
																											],
																											"functionName": {
																												"name": "lt",
																												"nodeType": "YulIdentifier",
																												"src": "18279:2:3"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "18279:61:3"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "18272:6:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "18272:69:3"
																								},
																								"nodeType": "YulIf",
																								"src": "18269:222:3"
																							}
																						]
																					},
																					"condition": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "18123:4:3",
																														"type": "",
																														"value": "0x00"
																													}
																												],
																												"functionName": {
																													"name": "mload",
																													"nodeType": "YulIdentifier",
																													"src": "18117:5:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "18117:11:3"
																											},
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "18130:1:3",
																												"type": "",
																												"value": "1"
																											}
																										],
																										"functionName": {
																											"name": "eq",
																											"nodeType": "YulIdentifier",
																											"src": "18114:2:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "18114:18:3"
																									},
																									{
																										"name": "success",
																										"nodeType": "YulIdentifier",
																										"src": "18134:7:3"
																									}
																								],
																								"functionName": {
																									"name": "and",
																									"nodeType": "YulIdentifier",
																									"src": "18110:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18110:32:3"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "18103:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18103:40:3"
																					},
																					"nodeType": "YulIf",
																					"src": "18100:413:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "token",
																													"nodeType": "YulIdentifier",
																													"src": "17553:5:3"
																												}
																											],
																											"functionName": {
																												"name": "extcodesize",
																												"nodeType": "YulIdentifier",
																												"src": "17541:11:3"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "17541:18:3"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "17534:6:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "17534:26:3"
																								},
																								{
																									"arguments": [],
																									"functionName": {
																										"name": "returndatasize",
																										"nodeType": "YulIdentifier",
																										"src": "17562:14:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "17562:16:3"
																								}
																							],
																							"functionName": {
																								"name": "or",
																								"nodeType": "YulIdentifier",
																								"src": "17531:2:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "17531:48:3"
																						},
																						{
																							"name": "success",
																							"nodeType": "YulIdentifier",
																							"src": "17581:7:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "17528:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17528:61:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "17521:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17521:69:3"
																		},
																		"nodeType": "YulIf",
																		"src": "17518:1013:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17479:4:3",
																								"type": "",
																								"value": "0x00"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "17473:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17473:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17486:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "17470:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17470:18:3"
																			},
																			{
																				"name": "success",
																				"nodeType": "YulIdentifier",
																				"src": "17490:7:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17466:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17466:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17459:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17459:40:3"
															},
															"nodeType": "YulIf",
															"src": "17456:1089:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18565:4:3",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18571:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18558:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "18558:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18558:15:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 413,
														"isOffset": false,
														"isSlot": false,
														"src": "17179:6:3",
														"valueSize": 1
													},
													{
														"declaration": 413,
														"isOffset": false,
														"isSlot": false,
														"src": "17891:6:3",
														"valueSize": 1
													},
													{
														"declaration": 411,
														"isOffset": false,
														"isSlot": false,
														"src": "17122:2:3",
														"valueSize": 1
													},
													{
														"declaration": 409,
														"isOffset": false,
														"isSlot": false,
														"src": "17410:5:3",
														"valueSize": 1
													},
													{
														"declaration": 409,
														"isOffset": false,
														"isSlot": false,
														"src": "17553:5:3",
														"valueSize": 1
													},
													{
														"declaration": 409,
														"isOffset": false,
														"isSlot": false,
														"src": "17794:5:3",
														"valueSize": 1
													},
													{
														"declaration": 409,
														"isOffset": false,
														"isSlot": false,
														"src": "18046:5:3",
														"valueSize": 1
													},
													{
														"declaration": 409,
														"isOffset": false,
														"isSlot": false,
														"src": "18304:5:3",
														"valueSize": 1
													}
												],
												"id": 416,
												"nodeType": "InlineAssembly",
												"src": "17086:1566:3"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "16646:300:3",
										"text": "@dev Sets `amount` of ERC20 `token` for `to` to manage on behalf of the current contract.\n If the initial attempt to approve fails, attempts to reset the approved amount to zero,\n then retries the approval again (some tokens, e.g. USDT, requires this).\n Reverts upon failure."
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApproveWithRetry",
									"nameLocation": "16960:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16989:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "16981:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16981:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17004:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "16996:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17016:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "17008:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16980:43:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17033:0:3"
									},
									"scope": 535,
									"src": "16951:1707:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "18875:649:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18937:581:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18958:4:3",
																		"type": "",
																		"value": "0x14"
																	},
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "18964:7:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18951:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "18951:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18951:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19025:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19031:34:3",
																		"type": "",
																		"value": "0x70a08231000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19018:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "19018:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19018:48:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19104:404:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19221:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "19215:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19215:11:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "19340:14:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19340:16:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19358:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "19337:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19337:26:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nodeType": "YulIdentifier",
																							"src": "19431:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19431:5:3"
																					},
																					{
																						"name": "token",
																						"nodeType": "YulIdentifier",
																						"src": "19438:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19445:4:3",
																						"type": "",
																						"value": "0x10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19451:4:3",
																						"type": "",
																						"value": "0x24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19457:4:3",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19463:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "staticcall",
																					"nodeType": "YulIdentifier",
																					"src": "19420:10:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19420:48:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19248:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19248:242:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "19130:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "19130:378:3"
															},
															"variableNames": [
																{
																	"name": "amount",
																	"nodeType": "YulIdentifier",
																	"src": "19104:6:3"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "18964:7:3",
														"valueSize": 1
													},
													{
														"declaration": 426,
														"isOffset": false,
														"isSlot": false,
														"src": "19104:6:3",
														"valueSize": 1
													},
													{
														"declaration": 421,
														"isOffset": false,
														"isSlot": false,
														"src": "19438:5:3",
														"valueSize": 1
													}
												],
												"id": 428,
												"nodeType": "InlineAssembly",
												"src": "18928:590:3"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "18664:116:3",
										"text": "@dev Returns the amount of ERC20 `token` owned by `account`.\n Returns zero if the `token` does not exist."
									},
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "18794:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18812:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "18804:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18804:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18827:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "18819:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18819:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18803:32:3"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18867:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "18859:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18859:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18858:16:3"
									},
									"scope": 535,
									"src": "18785:739:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "19907:136:3",
										"statements": [
											{
												"condition": {
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "19921:45:3",
													"subExpression": {
														"arguments": [
															{
																"id": 443,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "19942:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 444,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "19949:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 445,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "19955:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 446,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "19959:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 442,
															"name": "trySafeTransferFrom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "19922:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,address,uint256) returns (bool)"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19922:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "IfStatement",
												"src": "19917:120:3",
												"trueBody": {
													"id": 456,
													"nodeType": "Block",
													"src": "19968:69:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 450,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "20002:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 451,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "20009:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 452,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "20015:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 453,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "20019:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 449,
																	"name": "permit2TransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 473,
																	"src": "19982:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19982:44:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 455,
															"nodeType": "ExpressionStatement",
															"src": "19982:44:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "19530:279:3",
										"text": "@dev Sends `amount` of ERC20 `token` from `from` to `to`.\n If the initial attempt fails, try to use Permit2 to transfer the token.\n Reverts upon failure.\n The `from` account must have at least `amount` approved for the current contract to manage."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom2",
									"nameLocation": "19823:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "19849:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "19841:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19841:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19864:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "19856:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19856:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19878:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "19870:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19870:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19890:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "19882:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19882:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19840:57:3"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19907:0:3"
									},
									"scope": 535,
									"src": "19814:229:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "20264:1018:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "20326:950:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20340:20:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20355:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20349:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "20349:11:3"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "20344:1:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "20384:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20387:4:3",
																				"type": "",
																				"value": "0x74"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20380:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20380:12:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20398:2:3",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20406:2:3",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "token",
																						"nodeType": "YulIdentifier",
																						"src": "20410:5:3"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "20402:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20402:14:3"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "20394:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20394:23:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20373:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "20373:45:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20373:45:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "20442:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20445:4:3",
																				"type": "",
																				"value": "0x54"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20438:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20438:12:3"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "20452:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20431:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "20431:28:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20431:28:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "20483:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20486:4:3",
																				"type": "",
																				"value": "0x34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20479:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20479:12:3"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "20493:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20472:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "20472:24:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20472:24:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "20520:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20523:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20516:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20516:12:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20534:2:3",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "from",
																				"nodeType": "YulIdentifier",
																				"src": "20538:4:3"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "20530:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20530:13:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20509:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "20509:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20509:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "20628:1:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20631:34:3",
																		"type": "",
																		"value": "0x36c78516000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20621:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "20621:45:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20621:45:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20679:16:3",
															"value": {
																"name": "PERMIT2",
																"nodeType": "YulIdentifier",
																"src": "20688:7:3"
															},
															"variables": [
																{
																	"name": "p",
																	"nodeType": "YulTypedName",
																	"src": "20683:1:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20708:30:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "chainid",
																			"nodeType": "YulIdentifier",
																			"src": "20725:7:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20725:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20736:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20722:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "20722:16:3"
															},
															"variables": [
																{
																	"name": "exists",
																	"nodeType": "YulTypedName",
																	"src": "20712:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20769:44:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "20771:40:3",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "p",
																									"nodeType": "YulIdentifier",
																									"src": "20807:1:3"
																								}
																							],
																							"functionName": {
																								"name": "extcodesize",
																								"nodeType": "YulIdentifier",
																								"src": "20795:11:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20795:14:3"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nodeType": "YulIdentifier",
																						"src": "20788:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20788:22:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "20781:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20781:30:3"
																		},
																		"variableNames": [
																			{
																				"name": "exists",
																				"nodeType": "YulIdentifier",
																				"src": "20771:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exists",
																		"nodeType": "YulIdentifier",
																		"src": "20761:6:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20754:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "20754:14:3"
															},
															"nodeType": "YulIf",
															"src": "20751:62:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21064:202:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21089:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21095:18:3",
																					"type": "",
																					"value": "0x7939f4248757f0fd"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21082:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21082:32:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21082:32:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "21198:4:3",
																							"type": "",
																							"value": "0x18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "21208:1:3",
																									"type": "",
																									"value": "2"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "21229:3:3",
																															"type": "",
																															"value": "160"
																														},
																														{
																															"name": "amount",
																															"nodeType": "YulIdentifier",
																															"src": "21234:6:3"
																														}
																													],
																													"functionName": {
																														"name": "shr",
																														"nodeType": "YulIdentifier",
																														"src": "21225:3:3"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "21225:16:3"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nodeType": "YulIdentifier",
																												"src": "21218:6:3"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "21218:24:3"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "21211:6:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "21211:32:3"
																								}
																							],
																							"functionName": {
																								"name": "shl",
																								"nodeType": "YulIdentifier",
																								"src": "21204:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "21204:40:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "21194:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21194:51:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21247:4:3",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21187:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21187:65:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21187:65:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nodeType": "YulIdentifier",
																							"src": "20883:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20883:5:3"
																					},
																					{
																						"name": "p",
																						"nodeType": "YulIdentifier",
																						"src": "20890:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20893:1:3",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"arguments": [
																							{
																								"name": "m",
																								"nodeType": "YulIdentifier",
																								"src": "20900:1:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "20903:4:3",
																								"type": "",
																								"value": "0x10"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "20896:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20896:12:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20910:4:3",
																						"type": "",
																						"value": "0x84"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "codesize",
																							"nodeType": "YulIdentifier",
																							"src": "20916:8:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20916:10:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20928:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "call",
																					"nodeType": "YulIdentifier",
																					"src": "20878:4:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20878:55:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "token",
																										"nodeType": "YulIdentifier",
																										"src": "20977:5:3"
																									}
																								],
																								"functionName": {
																									"name": "extcodesize",
																									"nodeType": "YulIdentifier",
																									"src": "20965:11:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20965:18:3"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "20958:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20958:26:3"
																					},
																					{
																						"name": "exists",
																						"nodeType": "YulIdentifier",
																						"src": "20986:6:3"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "20955:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20955:38:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20853:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20853:196:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20829:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "20829:234:3"
															},
															"nodeType": "YulIf",
															"src": "20826:440:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 242,
														"isOffset": false,
														"isSlot": false,
														"src": "20688:7:3",
														"valueSize": 1
													},
													{
														"declaration": 468,
														"isOffset": false,
														"isSlot": false,
														"src": "20452:6:3",
														"valueSize": 1
													},
													{
														"declaration": 468,
														"isOffset": false,
														"isSlot": false,
														"src": "21234:6:3",
														"valueSize": 1
													},
													{
														"declaration": 464,
														"isOffset": false,
														"isSlot": false,
														"src": "20538:4:3",
														"valueSize": 1
													},
													{
														"declaration": 466,
														"isOffset": false,
														"isSlot": false,
														"src": "20493:2:3",
														"valueSize": 1
													},
													{
														"declaration": 462,
														"isOffset": false,
														"isSlot": false,
														"src": "20410:5:3",
														"valueSize": 1
													},
													{
														"declaration": 462,
														"isOffset": false,
														"isSlot": false,
														"src": "20977:5:3",
														"valueSize": 1
													}
												],
												"id": 471,
												"nodeType": "InlineAssembly",
												"src": "20317:959:3"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "20049:103:3",
										"text": "@dev Sends `amount` of ERC20 `token` from `from` to `to` via Permit2.\n Reverts upon failure."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit2TransferFrom",
									"nameLocation": "20166:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "20194:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "20186:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20186:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20209:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "20201:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20223:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "20215:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20215:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "20235:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "20227:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20227:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20185:57:3"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20264:0:3"
									},
									"scope": 535,
									"src": "20157:1125:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "21711:2261:3",
										"statements": [
											{
												"assignments": [
													494
												],
												"declarations": [
													{
														"constant": false,
														"id": 494,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "21726:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "21721:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 493,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "21721:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 495,
												"nodeType": "VariableDeclarationStatement",
												"src": "21721:12:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "21795:2084:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21846:2023:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21871:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21877:10:3",
																					"type": "",
																					"value": "0x3644e515"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21864:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21864:24:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21864:24:3"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "22434:9:3",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "22436:5:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nodeType": "YulLiteral",
																													"src": "22066:4:3",
																													"type": "",
																													"value": "0x00"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nodeType": "YulIdentifier",
																												"src": "22060:5:3"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "22060:11:3"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "22053:6:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "22053:19:3"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [],
																											"functionName": {
																												"name": "returndatasize",
																												"nodeType": "YulIdentifier",
																												"src": "22077:14:3"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "22077:16:3"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "22095:4:3",
																											"type": "",
																											"value": "0x20"
																										}
																									],
																									"functionName": {
																										"name": "eq",
																										"nodeType": "YulIdentifier",
																										"src": "22074:2:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "22074:26:3"
																								}
																							],
																							"functionName": {
																								"name": "lt",
																								"nodeType": "YulIdentifier",
																								"src": "22050:2:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "22050:51:3"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "22357:4:3",
																									"type": "",
																									"value": "5000"
																								},
																								{
																									"name": "token",
																									"nodeType": "YulIdentifier",
																									"src": "22363:5:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "22370:4:3",
																									"type": "",
																									"value": "0x1c"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "22376:4:3",
																									"type": "",
																									"value": "0x04"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "22382:4:3",
																									"type": "",
																									"value": "0x00"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "22388:4:3",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "staticcall",
																								"nodeType": "YulIdentifier",
																								"src": "22346:10:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "22346:47:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "21961:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21961:454:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "21933:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21933:500:3"
																		},
																		"nodeType": "YulIf",
																		"src": "21930:513:3"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "22532:20:3",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22547:4:3",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "22541:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22541:11:3"
																		},
																		"variables": [
																			{
																				"name": "m",
																				"nodeType": "YulTypedName",
																				"src": "22536:1:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "m",
																							"nodeType": "YulIdentifier",
																							"src": "22580:1:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "22583:4:3",
																							"type": "",
																							"value": "0x34"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "22576:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22576:12:3"
																				},
																				{
																					"name": "spender",
																					"nodeType": "YulIdentifier",
																					"src": "22590:7:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "22569:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22569:29:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22569:29:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "m",
																							"nodeType": "YulIdentifier",
																							"src": "22626:1:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "22629:4:3",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "22622:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22622:12:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "22640:2:3",
																							"type": "",
																							"value": "96"
																						},
																						{
																							"name": "owner",
																							"nodeType": "YulIdentifier",
																							"src": "22644:5:3"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "22636:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22636:14:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "22615:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22615:36:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22615:36:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "m",
																							"nodeType": "YulIdentifier",
																							"src": "22679:1:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "22682:4:3",
																							"type": "",
																							"value": "0x74"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "22675:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22675:12:3"
																				},
																				{
																					"name": "deadline",
																					"nodeType": "YulIdentifier",
																					"src": "22689:8:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "22668:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22668:30:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22668:30:3"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "22756:726:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "22785:4:3",
																								"type": "",
																								"value": "0x14"
																							},
																							{
																								"name": "owner",
																								"nodeType": "YulIdentifier",
																								"src": "22791:5:3"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "22778:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "22778:19:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "22778:19:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "22825:4:3",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "22831:34:3",
																								"type": "",
																								"value": "0x7ecebe00000000000000000000000000"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "22818:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "22818:48:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "22818:48:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "m",
																										"nodeType": "YulIdentifier",
																										"src": "22920:1:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "22923:4:3",
																										"type": "",
																										"value": "0x94"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "22916:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "22916:12:3"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [],
																										"functionName": {
																											"name": "gas",
																											"nodeType": "YulIdentifier",
																											"src": "22941:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "22941:5:3"
																									},
																									{
																										"name": "token",
																										"nodeType": "YulIdentifier",
																										"src": "22948:5:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "22955:4:3",
																										"type": "",
																										"value": "0x10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "22961:4:3",
																										"type": "",
																										"value": "0x24"
																									},
																									{
																										"arguments": [
																											{
																												"name": "m",
																												"nodeType": "YulIdentifier",
																												"src": "22971:1:3"
																											},
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "22974:4:3",
																												"type": "",
																												"value": "0x54"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "22967:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "22967:12:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "22981:4:3",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "staticcall",
																									"nodeType": "YulIdentifier",
																									"src": "22930:10:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "22930:56:3"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "22909:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "22909:78:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "22909:78:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "m",
																								"nodeType": "YulIdentifier",
																								"src": "23015:1:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "23018:34:3",
																								"type": "",
																								"value": "0x8fcbaf0c000000000000000000000000"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "23008:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "23008:45:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "23008:45:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "m",
																										"nodeType": "YulIdentifier",
																										"src": "23235:1:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "23238:4:3",
																										"type": "",
																										"value": "0xb4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "23231:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "23231:12:3"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "23249:4:3",
																										"type": "",
																										"value": "0xff"
																									},
																									{
																										"name": "v",
																										"nodeType": "YulIdentifier",
																										"src": "23255:1:3"
																									}
																								],
																								"functionName": {
																									"name": "and",
																									"nodeType": "YulIdentifier",
																									"src": "23245:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "23245:12:3"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "23224:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "23224:34:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "23224:34:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "m",
																										"nodeType": "YulIdentifier",
																										"src": "23290:1:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "23293:4:3",
																										"type": "",
																										"value": "0xd4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "23286:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "23286:12:3"
																							},
																							{
																								"name": "r",
																								"nodeType": "YulIdentifier",
																								"src": "23300:1:3"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "23279:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "23279:23:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "23279:23:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "m",
																										"nodeType": "YulIdentifier",
																										"src": "23334:1:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "23337:4:3",
																										"type": "",
																										"value": "0xf4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "23330:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "23330:12:3"
																							},
																							{
																								"name": "s",
																								"nodeType": "YulIdentifier",
																								"src": "23344:1:3"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "23323:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "23323:23:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "23323:23:3"
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "23367:71:3",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "gas",
																									"nodeType": "YulIdentifier",
																									"src": "23383:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "23383:5:3"
																							},
																							{
																								"name": "token",
																								"nodeType": "YulIdentifier",
																								"src": "23390:5:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "23397:1:3",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"arguments": [
																									{
																										"name": "m",
																										"nodeType": "YulIdentifier",
																										"src": "23404:1:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "23407:4:3",
																										"type": "",
																										"value": "0x10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "23400:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "23400:12:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "23414:5:3",
																								"type": "",
																								"value": "0x104"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "codesize",
																									"nodeType": "YulIdentifier",
																									"src": "23421:8:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "23421:10:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "23433:4:3",
																								"type": "",
																								"value": "0x00"
																							}
																						],
																						"functionName": {
																							"name": "call",
																							"nodeType": "YulIdentifier",
																							"src": "23378:4:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "23378:60:3"
																					},
																					"variableNames": [
																						{
																							"name": "success",
																							"nodeType": "YulIdentifier",
																							"src": "23367:7:3"
																						}
																					]
																				},
																				{
																					"nodeType": "YulBreak",
																					"src": "23459:5:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "22727:4:3",
																							"type": "",
																							"value": "0x00"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "22721:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22721:11:3"
																				},
																				{
																					"name": "DAI_DOMAIN_SEPARATOR",
																					"nodeType": "YulIdentifier",
																					"src": "22734:20:3"
																				}
																			],
																			"functionName": {
																				"name": "eq",
																				"nodeType": "YulIdentifier",
																				"src": "22718:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22718:37:3"
																		},
																		"nodeType": "YulIf",
																		"src": "22715:767:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "m",
																					"nodeType": "YulIdentifier",
																					"src": "23506:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23509:34:3",
																					"type": "",
																					"value": "0xd505accf000000000000000000000000"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "23499:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23499:45:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23499:45:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "m",
																							"nodeType": "YulIdentifier",
																							"src": "23598:1:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "23601:4:3",
																							"type": "",
																							"value": "0x54"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "23594:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23594:12:3"
																				},
																				{
																					"name": "amount",
																					"nodeType": "YulIdentifier",
																					"src": "23608:6:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "23587:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23587:28:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23587:28:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "m",
																							"nodeType": "YulIdentifier",
																							"src": "23643:1:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "23646:4:3",
																							"type": "",
																							"value": "0x94"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "23639:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23639:12:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "23657:4:3",
																							"type": "",
																							"value": "0xff"
																						},
																						{
																							"name": "v",
																							"nodeType": "YulIdentifier",
																							"src": "23663:1:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "23653:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23653:12:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "23632:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23632:34:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23632:34:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "m",
																							"nodeType": "YulIdentifier",
																							"src": "23694:1:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "23697:4:3",
																							"type": "",
																							"value": "0xb4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "23690:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23690:12:3"
																				},
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "23704:1:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "23683:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23683:23:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23683:23:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "m",
																							"nodeType": "YulIdentifier",
																							"src": "23734:1:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "23737:4:3",
																							"type": "",
																							"value": "0xd4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "23730:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23730:12:3"
																				},
																				{
																					"name": "s",
																					"nodeType": "YulIdentifier",
																					"src": "23744:1:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "23723:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23723:23:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23723:23:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "23763:70:3",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "gas",
																						"nodeType": "YulIdentifier",
																						"src": "23779:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23779:5:3"
																				},
																				{
																					"name": "token",
																					"nodeType": "YulIdentifier",
																					"src": "23786:5:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23793:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "m",
																							"nodeType": "YulIdentifier",
																							"src": "23800:1:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "23803:4:3",
																							"type": "",
																							"value": "0x10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "23796:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23796:12:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23810:4:3",
																					"type": "",
																					"value": "0xe4"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "codesize",
																						"nodeType": "YulIdentifier",
																						"src": "23816:8:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23816:10:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23828:4:3",
																					"type": "",
																					"value": "0x00"
																				}
																			],
																			"functionName": {
																				"name": "call",
																				"nodeType": "YulIdentifier",
																				"src": "23774:4:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23774:59:3"
																		},
																		"variableNames": [
																			{
																				"name": "success",
																				"nodeType": "YulIdentifier",
																				"src": "23763:7:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulBreak",
																		"src": "23850:5:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21820:2:3",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"name": "token",
																				"nodeType": "YulIdentifier",
																				"src": "21828:5:3"
																			},
																			{
																				"name": "WETH9",
																				"nodeType": "YulIdentifier",
																				"src": "21835:5:3"
																			}
																		],
																		"functionName": {
																			"name": "xor",
																			"nodeType": "YulIdentifier",
																			"src": "21824:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21824:17:3"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "21816:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "21816:26:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "21843:2:3",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "21813:2:3",
																"statements": []
															},
															"src": "21809:2060:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 234,
														"isOffset": false,
														"isSlot": false,
														"src": "22734:20:3",
														"valueSize": 1
													},
													{
														"declaration": 238,
														"isOffset": false,
														"isSlot": false,
														"src": "21835:5:3",
														"valueSize": 1
													},
													{
														"declaration": 482,
														"isOffset": false,
														"isSlot": false,
														"src": "23608:6:3",
														"valueSize": 1
													},
													{
														"declaration": 484,
														"isOffset": false,
														"isSlot": false,
														"src": "22689:8:3",
														"valueSize": 1
													},
													{
														"declaration": 478,
														"isOffset": false,
														"isSlot": false,
														"src": "22644:5:3",
														"valueSize": 1
													},
													{
														"declaration": 478,
														"isOffset": false,
														"isSlot": false,
														"src": "22791:5:3",
														"valueSize": 1
													},
													{
														"declaration": 488,
														"isOffset": false,
														"isSlot": false,
														"src": "23300:1:3",
														"valueSize": 1
													},
													{
														"declaration": 488,
														"isOffset": false,
														"isSlot": false,
														"src": "23704:1:3",
														"valueSize": 1
													},
													{
														"declaration": 490,
														"isOffset": false,
														"isSlot": false,
														"src": "23344:1:3",
														"valueSize": 1
													},
													{
														"declaration": 490,
														"isOffset": false,
														"isSlot": false,
														"src": "23744:1:3",
														"valueSize": 1
													},
													{
														"declaration": 480,
														"isOffset": false,
														"isSlot": false,
														"src": "22590:7:3",
														"valueSize": 1
													},
													{
														"declaration": 494,
														"isOffset": false,
														"isSlot": false,
														"src": "23367:7:3",
														"valueSize": 1
													},
													{
														"declaration": 494,
														"isOffset": false,
														"isSlot": false,
														"src": "23763:7:3",
														"valueSize": 1
													},
													{
														"declaration": 476,
														"isOffset": false,
														"isSlot": false,
														"src": "21828:5:3",
														"valueSize": 1
													},
													{
														"declaration": 476,
														"isOffset": false,
														"isSlot": false,
														"src": "22363:5:3",
														"valueSize": 1
													},
													{
														"declaration": 476,
														"isOffset": false,
														"isSlot": false,
														"src": "22948:5:3",
														"valueSize": 1
													},
													{
														"declaration": 476,
														"isOffset": false,
														"isSlot": false,
														"src": "23390:5:3",
														"valueSize": 1
													},
													{
														"declaration": 476,
														"isOffset": false,
														"isSlot": false,
														"src": "23786:5:3",
														"valueSize": 1
													},
													{
														"declaration": 486,
														"isOffset": false,
														"isSlot": false,
														"src": "23255:1:3",
														"valueSize": 1
													},
													{
														"declaration": 486,
														"isOffset": false,
														"isSlot": false,
														"src": "23663:1:3",
														"valueSize": 1
													}
												],
												"id": 496,
												"nodeType": "InlineAssembly",
												"src": "21786:2093:3"
											},
											{
												"condition": {
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "23892:8:3",
													"subExpression": {
														"id": 497,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "23893:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 510,
												"nodeType": "IfStatement",
												"src": "23888:77:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 500,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "23916:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 501,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "23923:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 502,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "23930:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 503,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "23939:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 504,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "23947:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 505,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "23957:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 506,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 488,
																"src": "23960:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 507,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "23963:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 499,
															"name": "simplePermit2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "23902:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
																"typeString": "function (address,address,address,uint256,uint256,uint8,bytes32,bytes32)"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23902:63:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 509,
													"nodeType": "ExpressionStatement",
													"src": "23902:63:3"
												}
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "21288:210:3",
										"text": "@dev Permit a user to spend a given amount of\n another user's tokens via native EIP-2612 permit if possible, falling\n back to Permit2 if native permit fails or is not implemented on the token."
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit2",
									"nameLocation": "21512:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21537:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "21529:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21529:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21560:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "21552:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21552:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21583:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "21575:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21575:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21608:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "21600:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21600:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "21632:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "21624:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21624:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "21656:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "21650:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 485,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "21650:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "21675:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "21667:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 487,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21667:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "21694:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "21686:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 489,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21686:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21519:182:3"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21711:0:3"
									},
									"scope": 535,
									"src": "21503:2469:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "24244:2070:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "24306:2002:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24320:20:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24335:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24329:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "24329:11:3"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "24324:1:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "24360:1:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24363:10:3",
																		"type": "",
																		"value": "0x927da105"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24353:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "24353:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24353:21:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "24428:318:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "24446:34:3",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24469:2:3",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24477:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "24473:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24473:6:3"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "24465:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24465:15:3"
																	},
																	"variables": [
																		{
																			"name": "addressMask",
																			"nodeType": "YulTypedName",
																			"src": "24450:11:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "m",
																						"nodeType": "YulIdentifier",
																						"src": "24508:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24511:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24504:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24504:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "addressMask",
																						"nodeType": "YulIdentifier",
																						"src": "24522:11:3"
																					},
																					{
																						"name": "owner",
																						"nodeType": "YulIdentifier",
																						"src": "24535:5:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "24518:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24518:23:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "24497:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24497:45:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "24497:45:3"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "m",
																						"nodeType": "YulIdentifier",
																						"src": "24570:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24573:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24566:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24566:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "addressMask",
																						"nodeType": "YulIdentifier",
																						"src": "24584:11:3"
																					},
																					{
																						"name": "token",
																						"nodeType": "YulIdentifier",
																						"src": "24597:5:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "24580:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24580:23:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "24559:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24559:45:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "24559:45:3"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "m",
																						"nodeType": "YulIdentifier",
																						"src": "24632:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24635:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24628:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24628:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "addressMask",
																						"nodeType": "YulIdentifier",
																						"src": "24646:11:3"
																					},
																					{
																						"name": "spender",
																						"nodeType": "YulIdentifier",
																						"src": "24659:7:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "24642:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24642:25:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "24621:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24621:47:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "24621:47:3"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "m",
																						"nodeType": "YulIdentifier",
																						"src": "24696:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24699:4:3",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24692:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24692:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "addressMask",
																						"nodeType": "YulIdentifier",
																						"src": "24710:11:3"
																					},
																					{
																						"name": "spender",
																						"nodeType": "YulIdentifier",
																						"src": "24723:7:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "24706:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24706:25:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "24685:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24685:47:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "24685:47:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24759:47:3",
															"value": {
																"arguments": [
																	{
																		"name": "PERMIT2",
																		"nodeType": "YulIdentifier",
																		"src": "24772:7:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24792:3:3",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"name": "amount",
																						"nodeType": "YulIdentifier",
																						"src": "24797:6:3"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nodeType": "YulIdentifier",
																					"src": "24788:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24788:16:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "24781:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24781:24:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "24768:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "24768:38:3"
															},
															"variables": [
																{
																	"name": "p",
																	"nodeType": "YulTypedName",
																	"src": "24763:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25125:174:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25150:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25156:18:3",
																					"type": "",
																					"value": "0x6b836e6b8757f0fd"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "25143:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25143:32:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25143:32:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "25254:4:3",
																							"type": "",
																							"value": "0x18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "25264:1:3",
																									"type": "",
																									"value": "2"
																								},
																								{
																									"arguments": [
																										{
																											"name": "p",
																											"nodeType": "YulIdentifier",
																											"src": "25274:1:3"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "25267:6:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "25267:9:3"
																								}
																							],
																							"functionName": {
																								"name": "shl",
																								"nodeType": "YulIdentifier",
																								"src": "25260:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "25260:17:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "25250:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25250:28:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25280:4:3",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "25243:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25243:42:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25243:42:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "24934:14:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "24934:16:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24952:4:3",
																						"type": "",
																						"value": "0x5f"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "24931:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24931:26:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nodeType": "YulIdentifier",
																							"src": "25043:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "25043:5:3"
																					},
																					{
																						"name": "p",
																						"nodeType": "YulIdentifier",
																						"src": "25050:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "m",
																								"nodeType": "YulIdentifier",
																								"src": "25057:1:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "25060:4:3",
																								"type": "",
																								"value": "0x1c"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "25053:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "25053:12:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25067:4:3",
																						"type": "",
																						"value": "0x64"
																					},
																					{
																						"arguments": [
																							{
																								"name": "m",
																								"nodeType": "YulIdentifier",
																								"src": "25077:1:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "25080:4:3",
																								"type": "",
																								"value": "0x60"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "25073:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "25073:12:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25087:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "staticcall",
																					"nodeType": "YulIdentifier",
																					"src": "25032:10:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25032:60:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "24846:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24846:264:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24822:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "24822:302:3"
															},
															"nodeType": "YulIf",
															"src": "24819:480:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "25319:1:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25322:10:3",
																		"type": "",
																		"value": "0x2b67b570"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25312:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "25312:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25312:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "25504:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25507:4:3",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25500:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25500:12:3"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "25514:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25493:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "25493:28:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25493:28:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "25545:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25548:4:3",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25541:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25541:12:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25555:14:3",
																		"type": "",
																		"value": "0xffffffffffff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25534:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "25534:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25534:36:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "25738:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25741:4:3",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25734:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25734:12:3"
																	},
																	{
																		"name": "deadline",
																		"nodeType": "YulIdentifier",
																		"src": "25748:8:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25727:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "25727:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25727:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "25781:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25784:5:3",
																				"type": "",
																				"value": "0x100"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25777:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25777:13:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25792:5:3",
																		"type": "",
																		"value": "0x100"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25770:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "25770:28:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25770:28:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "25845:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25848:5:3",
																				"type": "",
																				"value": "0x120"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25841:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25841:13:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25856:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25834:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "25834:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25834:27:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "25908:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25911:5:3",
																				"type": "",
																				"value": "0x140"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25904:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25904:13:3"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "25919:1:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25897:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "25897:24:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25897:24:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "25945:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25948:5:3",
																				"type": "",
																				"value": "0x160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25941:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25941:13:3"
																	},
																	{
																		"name": "s",
																		"nodeType": "YulIdentifier",
																		"src": "25956:1:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25934:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "25934:24:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25934:24:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "25982:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25985:5:3",
																				"type": "",
																				"value": "0x180"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25978:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25978:13:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25997:3:3",
																				"type": "",
																				"value": "248"
																			},
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "26002:1:3"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "25993:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25993:11:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25971:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "25971:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25971:34:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26185:113:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26210:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26216:10:3",
																					"type": "",
																					"value": "0x6b836e6b"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "26203:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26203:24:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26203:24:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26273:4:3",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26279:4:3",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "26266:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26266:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26266:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "token",
																						"nodeType": "YulIdentifier",
																						"src": "26118:5:3"
																					}
																				],
																				"functionName": {
																					"name": "extcodesize",
																					"nodeType": "YulIdentifier",
																					"src": "26106:11:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26106:18:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nodeType": "YulIdentifier",
																							"src": "26131:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "26131:5:3"
																					},
																					{
																						"name": "p",
																						"nodeType": "YulIdentifier",
																						"src": "26138:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "26141:1:3",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"arguments": [
																							{
																								"name": "m",
																								"nodeType": "YulIdentifier",
																								"src": "26148:1:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "26151:4:3",
																								"type": "",
																								"value": "0x1c"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "26144:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "26144:12:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "26158:5:3",
																						"type": "",
																						"value": "0x184"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "codesize",
																							"nodeType": "YulIdentifier",
																							"src": "26165:8:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "26165:10:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "26177:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "call",
																					"nodeType": "YulIdentifier",
																					"src": "26126:4:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26126:56:3"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "26102:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26102:81:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26021:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "26021:163:3"
															},
															"nodeType": "YulIf",
															"src": "26018:280:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 242,
														"isOffset": false,
														"isSlot": false,
														"src": "24772:7:3",
														"valueSize": 1
													},
													{
														"declaration": 521,
														"isOffset": false,
														"isSlot": false,
														"src": "24797:6:3",
														"valueSize": 1
													},
													{
														"declaration": 521,
														"isOffset": false,
														"isSlot": false,
														"src": "25514:6:3",
														"valueSize": 1
													},
													{
														"declaration": 523,
														"isOffset": false,
														"isSlot": false,
														"src": "25748:8:3",
														"valueSize": 1
													},
													{
														"declaration": 517,
														"isOffset": false,
														"isSlot": false,
														"src": "24535:5:3",
														"valueSize": 1
													},
													{
														"declaration": 527,
														"isOffset": false,
														"isSlot": false,
														"src": "25919:1:3",
														"valueSize": 1
													},
													{
														"declaration": 529,
														"isOffset": false,
														"isSlot": false,
														"src": "25956:1:3",
														"valueSize": 1
													},
													{
														"declaration": 519,
														"isOffset": false,
														"isSlot": false,
														"src": "24659:7:3",
														"valueSize": 1
													},
													{
														"declaration": 519,
														"isOffset": false,
														"isSlot": false,
														"src": "24723:7:3",
														"valueSize": 1
													},
													{
														"declaration": 515,
														"isOffset": false,
														"isSlot": false,
														"src": "24597:5:3",
														"valueSize": 1
													},
													{
														"declaration": 515,
														"isOffset": false,
														"isSlot": false,
														"src": "26118:5:3",
														"valueSize": 1
													},
													{
														"declaration": 525,
														"isOffset": false,
														"isSlot": false,
														"src": "26002:1:3",
														"valueSize": 1
													}
												],
												"id": 532,
												"nodeType": "InlineAssembly",
												"src": "24297:2011:3"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "23978:47:3",
										"text": "@dev Simple permit on the Permit2 contract."
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "simplePermit2",
									"nameLocation": "24039:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "24070:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "24062:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24062:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "24093:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "24085:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24085:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "24116:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "24108:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24141:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "24133:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24133:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "24165:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "24157:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "24189:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "24183:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 524,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "24183:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "24208:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "24200:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 526,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24200:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "24227:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "24219:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 528,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24219:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24052:182:3"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24244:0:3"
									},
									"scope": 535,
									"src": "24030:2284:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 536,
							"src": "579:25737:3",
							"usedErrors": [
								207,
								210,
								213,
								216,
								219,
								222
							]
						}
					],
					"src": "32:26285:3"
				},
				"id": 3
			},
			"src/_Recommend.sol": {
				"ast": {
					"absolutePath": "src/_Recommend.sol",
					"exportedSymbols": {
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							201
						],
						"SafeTransferLib": [
							535
						],
						"_Recommend": [
							733
						]
					},
					"id": 734,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 537,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:4"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
							"file": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
							"id": 539,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 734,
							"sourceUnit": 148,
							"src": "67:82:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 538,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "76:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/solady-main/src/utils/SafeTransferLib.sol",
							"file": "lib/solady-main/src/utils/SafeTransferLib.sol",
							"id": 541,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 734,
							"sourceUnit": 536,
							"src": "151:80:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 540,
										"name": "SafeTransferLib",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 535,
										"src": "160:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/solady-main/src/utils/ReentrancyGuard.sol",
							"file": "lib/solady-main/src/utils/ReentrancyGuard.sol",
							"id": 543,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 734,
							"sourceUnit": 202,
							"src": "233:80:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 542,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 201,
										"src": "242:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 545,
										"name": "Ownable",
										"nameLocations": [
											"428:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "428:7:4"
									},
									"id": 546,
									"nodeType": "InheritanceSpecifier",
									"src": "428:7:4"
								},
								{
									"baseName": {
										"id": 547,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"437:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 201,
										"src": "437:15:4"
									},
									"id": 548,
									"nodeType": "InheritanceSpecifier",
									"src": "437:15:4"
								}
							],
							"canonicalName": "_Recommend",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 544,
								"nodeType": "StructuredDocumentation",
								"src": "317:86:4",
								"text": " @title _Recommend.\n @dev A contract that recommends relevant features."
							},
							"fullyImplemented": true,
							"id": 733,
							"linearizedBaseContracts": [
								733,
								201,
								147,
								177
							],
							"name": "_Recommend",
							"nameLocation": "414:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "6f9c7fcf",
									"id": 550,
									"name": "_NoTokensToClaim",
									"nameLocation": "466:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "482:2:4"
									},
									"src": "460:25:4"
								},
								{
									"errorSelector": "abf01a08",
									"id": 552,
									"name": "_NotSufficientFund",
									"nameLocation": "497:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "515:2:4"
									},
									"src": "491:27:4"
								},
								{
									"errorSelector": "3691d20a",
									"id": 554,
									"name": "_CallerNotEOA",
									"nameLocation": "530:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:4"
									},
									"src": "524:22:4"
								},
								{
									"errorSelector": "2a2bb092",
									"id": 556,
									"name": "_IllegalValue",
									"nameLocation": "558:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "571:2:4"
									},
									"src": "552:22:4"
								},
								{
									"constant": false,
									"functionSelector": "84d24226",
									"id": 560,
									"mutability": "mutable",
									"name": "claimableTokens",
									"nameLocation": "617:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 733,
									"src": "582:50:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 559,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 557,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "590:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "582:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 558,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "601:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f54b893b",
									"id": 564,
									"mutability": "mutable",
									"name": "alreadyClaimed",
									"nameLocation": "674:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 733,
									"src": "639:49:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 563,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 561,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "647:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "639:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 562,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "658:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df0f0951",
									"id": 568,
									"mutability": "mutable",
									"name": "obtainedAmount",
									"nameLocation": "730:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 733,
									"src": "695:49:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 567,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 565,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "703:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "695:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 566,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "714:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e44cec7c",
									"id": 571,
									"mutability": "mutable",
									"name": "recommendAmount",
									"nameLocation": "766:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 733,
									"src": "751:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 569,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "751:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 570,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "784:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "f3cbbad58a635fe73557a2824874af183b5ac83978ae25d57ea4a2011c4df859",
									"id": 577,
									"name": "TokensSet",
									"nameLocation": "800:9:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "826:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "810:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "840:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "832:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "832:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:38:4"
									},
									"src": "794:54:4"
								},
								{
									"anonymous": false,
									"eventSelector": "896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430",
									"id": 583,
									"name": "TokensClaimed",
									"nameLocation": "860:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "890:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "874:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "904:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "896:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "873:38:4"
									},
									"src": "854:58:4"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "954:2:4",
										"statements": []
									},
									"id": 591,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 586,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "942:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "946:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "942:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 588,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 585,
												"name": "Ownable",
												"nameLocations": [
													"934:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "934:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "934:19:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "931:2:4"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "954:0:4"
									},
									"scope": 733,
									"src": "920:36:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "991:2:4",
										"statements": []
									},
									"id": 595,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:2:4"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "991:0:4"
									},
									"scope": 733,
									"src": "964:29:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "1066:61:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 607,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "1109:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 608,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "1113:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 604,
															"name": "SafeTransferLib",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "1077:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$535_$",
																"typeString": "type(library SafeTransferLib)"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1093:15:4",
														"memberName": "safeTransferETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 252,
														"src": "1077:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1077:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "1077:42:4"
											}
										]
									},
									"functionSelector": "099a04e5",
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 602,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 601,
												"name": "onlyOwner",
												"nameLocations": [
													"1056:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1056:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1056:9:4"
										}
									],
									"name": "rescueETH",
									"nameLocation": "1010:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1028:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "1020:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "1032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:27:4"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1066:0:4"
									},
									"scope": 733,
									"src": "1001:126:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "1341:53:4",
										"statements": [
											{
												"expression": {
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 620,
														"name": "recommendAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "1352:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 621,
														"name": "_recommendAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "1370:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1352:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "1352:34:4"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "1135:129:4",
										"text": " @dev The referrer's algebra.\n @param _recommendAmount The reward is returned to the superior algebra."
									},
									"functionSelector": "30710d04",
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 618,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 617,
												"name": "onlyOwner",
												"nameLocations": [
													"1331:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1331:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1331:9:4"
										}
									],
									"name": "setRecommendAmount",
									"nameLocation": "1279:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "_recommendAmount",
												"nameLocation": "1306:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1298:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:26:4"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1341:0:4"
									},
									"scope": 733,
									"src": "1270:124:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "1674:217:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 633,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1689:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1693:5:4",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1689:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 635,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "1702:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1689:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 637,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "1712:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1722:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1712:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1689:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 644,
												"nodeType": "IfStatement",
												"src": "1685:62:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 641,
															"name": "_IllegalValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "1732:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1732:15:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 643,
													"nodeType": "RevertStatement",
													"src": "1725:22:4"
												}
											},
											{
												"expression": {
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 645,
															"name": "claimableTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "1758:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 647,
														"indexExpression": {
															"id": 646,
															"name": "referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "1774:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1758:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 648,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "1787:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1758:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "1758:35:4"
											},
											{
												"expression": {
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 651,
															"name": "obtainedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "1804:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 653,
														"indexExpression": {
															"id": 652,
															"name": "referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "1819:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1804:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 654,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "1832:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1804:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "1804:34:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 658,
															"name": "referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "1866:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "1876:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 657,
														"name": "TokensSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "1856:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1856:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "EmitStatement",
												"src": "1851:32:4"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "1402:187:4",
										"text": " @dev Only bond contracts can set a record of tokens that can be claimed.\n @param referrer The referrer.\n @param amount The quantity that can be claimed."
									},
									"functionSelector": "b43e6a53",
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setClaimableTokens",
									"nameLocation": "1604:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "1631:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "1623:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1649:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "1641:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:34:4"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1674:0:4"
									},
									"scope": 733,
									"src": "1595:296:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "2038:456:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 669,
															"name": "tx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967270,
															"src": "2053:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_transaction",
																"typeString": "tx"
															}
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2056:6:4",
														"memberName": "origin",
														"nodeType": "MemberAccess",
														"src": "2053:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 671,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2066:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2070:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2066:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2053:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 677,
												"nodeType": "IfStatement",
												"src": "2049:51:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 674,
															"name": "_CallerNotEOA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "2085:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2085:15:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 676,
													"nodeType": "RevertStatement",
													"src": "2078:22:4"
												}
											},
											{
												"assignments": [
													679
												],
												"declarations": [
													{
														"constant": false,
														"id": 679,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2119:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "2111:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 678,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2111:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 684,
												"initialValue": {
													"baseExpression": {
														"id": 680,
														"name": "claimableTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "2128:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 683,
													"indexExpression": {
														"expression": {
															"id": 681,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2144:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2148:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2144:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2128:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2111:44:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 685,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "2170:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2180:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2170:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 691,
												"nodeType": "IfStatement",
												"src": "2166:42:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 688,
															"name": "_NoTokensToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "2190:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2190:18:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 690,
													"nodeType": "RevertStatement",
													"src": "2183:25:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 694,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2231:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$__Recommend_$733",
																		"typeString": "contract _Recommend"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$__Recommend_$733",
																		"typeString": "contract _Recommend"
																	}
																],
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2223:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 692,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2223:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2223:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2237:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "2223:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 697,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "2247:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2223:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 702,
												"nodeType": "IfStatement",
												"src": "2219:63:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 699,
															"name": "_NotSufficientFund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "2262:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2262:20:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 701,
													"nodeType": "RevertStatement",
													"src": "2255:27:4"
												}
											},
											{
												"expression": {
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 703,
															"name": "claimableTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "2295:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 706,
														"indexExpression": {
															"expression": {
																"id": 704,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2311:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2315:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2311:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2295:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2325:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2295:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "2295:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 713,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2369:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2373:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2369:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 715,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "2381:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 710,
															"name": "SafeTransferLib",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "2337:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$535_$",
																"typeString": "type(library SafeTransferLib)"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2353:15:4",
														"memberName": "safeTransferETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 252,
														"src": "2337:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2337:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "2337:51:4"
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 718,
															"name": "alreadyClaimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "2399:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 721,
														"indexExpression": {
															"expression": {
																"id": 719,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2414:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2418:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2414:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2399:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 722,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "2429:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2399:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "2399:36:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 726,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2467:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2471:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2467:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "2479:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 725,
														"name": "TokensClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "2453:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2453:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "EmitStatement",
												"src": "2448:38:4"
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "1899:88:4",
										"text": " @dev Has been recorded can claim the corresponding referral reward."
									},
									"functionSelector": "48c54b9d",
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 666,
												"name": "nonReentrant",
												"nameLocations": [
													"2025:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 194,
												"src": "2025:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2025:12:4"
										}
									],
									"name": "claimTokens",
									"nameLocation": "2002:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2013:2:4"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2038:0:4"
									},
									"scope": 733,
									"src": "1993:501:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 734,
							"src": "405:2092:4",
							"usedErrors": [
								13,
								18,
								183,
								550,
								552,
								554,
								556
							]
						}
					],
					"src": "40:2457:4"
				},
				"id": 4
			}
		}
	}
}