{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e787f84c15aa43c79677ccf9b4dacf705cf67880757d8585840ed8a66850ee9d64736f6c63430008140033",
			"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 DUP8 0xF8 0x4C ISZERO 0xAA NUMBER 0xC7 SWAP7 PUSH24 0xCCF9B4DACF705CF67880757D8585840ED8A66850EE9D6473 PUSH16 0x6C634300081400330000000000000000 ",
			"sourceMap": "1352:22982:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1352:22982:1;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e787f84c15aa43c79677ccf9b4dacf705cf67880757d8585840ed8a66850ee9d64736f6c63430008140033",
			"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 DUP8 0xF8 0x4C ISZERO 0xAA NUMBER 0xC7 SWAP7 PUSH24 0xCCF9B4DACF705CF67880757D8585840ED8A66850EE9D6473 PUSH16 0x6C634300081400330000000000000000 ",
			"sourceMap": "1352:22982:1:-:0;;;;;;;;"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "17000",
				"executionCost": "96",
				"totalCost": "17096"
			},
			"internal": {
				"multiProofVerify(bytes32[] memory,bool[] memory,bytes32,bytes32[] memory)": "infinite",
				"multiProofVerify(bytes32[] memory,bool[] memory,bytes32,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32))": "infinite",
				"multiProofVerifyCalldata(bytes32[] calldata,bool[] calldata,bytes32,bytes32[] memory)": "infinite",
				"multiProofVerifyCalldata(bytes32[] calldata,bool[] calldata,bytes32,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32))": "infinite",
				"processMultiProof(bytes32[] memory,bool[] memory,bytes32[] memory)": "infinite",
				"processMultiProof(bytes32[] memory,bool[] memory,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32))": "infinite",
				"processMultiProofCalldata(bytes32[] calldata,bool[] calldata,bytes32[] memory)": "infinite",
				"processMultiProofCalldata(bytes32[] calldata,bool[] calldata,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32))": "infinite",
				"processProof(bytes32[] memory,bytes32)": "infinite",
				"processProof(bytes32[] memory,bytes32,function (bytes32,bytes32) view returns (bytes32))": "infinite",
				"processProofCalldata(bytes32[] calldata,bytes32)": "infinite",
				"processProofCalldata(bytes32[] calldata,bytes32,function (bytes32,bytes32) view returns (bytes32))": "infinite",
				"verify(bytes32[] memory,bytes32,bytes32)": "infinite",
				"verify(bytes32[] memory,bytes32,bytes32,function (bytes32,bytes32) view returns (bytes32))": "infinite",
				"verifyCalldata(bytes32[] calldata,bytes32,bytes32)": "infinite",
				"verifyCalldata(bytes32[] calldata,bytes32,bytes32,function (bytes32,bytes32) view returns (bytes32))": "infinite"
			}
		},
		"methodIdentifiers": {}
	},
	"abi": [
		{
			"inputs": [],
			"name": "MerkleProofInvalidMultiproof",
			"type": "error"
		}
	]
}